Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Goal
Rule 1     Goal -> CompilationUnit
Rule 2     Literal -> DECIMAL_LITERAL
Rule 3     Literal -> HEX_LITERAL
Rule 4     Literal -> BINARY_LITERAL
Rule 5     Literal -> FLOAT_LITERAL
Rule 6     Literal -> BOOL_LITERAL
Rule 7     Literal -> CHAR_LITERAL
Rule 8     Literal -> STRING_LITERAL
Rule 9     Literal -> NULL
Rule 10    Type -> PrimitiveType
Rule 11    Type -> ReferenceType
Rule 12    PrimitiveType -> NumericType
Rule 13    PrimitiveType -> BOOLEAN
Rule 14    NumericType -> IntegralType
Rule 15    NumericType -> FloatingPointType
Rule 16    IntegralType -> BYTE
Rule 17    IntegralType -> SHORT
Rule 18    IntegralType -> INT
Rule 19    IntegralType -> LONG
Rule 20    IntegralType -> CHAR
Rule 21    FloatingPointType -> FLOAT
Rule 22    FloatingPointType -> DOUBLE
Rule 23    ReferenceType -> ArrayType
Rule 24    ReferenceType -> ClassType
Rule 25    ClassType -> Name
Rule 26    ArrayType -> PrimitiveType Dims
Rule 27    ArrayType -> Name Dims
Rule 28    Name -> SimpleName
Rule 29    Name -> QualifiedName
Rule 30    SimpleName -> IDENTIFIER
Rule 31    QualifiedName -> Name DOT IDENTIFIER
Rule 32    CompilationUnit -> PackageDeclaration ImportDeclarations TypeDeclarations
Rule 33    CompilationUnit -> PackageDeclaration ImportDeclarations
Rule 34    CompilationUnit -> PackageDeclaration
Rule 35    CompilationUnit -> PackageDeclaration TypeDeclarations
Rule 36    CompilationUnit -> ImportDeclarations
Rule 37    CompilationUnit -> ImportDeclarations TypeDeclarations
Rule 38    CompilationUnit -> TypeDeclarations
Rule 39    ImportDeclarations -> ImportDeclaration
Rule 40    ImportDeclarations -> ImportDeclarations ImportDeclaration
Rule 41    TypeDeclarations -> TypeDeclaration
Rule 42    TypeDeclarations -> TypeDeclarations TypeDeclaration
Rule 43    PackageDeclaration -> PACKAGE IDENTIFIER SEMI
Rule 44    ImportDeclaration -> SingleTypeImportDeclaration
Rule 45    ImportDeclaration -> TypeImportOnDemandDeclaration
Rule 46    SingleTypeImportDeclaration -> IMPORT import_identifier SEMI
Rule 47    TypeImportOnDemandDeclaration -> IMPORT import_identifier DOT MUL SEMI
Rule 48    import_identifier -> import_identifier DOT IDENTIFIER
Rule 49    import_identifier -> IDENTIFIER
Rule 50    TypeDeclaration -> ClassDeclaration
Rule 51    TypeDeclaration -> SEMI
Rule 52    Modifiers -> Modifier
Rule 53    Modifiers -> Modifiers Modifier
Rule 54    Modifier -> STATIC
Rule 55    Modifier -> FINAL
Rule 56    Modifier -> PRIVATE
Rule 57    Modifier -> PROTECTED
Rule 58    Modifier -> PUBLIC
Rule 59    ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody
Rule 60    ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody
Rule 61    ClassBody -> LBRACE RBRACE
Rule 62    ClassBody -> LBRACE ClassBodyDeclarations RBRACE
Rule 63    ClassBodyDeclarations -> ClassBodyDeclaration
Rule 64    ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration
Rule 65    ClassBodyDeclaration -> ClassMemberDeclaration
Rule 66    ClassBodyDeclaration -> ConstructorDeclaration
Rule 67    ClassBodyDeclaration -> StaticInitializer
Rule 68    ClassMemberDeclaration -> FieldDeclaration
Rule 69    ClassMemberDeclaration -> MethodDeclaration
Rule 70    FieldDeclaration -> Modifiers Type VariableDeclarators SEMI
Rule 71    FieldDeclaration -> Type VariableDeclarators SEMI
Rule 72    VariableDeclarators -> VariableDeclarator
Rule 73    VariableDeclarators -> VariableDeclarators COMMA VariableDeclarator
Rule 74    VariableDeclarator -> VariableDeclaratorId
Rule 75    VariableDeclarator -> VariableDeclaratorId ASSIGN VariableInitializer
Rule 76    VariableDeclaratorId -> IDENTIFIER
Rule 77    VariableDeclaratorId -> IDENTIFIER Dims
Rule 78    VariableInitializer -> Expression
Rule 79    VariableInitializer -> ArrayInitializer
Rule 80    MethodDeclaration -> MethodHeader MethodBody
Rule 81    MethodHeader -> Modifiers Type MethodDeclarator
Rule 82    MethodHeader -> Type MethodDeclarator
Rule 83    MethodHeader -> Modifiers VOID MethodDeclarator
Rule 84    MethodHeader -> VOID MethodDeclarator
Rule 85    MethodDeclarator -> IDENTIFIER LPAREN RPAREN
Rule 86    MethodDeclarator -> IDENTIFIER LPAREN FormalParameterList RPAREN
Rule 87    FormalParameterList -> FormalParameter
Rule 88    FormalParameterList -> FormalParameterList COMMA FormalParameter
Rule 89    FormalParameter -> Type VariableDeclaratorId
Rule 90    MethodBody -> Block
Rule 91    MethodBody -> SEMI
Rule 92    StaticInitializer -> begin_scope STATIC Block end_scope
Rule 93    ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody
Rule 94    ConstructorDeclaration -> ConstructorDeclarator ConstructorBody
Rule 95    ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN
Rule 96    ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN
Rule 97    ConstructorBody -> <empty>
Rule 98    ConstructorBody -> LBRACE BlockStatements RBRACE
Rule 99    ConstructorBody -> LBRACE RBRACE
Rule 100   ExplicitConstructorInvocation -> THIS LPAREN ArgumentList RPAREN SEMI
Rule 101   ExplicitConstructorInvocation -> THIS LPAREN RPAREN SEMI
Rule 102   ArrayInitializer -> LBRACE VariableInitializers RBRACE
Rule 103   ArrayInitializer -> LBRACE RBRACE
Rule 104   VariableInitializers -> VariableInitializer
Rule 105   VariableInitializers -> VariableInitializers COMMA VariableInitializer
Rule 106   Block -> LBRACE RBRACE
Rule 107   Block -> LBRACE BlockStatements RBRACE
Rule 108   BlockStatements -> BlockStatement
Rule 109   BlockStatements -> BlockStatements BlockStatement
Rule 110   BlockStatement -> LocalVariableDeclarationStatement
Rule 111   BlockStatement -> Statement
Rule 112   LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI
Rule 113   LocalVariableDeclaration -> Type VariableDeclarators
Rule 114   Statement -> StatementWithoutTrailingSubstatement
Rule 115   Statement -> LabeledStatement
Rule 116   Statement -> IfThenStatement
Rule 117   Statement -> IfThenElseStatement
Rule 118   Statement -> WhileStatement
Rule 119   Statement -> ForStatement
Rule 120   StatementNoShortIf -> StatementWithoutTrailingSubstatement
Rule 121   StatementNoShortIf -> LabeledStatementNoShortIf
Rule 122   StatementNoShortIf -> IfThenElseStatementNoShortIf
Rule 123   StatementNoShortIf -> WhileStatementNoShortIf
Rule 124   StatementNoShortIf -> ForStatementNoShortIf
Rule 125   StatementWithoutTrailingSubstatement -> Block
Rule 126   StatementWithoutTrailingSubstatement -> EmptyStatement
Rule 127   StatementWithoutTrailingSubstatement -> ExpressionStatement
Rule 128   StatementWithoutTrailingSubstatement -> SwitchStatement
Rule 129   StatementWithoutTrailingSubstatement -> DoStatement
Rule 130   StatementWithoutTrailingSubstatement -> BreakStatement
Rule 131   StatementWithoutTrailingSubstatement -> ContinueStatement
Rule 132   StatementWithoutTrailingSubstatement -> ReturnStatement
Rule 133   EmptyStatement -> SEMI
Rule 134   LabeledStatement -> IDENTIFIER COLON Statement
Rule 135   LabeledStatementNoShortIf -> IDENTIFIER COLON StatementNoShortIf
Rule 136   ExpressionStatement -> StatementExpression SEMI
Rule 137   StatementExpression -> Assignment
Rule 138   StatementExpression -> PreIncrementExpression
Rule 139   StatementExpression -> PreDecrementExpression
Rule 140   StatementExpression -> PostIncrementExpression
Rule 141   StatementExpression -> PostDecrementExpression
Rule 142   StatementExpression -> MethodInvocation
Rule 143   StatementExpression -> ClassInstanceCreationExpression
Rule 144   IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope
Rule 145   IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
Rule 146   IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
Rule 147   SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock
Rule 148   SwitchBlock -> LBRACE RBRACE
Rule 149   SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE
Rule 150   SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE
Rule 151   SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE
Rule 152   SwitchBlockStatementGroups -> SwitchBlockStatementGroup
Rule 153   SwitchBlockStatementGroups -> SwitchBlockStatementGroups SwitchBlockStatementGroup
Rule 154   SwitchBlockStatementGroup -> begin_scope SwitchLabels BlockStatements end_scope
Rule 155   SwitchLabels -> SwitchLabel
Rule 156   SwitchLabels -> SwitchLabels SwitchLabel
Rule 157   SwitchLabel -> CASE ConstantExpression COLON
Rule 158   SwitchLabel -> DEFAULT COLON
Rule 159   WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
Rule 160   WhileStatementNoShortIf -> WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
Rule 161   DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
Rule 162   ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
Rule 163   ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
Rule 164   ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
Rule 165   ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
Rule 166   ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
Rule 167   ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
Rule 168   ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
Rule 169   ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
Rule 170   ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
Rule 171   ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
Rule 172   ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
Rule 173   ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
Rule 174   ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
Rule 175   ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
Rule 176   ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
Rule 177   ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
Rule 178   ForInit -> StatementExpressionList
Rule 179   ForInit -> LocalVariableDeclaration
Rule 180   ForUpdate -> StatementExpressionList
Rule 181   StatementExpressionList -> StatementExpression
Rule 182   StatementExpressionList -> StatementExpressionList COMMA StatementExpression
Rule 183   BreakStatement -> BREAK IDENTIFIER SEMI
Rule 184   BreakStatement -> BREAK SEMI
Rule 185   ContinueStatement -> CONTINUE IDENTIFIER SEMI
Rule 186   ContinueStatement -> CONTINUE SEMI
Rule 187   ReturnStatement -> RETURN Expression SEMI
Rule 188   ReturnStatement -> RETURN SEMI
Rule 189   Primary -> PrimaryNoNewArray
Rule 190   Primary -> ArrayCreationExpression
Rule 191   PrimaryNoNewArray -> Literal
Rule 192   PrimaryNoNewArray -> THIS
Rule 193   PrimaryNoNewArray -> LPAREN Expression RPAREN
Rule 194   PrimaryNoNewArray -> ClassInstanceCreationExpression
Rule 195   PrimaryNoNewArray -> FieldAccess
Rule 196   PrimaryNoNewArray -> MethodInvocation
Rule 197   PrimaryNoNewArray -> ArrayAccess
Rule 198   ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN
Rule 199   ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN
Rule 200   ArgumentList -> Expression
Rule 201   ArgumentList -> ArgumentList COMMA Expression
Rule 202   ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims
Rule 203   ArrayCreationExpression -> NEW PrimitiveType DimExprs
Rule 204   ArrayCreationExpression -> NEW ClassType DimExprs Dims
Rule 205   ArrayCreationExpression -> NEW ClassType DimExprs
Rule 206   DimExprs -> DimExpr
Rule 207   DimExprs -> DimExprs DimExpr
Rule 208   DimExpr -> LBRACK Expression RBRACK
Rule 209   Dims -> LBRACK RBRACK
Rule 210   Dims -> Dims LBRACK RBRACK
Rule 211   FieldAccess -> Primary DOT Name
Rule 212   FieldAccess -> SUPER DOT Name
Rule 213   MethodInvocation -> Name LPAREN ArgumentList RPAREN
Rule 214   MethodInvocation -> Name LPAREN RPAREN
Rule 215   MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
Rule 216   MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN
Rule 217   ArrayAccess -> Name LBRACK Expression RBRACK
Rule 218   ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK
Rule 219   PostfixExpression -> Primary
Rule 220   PostfixExpression -> Name
Rule 221   PostfixExpression -> PostIncrementExpression
Rule 222   PostfixExpression -> PostDecrementExpression
Rule 223   PostIncrementExpression -> PostfixExpression INC
Rule 224   PostDecrementExpression -> PostfixExpression DEC
Rule 225   UnaryExpression -> PreIncrementExpression
Rule 226   UnaryExpression -> PreDecrementExpression
Rule 227   UnaryExpression -> ADD UnaryExpression
Rule 228   UnaryExpression -> SUB UnaryExpression
Rule 229   UnaryExpression -> UnaryExpressionNotAddSub
Rule 230   PreIncrementExpression -> INC UnaryExpression
Rule 231   PreDecrementExpression -> DEC UnaryExpression
Rule 232   UnaryExpressionNotAddSub -> PostfixExpression
Rule 233   UnaryExpressionNotAddSub -> BANG UnaryExpression
Rule 234   UnaryExpressionNotAddSub -> TILDE UnaryExpression
Rule 235   UnaryExpressionNotAddSub -> CastExpression
Rule 236   CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression
Rule 237   CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression
Rule 238   CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub
Rule 239   CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
Rule 240   MultiplicativeExpression -> UnaryExpression
Rule 241   MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression
Rule 242   MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression
Rule 243   MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression
Rule 244   AdditiveExpression -> MultiplicativeExpression
Rule 245   AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression
Rule 246   AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression
Rule 247   ShiftExpression -> AdditiveExpression
Rule 248   ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression
Rule 249   ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression
Rule 250   ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression
Rule 251   RelationalExpression -> ShiftExpression
Rule 252   RelationalExpression -> RelationalExpression LT ShiftExpression
Rule 253   RelationalExpression -> RelationalExpression GT ShiftExpression
Rule 254   RelationalExpression -> RelationalExpression LE ShiftExpression
Rule 255   RelationalExpression -> RelationalExpression GE ShiftExpression
Rule 256   EqualityExpression -> RelationalExpression
Rule 257   EqualityExpression -> EqualityExpression EQUAL RelationalExpression
Rule 258   EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression
Rule 259   AndExpression -> EqualityExpression
Rule 260   AndExpression -> AndExpression BITAND EqualityExpression
Rule 261   ExclusiveOrExpression -> AndExpression
Rule 262   ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression
Rule 263   InclusiveOrExpression -> ExclusiveOrExpression
Rule 264   InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression
Rule 265   ConditionalAndExpression -> InclusiveOrExpression
Rule 266   ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression
Rule 267   ConditionalOrExpression -> ConditionalAndExpression
Rule 268   ConditionalOrExpression -> ConditionalOrExpression OR OrMarker ConditionalAndExpression
Rule 269   ConditionalExpression -> ConditionalOrExpression
Rule 270   ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
Rule 271   AssignmentExpression -> ConditionalExpression
Rule 272   AssignmentExpression -> Assignment
Rule 273   Assignment -> LeftHandSide AssignmentOperator AssignmentExpression
Rule 274   LeftHandSide -> Name
Rule 275   LeftHandSide -> FieldAccess
Rule 276   LeftHandSide -> ArrayAccess
Rule 277   AssignmentOperator -> ASSIGN
Rule 278   AssignmentOperator -> ADD_ASSIGN
Rule 279   AssignmentOperator -> SUB_ASSIGN
Rule 280   AssignmentOperator -> MUL_ASSIGN
Rule 281   AssignmentOperator -> DIV_ASSIGN
Rule 282   AssignmentOperator -> AND_ASSIGN
Rule 283   AssignmentOperator -> OR_ASSIGN
Rule 284   AssignmentOperator -> XOR_ASSIGN
Rule 285   AssignmentOperator -> MOD_ASSIGN
Rule 286   AssignmentOperator -> LSHIFT_ASSIGN
Rule 287   AssignmentOperator -> RSHIFT_ASSIGN
Rule 288   AssignmentOperator -> URSHIFT_ASSIGN
Rule 289   Expression -> AssignmentExpression
Rule 290   ConstantExpression -> Expression
Rule 291   decl_mark -> <empty>
Rule 292   decl_mark_2 -> <empty>
Rule 293   begin_scope -> <empty>
Rule 294   end_scope -> <empty>

Terminals, with rules where they appear

ADD                  : 227 245
ADD_ASSIGN           : 278
AND                  : 266
AND_ASSIGN           : 282
ASSIGN               : 75 277
BANG                 : 233
BINARY_LITERAL       : 4
BITAND               : 260
BITOR                : 264
BOOLEAN              : 13
BOOL_LITERAL         : 6
BREAK                : 183 184
BYTE                 : 16
CARET                : 262
CASE                 : 157
CHAR                 : 20
CHAR_LITERAL         : 7
CLASS                : 59 60
COLON                : 134 135 157 158 270
COMMA                : 73 88 105 182 201
CONTINUE             : 185 186
DEC                  : 224 231
DECIMAL_LITERAL      : 2
DEFAULT              : 158
DIV                  : 242
DIV_ASSIGN           : 281
DO                   : 161
DOT                  : 31 47 48 211 212 215 216
DOUBLE               : 22
ELSE                 : 145 146
EQUAL                : 257
FINAL                : 55
FLOAT                : 21
FLOAT_LITERAL        : 5
FOR                  : 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177
GE                   : 255
GT                   : 253
HEX_LITERAL          : 3
IDENTIFIER           : 30 31 43 48 49 59 60 76 77 85 86 134 135 183 185 215 216
IF                   : 144 145 146
IMPORT               : 46 47
INC                  : 223 230
INT                  : 18
LBRACE               : 61 62 98 99 102 103 106 107 148 149 150 151
LBRACK               : 208 209 210 217 218
LE                   : 254
LONG                 : 19
LPAREN               : 85 86 95 96 100 101 144 145 146 147 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 193 198 199 213 214 215 216 236 237 238 239
LSHIFT               : 248
LSHIFT_ASSIGN        : 286
LT                   : 252
MOD                  : 243
MOD_ASSIGN           : 285
MUL                  : 47 241
MUL_ASSIGN           : 280
NEW                  : 198 199 202 203 204 205
NOTEQUAL             : 258
NULL                 : 9
OR                   : 268
OR_ASSIGN            : 283
PACKAGE              : 43
PRIVATE              : 56
PROTECTED            : 57
PUBLIC               : 58
QUESTION             : 270
RBRACE               : 61 62 98 99 102 103 106 107 148 149 150 151
RBRACK               : 208 209 210 217 218
RETURN               : 187 188
RPAREN               : 85 86 95 96 100 101 144 145 146 147 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 193 198 199 213 214 215 216 236 237 238 239
RSHIFT               : 249
RSHIFT_ASSIGN        : 287
SEMI                 : 43 46 47 51 70 71 91 100 101 112 133 136 161 162 162 163 163 164 164 165 165 166 166 167 167 168 168 169 169 170 170 171 171 172 172 173 173 174 174 175 175 176 176 177 177 183 184 185 186 187 188
SHORT                : 17
STATIC               : 54 92
STRING_LITERAL       : 8
SUB                  : 228 246
SUB_ASSIGN           : 279
SUPER                : 212
SWITCH               : 147
THIS                 : 100 101 192
TILDE                : 234
URSHIFT              : 250
URSHIFT_ASSIGN       : 288
VOID                 : 83 84
WHILE                : 159 160 161
XOR_ASSIGN           : 284
error                : 

Nonterminals, with rules where they appear

AdditiveExpression   : 245 246 247 248 249 250
AndExpression        : 260 261 262
ArgumentList         : 100 199 201 213 215
ArrayAccess          : 197 276
ArrayCreationExpression : 190
ArrayInitializer     : 79
ArrayType            : 23
Assignment           : 137 272
AssignmentExpression : 273 289
AssignmentOperator   : 273
Block                : 90 92 125
BlockStatement       : 108 109
BlockStatements      : 98 107 109 154
BreakStatement       : 130
CastExpression       : 235
ClassBody            : 59 60
ClassBodyDeclaration : 63 64
ClassBodyDeclarations : 62 64
ClassDeclaration     : 50
ClassInstanceCreationExpression : 143 194
ClassMemberDeclaration : 65
ClassType            : 24 198 199 204 205
CompilationUnit      : 1
ConditionalAndExpression : 266 267 268
ConditionalExpression : 270 271
ConditionalOrExpression : 268 269 270
ConstantExpression   : 157
ConstructorBody      : 93 94
ConstructorDeclaration : 66
ConstructorDeclarator : 93 94
ContinueStatement    : 131
DimExpr              : 206 207
DimExprs             : 202 203 204 205 207
Dims                 : 26 27 77 202 204 210 236 239
DoStatement          : 129
EmptyStatement       : 126
EqualityExpression   : 257 258 259 260
ExclusiveOrExpression : 262 263 264
ExplicitConstructorInvocation : 
Expression           : 78 144 145 146 147 159 160 161 162 163 165 167 170 171 173 175 187 193 200 201 208 217 218 238 270 290
ExpressionStatement  : 127
FieldAccess          : 195 275
FieldDeclaration     : 68
FloatingPointType    : 15
ForInit              : 162 164 165 166 170 172 173 174
ForStatement         : 119
ForStatementNoShortIf : 124
ForUpdate            : 162 163 164 168 170 171 172 176
FormalParameter      : 87 88
FormalParameterList  : 86 88 95
Goal                 : 0
IfThenElseStatement  : 117
IfThenElseStatementNoShortIf : 122
IfThenStatement      : 116
ImportDeclaration    : 39 40
ImportDeclarations   : 32 33 36 37 40
InclusiveOrExpression : 264 265 266
IntegralType         : 14
LabeledStatement     : 115
LabeledStatementNoShortIf : 121
LeftHandSide         : 273
Literal              : 191
LocalVariableDeclaration : 112 179
LocalVariableDeclarationStatement : 110
MethodBody           : 80
MethodDeclaration    : 69
MethodDeclarator     : 81 82 83 84
MethodHeader         : 80
MethodInvocation     : 142 196
Modifier             : 52 53
Modifiers            : 53 59 70 81 83 93
MultiplicativeExpression : 241 242 243 244 245 246
Name                 : 25 27 31 211 212 213 214 217 220 239 274
NumericType          : 12
OrMarker             : 268
PackageDeclaration   : 32 33 34 35
PostDecrementExpression : 141 222
PostIncrementExpression : 140 221
PostfixExpression    : 223 224 232
PreDecrementExpression : 139 226
PreIncrementExpression : 138 225
Primary              : 211 215 216 219
PrimaryNoNewArray    : 189 218
PrimitiveType        : 10 26 202 203 236 237
QualifiedName        : 29
ReferenceType        : 11
RelationalExpression : 252 253 254 255 256 257 258
ReturnStatement      : 132
ShiftExpression      : 248 249 250 251 252 253 254 255
SimpleName           : 28 95 96
SingleTypeImportDeclaration : 44
Statement            : 111 134 144 145 159 161 162 163 164 165 166 167 168 169
StatementExpression  : 136 181 182
StatementExpressionList : 178 180 182
StatementNoShortIf   : 135 145 146 146 160 170 171 172 173 174 175 176 177
StatementWithoutTrailingSubstatement : 114 120
StaticInitializer    : 67
SwitchBlock          : 147
SwitchBlockStatementGroup : 152 153
SwitchBlockStatementGroups : 149 150 153
SwitchLabel          : 155 156
SwitchLabels         : 149 151 154 156
SwitchStatement      : 128
Type                 : 70 71 81 82 89 113
TypeDeclaration      : 41 42
TypeDeclarations     : 32 35 37 38 42
TypeImportOnDemandDeclaration : 45
UnaryExpression      : 227 228 230 231 233 234 236 237 240 241 242 243
UnaryExpressionNotAddSub : 229 238 239
VariableDeclarator   : 72 73
VariableDeclaratorId : 74 75 89
VariableDeclarators  : 70 71 73 113
VariableInitializer  : 75 104 105
VariableInitializers : 102 105
WhileStatement       : 118
WhileStatementNoShortIf : 123
begin_scope          : 92 144 145 145 146 146 149 151 154 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177
decl_mark            : 95 96
decl_mark_2          : 59 60
end_scope            : 92 144 145 145 146 146 149 151 154 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177
import_identifier    : 46 47 48

