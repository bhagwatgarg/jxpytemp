Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Goal
Rule 1     Goal -> CompilationUnit
Rule 2     Literal -> DECIMAL_LITERAL
Rule 3     Literal -> HEX_LITERAL
Rule 4     Literal -> BINARY_LITERAL
Rule 5     Literal -> FLOAT_LITERAL
Rule 6     Literal -> BOOL_LITERAL
Rule 7     Literal -> CHAR_LITERAL
Rule 8     Literal -> STRING_LITERAL
Rule 9     Type -> PrimitiveType
Rule 10    Type -> ReferenceType
Rule 11    PrimitiveType -> NumericType
Rule 12    PrimitiveType -> BOOLEAN
Rule 13    NumericType -> IntegralType
Rule 14    NumericType -> FloatingPointType
Rule 15    IntegralType -> BYTE
Rule 16    IntegralType -> SHORT
Rule 17    IntegralType -> INT
Rule 18    IntegralType -> LONG
Rule 19    IntegralType -> CHAR
Rule 20    FloatingPointType -> FLOAT
Rule 21    FloatingPointType -> DOUBLE
Rule 22    ReferenceType -> ArrayType
Rule 23    ReferenceType -> ClassType
Rule 24    ClassType -> Name
Rule 25    ArrayType -> PrimitiveType Dims
Rule 26    ArrayType -> Name Dims
Rule 27    Name -> SimpleName
Rule 28    Name -> QualifiedName
Rule 29    SimpleName -> IDENTIFIER
Rule 30    QualifiedName -> Name DOT IDENTIFIER
Rule 31    CompilationUnit -> PackageDeclaration ImportDeclarations TypeDeclarations
Rule 32    CompilationUnit -> PackageDeclaration ImportDeclarations
Rule 33    CompilationUnit -> PackageDeclaration
Rule 34    CompilationUnit -> PackageDeclaration TypeDeclarations
Rule 35    CompilationUnit -> ImportDeclarations
Rule 36    CompilationUnit -> ImportDeclarations TypeDeclarations
Rule 37    CompilationUnit -> TypeDeclarations
Rule 38    ImportDeclarations -> ImportDeclaration
Rule 39    ImportDeclarations -> ImportDeclarations ImportDeclaration
Rule 40    TypeDeclarations -> TypeDeclaration
Rule 41    TypeDeclarations -> TypeDeclarations TypeDeclaration
Rule 42    PackageDeclaration -> PACKAGE IDENTIFIER SEMI
Rule 43    ImportDeclaration -> SingleTypeImportDeclaration
Rule 44    ImportDeclaration -> TypeImportOnDemandDeclaration
Rule 45    SingleTypeImportDeclaration -> IMPORT IDENTIFIER SEMI
Rule 46    TypeImportOnDemandDeclaration -> IMPORT IDENTIFIER DOT MUL SEMI
Rule 47    TypeDeclaration -> ClassDeclaration
Rule 48    TypeDeclaration -> SEMI
Rule 49    Modifiers -> Modifier
Rule 50    Modifiers -> Modifiers Modifier
Rule 51    Modifier -> STATIC
Rule 52    Modifier -> FINAL
Rule 53    Modifier -> PRIVATE
Rule 54    Modifier -> PROTECTED
Rule 55    Modifier -> PUBLIC
Rule 56    ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody
Rule 57    ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody
Rule 58    ClassBody -> LBRACE RBRACE
Rule 59    ClassBody -> LBRACE ClassBodyDeclarations RBRACE
Rule 60    ClassBodyDeclarations -> ClassBodyDeclaration
Rule 61    ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration
Rule 62    ClassBodyDeclaration -> ClassMemberDeclaration
Rule 63    ClassBodyDeclaration -> ConstructorDeclaration
Rule 64    ClassBodyDeclaration -> StaticInitializer
Rule 65    ClassMemberDeclaration -> FieldDeclaration
Rule 66    ClassMemberDeclaration -> MethodDeclaration
Rule 67    FieldDeclaration -> Modifiers Type VariableDeclarators SEMI
Rule 68    FieldDeclaration -> Type VariableDeclarators SEMI
Rule 69    VariableDeclarators -> VariableDeclarator
Rule 70    VariableDeclarators -> VariableDeclarators COMMA VariableDeclarator
Rule 71    VariableDeclarator -> VariableDeclaratorId
Rule 72    VariableDeclarator -> VariableDeclaratorId ASSIGN VariableInitializer
Rule 73    VariableDeclaratorId -> IDENTIFIER
Rule 74    VariableDeclaratorId -> IDENTIFIER Dims
Rule 75    VariableInitializer -> Expression
Rule 76    VariableInitializer -> ArrayInitializer
Rule 77    MethodDeclaration -> MethodHeader MethodBody
Rule 78    MethodHeader -> Modifiers Type MethodDeclarator
Rule 79    MethodHeader -> Type MethodDeclarator
Rule 80    MethodHeader -> Modifiers VOID MethodDeclarator
Rule 81    MethodHeader -> VOID MethodDeclarator
Rule 82    MethodDeclarator -> IDENTIFIER LPAREN decl_mark RPAREN
Rule 83    MethodDeclarator -> IDENTIFIER LPAREN decl_mark FormalParameterList RPAREN
Rule 84    FormalParameterList -> FormalParameter
Rule 85    FormalParameterList -> FormalParameterList COMMA FormalParameter
Rule 86    FormalParameter -> Type VariableDeclaratorId
Rule 87    MethodBody -> Block
Rule 88    MethodBody -> SEMI
Rule 89    StaticInitializer -> begin_scope STATIC Block end_scope
Rule 90    ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody
Rule 91    ConstructorDeclaration -> ConstructorDeclarator ConstructorBody
Rule 92    ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN
Rule 93    ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN
Rule 94    ConstructorBody -> <empty>
Rule 95    ConstructorBody -> LBRACE BlockStatements RBRACE
Rule 96    ConstructorBody -> LBRACE RBRACE
Rule 97    ExplicitConstructorInvocation -> THIS LPAREN ArgumentList RPAREN SEMI
Rule 98    ExplicitConstructorInvocation -> THIS LPAREN RPAREN SEMI
Rule 99    ArrayInitializer -> LBRACE VariableInitializers RBRACE
Rule 100   ArrayInitializer -> LBRACE RBRACE
Rule 101   VariableInitializers -> VariableInitializer
Rule 102   VariableInitializers -> VariableInitializers COMMA VariableInitializer
Rule 103   Block -> LBRACE RBRACE
Rule 104   Block -> LBRACE BlockStatements RBRACE
Rule 105   BlockStatements -> BlockStatement
Rule 106   BlockStatements -> BlockStatements BlockStatement
Rule 107   BlockStatement -> LocalVariableDeclarationStatement
Rule 108   BlockStatement -> Statement
Rule 109   LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI
Rule 110   LocalVariableDeclaration -> Type VariableDeclarators
Rule 111   Statement -> StatementWithoutTrailingSubstatement
Rule 112   Statement -> LabeledStatement
Rule 113   Statement -> IfThenStatement
Rule 114   Statement -> IfThenElseStatement
Rule 115   Statement -> WhileStatement
Rule 116   Statement -> ForStatement
Rule 117   StatementNoShortIf -> StatementWithoutTrailingSubstatement
Rule 118   StatementNoShortIf -> LabeledStatementNoShortIf
Rule 119   StatementNoShortIf -> IfThenElseStatementNoShortIf
Rule 120   StatementNoShortIf -> WhileStatementNoShortIf
Rule 121   StatementNoShortIf -> ForStatementNoShortIf
Rule 122   StatementWithoutTrailingSubstatement -> Block
Rule 123   StatementWithoutTrailingSubstatement -> EmptyStatement
Rule 124   StatementWithoutTrailingSubstatement -> ExpressionStatement
Rule 125   StatementWithoutTrailingSubstatement -> SwitchStatement
Rule 126   StatementWithoutTrailingSubstatement -> DoStatement
Rule 127   StatementWithoutTrailingSubstatement -> BreakStatement
Rule 128   StatementWithoutTrailingSubstatement -> ContinueStatement
Rule 129   StatementWithoutTrailingSubstatement -> ReturnStatement
Rule 130   EmptyStatement -> SEMI
Rule 131   LabeledStatement -> IDENTIFIER COLON Statement
Rule 132   LabeledStatementNoShortIf -> IDENTIFIER COLON StatementNoShortIf
Rule 133   ExpressionStatement -> StatementExpression SEMI
Rule 134   StatementExpression -> Assignment
Rule 135   StatementExpression -> PreIncrementExpression
Rule 136   StatementExpression -> PreDecrementExpression
Rule 137   StatementExpression -> PostIncrementExpression
Rule 138   StatementExpression -> PostDecrementExpression
Rule 139   StatementExpression -> MethodInvocation
Rule 140   StatementExpression -> ClassInstanceCreationExpression
Rule 141   IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope
Rule 142   IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
Rule 143   IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
Rule 144   SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock
Rule 145   SwitchBlock -> LBRACE RBRACE
Rule 146   SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE
Rule 147   SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE
Rule 148   SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE
Rule 149   SwitchBlockStatementGroups -> SwitchBlockStatementGroup
Rule 150   SwitchBlockStatementGroups -> SwitchBlockStatementGroups SwitchBlockStatementGroup
Rule 151   SwitchBlockStatementGroup -> begin_scope SwitchLabels BlockStatements end_scope
Rule 152   SwitchLabels -> SwitchLabel
Rule 153   SwitchLabels -> SwitchLabels SwitchLabel
Rule 154   SwitchLabel -> CASE ConstantExpression COLON
Rule 155   SwitchLabel -> DEFAULT COLON
Rule 156   WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
Rule 157   WhileStatementNoShortIf -> WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
Rule 158   DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
Rule 159   ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
Rule 160   ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
Rule 161   ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
Rule 162   ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
Rule 163   ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
Rule 164   ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
Rule 165   ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
Rule 166   ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
Rule 167   ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
Rule 168   ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
Rule 169   ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
Rule 170   ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
Rule 171   ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
Rule 172   ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
Rule 173   ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
Rule 174   ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
Rule 175   ForInit -> StatementExpressionList
Rule 176   ForInit -> LocalVariableDeclaration
Rule 177   ForUpdate -> StatementExpressionList
Rule 178   StatementExpressionList -> StatementExpression
Rule 179   StatementExpressionList -> StatementExpressionList COMMA StatementExpression
Rule 180   BreakStatement -> BREAK IDENTIFIER SEMI
Rule 181   BreakStatement -> BREAK SEMI
Rule 182   ContinueStatement -> CONTINUE IDENTIFIER SEMI
Rule 183   ContinueStatement -> CONTINUE SEMI
Rule 184   ReturnStatement -> RETURN Expression SEMI
Rule 185   ReturnStatement -> RETURN SEMI
Rule 186   Primary -> PrimaryNoNewArray
Rule 187   Primary -> ArrayCreationExpression
Rule 188   PrimaryNoNewArray -> Literal
Rule 189   PrimaryNoNewArray -> THIS
Rule 190   PrimaryNoNewArray -> LPAREN Expression RPAREN
Rule 191   PrimaryNoNewArray -> ClassInstanceCreationExpression
Rule 192   PrimaryNoNewArray -> FieldAccess
Rule 193   PrimaryNoNewArray -> MethodInvocation
Rule 194   PrimaryNoNewArray -> ArrayAccess
Rule 195   ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN
Rule 196   ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN
Rule 197   ArgumentList -> Expression
Rule 198   ArgumentList -> ArgumentList COMMA Expression
Rule 199   ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims
Rule 200   ArrayCreationExpression -> NEW PrimitiveType DimExprs
Rule 201   ArrayCreationExpression -> NEW ClassType DimExprs Dims
Rule 202   ArrayCreationExpression -> NEW ClassType DimExprs
Rule 203   DimExprs -> DimExpr
Rule 204   DimExprs -> DimExprs DimExpr
Rule 205   DimExpr -> LBRACK Expression RBRACK
Rule 206   Dims -> LBRACK RBRACK
Rule 207   Dims -> Dims LBRACK RBRACK
Rule 208   FieldAccess -> Primary DOT IDENTIFIER
Rule 209   FieldAccess -> SUPER DOT IDENTIFIER
Rule 210   MethodInvocation -> Name LPAREN ArgumentList RPAREN
Rule 211   MethodInvocation -> Name LPAREN RPAREN
Rule 212   MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
Rule 213   MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN
Rule 214   ArrayAccess -> Name LBRACK Expression RBRACK
Rule 215   ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK
Rule 216   PostfixExpression -> Primary
Rule 217   PostfixExpression -> Name
Rule 218   PostfixExpression -> PostIncrementExpression
Rule 219   PostfixExpression -> PostDecrementExpression
Rule 220   PostIncrementExpression -> PostfixExpression INC
Rule 221   PostDecrementExpression -> PostfixExpression DEC
Rule 222   UnaryExpression -> PreIncrementExpression
Rule 223   UnaryExpression -> PreDecrementExpression
Rule 224   UnaryExpression -> ADD UnaryExpression
Rule 225   UnaryExpression -> SUB UnaryExpression
Rule 226   UnaryExpression -> UnaryExpressionNotAddSub
Rule 227   PreIncrementExpression -> INC UnaryExpression
Rule 228   PreDecrementExpression -> DEC UnaryExpression
Rule 229   UnaryExpressionNotAddSub -> PostfixExpression
Rule 230   UnaryExpressionNotAddSub -> BANG UnaryExpression
Rule 231   UnaryExpressionNotAddSub -> TILDE UnaryExpression
Rule 232   UnaryExpressionNotAddSub -> CastExpression
Rule 233   CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression
Rule 234   CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression
Rule 235   CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub
Rule 236   CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
Rule 237   MultiplicativeExpression -> UnaryExpression
Rule 238   MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression
Rule 239   MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression
Rule 240   MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression
Rule 241   AdditiveExpression -> MultiplicativeExpression
Rule 242   AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression
Rule 243   AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression
Rule 244   ShiftExpression -> AdditiveExpression
Rule 245   ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression
Rule 246   ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression
Rule 247   ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression
Rule 248   RelationalExpression -> ShiftExpression
Rule 249   RelationalExpression -> RelationalExpression LT ShiftExpression
Rule 250   RelationalExpression -> RelationalExpression GT ShiftExpression
Rule 251   RelationalExpression -> RelationalExpression LE ShiftExpression
Rule 252   RelationalExpression -> RelationalExpression GE ShiftExpression
Rule 253   EqualityExpression -> RelationalExpression
Rule 254   EqualityExpression -> EqualityExpression EQUAL RelationalExpression
Rule 255   EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression
Rule 256   AndExpression -> EqualityExpression
Rule 257   AndExpression -> AndExpression BITAND EqualityExpression
Rule 258   ExclusiveOrExpression -> AndExpression
Rule 259   ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression
Rule 260   InclusiveOrExpression -> ExclusiveOrExpression
Rule 261   InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression
Rule 262   ConditionalAndExpression -> InclusiveOrExpression
Rule 263   ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression
Rule 264   ConditionalOrExpression -> ConditionalAndExpression
Rule 265   ConditionalOrExpression -> ConditionalOrExpression OR ConditionalAndExpression
Rule 266   ConditionalExpression -> ConditionalOrExpression
Rule 267   ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
Rule 268   AssignmentExpression -> ConditionalExpression
Rule 269   AssignmentExpression -> Assignment
Rule 270   Assignment -> LeftHandSide AssignmentOperator AssignmentExpression
Rule 271   LeftHandSide -> Name
Rule 272   LeftHandSide -> FieldAccess
Rule 273   LeftHandSide -> ArrayAccess
Rule 274   AssignmentOperator -> ASSIGN
Rule 275   AssignmentOperator -> ADD_ASSIGN
Rule 276   AssignmentOperator -> SUB_ASSIGN
Rule 277   AssignmentOperator -> MUL_ASSIGN
Rule 278   AssignmentOperator -> DIV_ASSIGN
Rule 279   AssignmentOperator -> AND_ASSIGN
Rule 280   AssignmentOperator -> OR_ASSIGN
Rule 281   AssignmentOperator -> XOR_ASSIGN
Rule 282   AssignmentOperator -> MOD_ASSIGN
Rule 283   AssignmentOperator -> LSHIFT_ASSIGN
Rule 284   AssignmentOperator -> RSHIFT_ASSIGN
Rule 285   AssignmentOperator -> URSHIFT_ASSIGN
Rule 286   Expression -> AssignmentExpression
Rule 287   ConstantExpression -> Expression
Rule 288   decl_mark -> <empty>
Rule 289   decl_mark_2 -> <empty>
Rule 290   begin_scope -> <empty>
Rule 291   end_scope -> <empty>

Terminals, with rules where they appear

ADD                  : 224 242
ADD_ASSIGN           : 275
AND                  : 263
AND_ASSIGN           : 279
ASSIGN               : 72 274
BANG                 : 230
BINARY_LITERAL       : 4
BITAND               : 257
BITOR                : 261
BOOLEAN              : 12
BOOL_LITERAL         : 6
BREAK                : 180 181
BYTE                 : 15
CARET                : 259
CASE                 : 154
CHAR                 : 19
CHAR_LITERAL         : 7
CLASS                : 56 57
COLON                : 131 132 154 155 267
COMMA                : 70 85 102 179 198
CONTINUE             : 182 183
DEC                  : 221 228
DECIMAL_LITERAL      : 2
DEFAULT              : 155
DIV                  : 239
DIV_ASSIGN           : 278
DO                   : 158
DOT                  : 30 46 208 209 212 213
DOUBLE               : 21
ELSE                 : 142 143
EQUAL                : 254
FINAL                : 52
FLOAT                : 20
FLOAT_LITERAL        : 5
FOR                  : 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174
GE                   : 252
GT                   : 250
HEX_LITERAL          : 3
IDENTIFIER           : 29 30 42 45 46 56 57 73 74 82 83 131 132 180 182 208 209 212 213
IF                   : 141 142 143
IMPORT               : 45 46
INC                  : 220 227
INT                  : 17
LBRACE               : 58 59 95 96 99 100 103 104 145 146 147 148
LBRACK               : 205 206 207 214 215
LE                   : 251
LONG                 : 18
LPAREN               : 82 83 92 93 97 98 141 142 143 144 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 190 195 196 210 211 212 213 233 234 235 236
LSHIFT               : 245
LSHIFT_ASSIGN        : 283
LT                   : 249
MOD                  : 240
MOD_ASSIGN           : 282
MUL                  : 46 238
MUL_ASSIGN           : 277
NEW                  : 195 196 199 200 201 202
NOTEQUAL             : 255
OR                   : 265
OR_ASSIGN            : 280
PACKAGE              : 42
PRIVATE              : 53
PROTECTED            : 54
PUBLIC               : 55
QUESTION             : 267
RBRACE               : 58 59 95 96 99 100 103 104 145 146 147 148
RBRACK               : 205 206 207 214 215
RETURN               : 184 185
RPAREN               : 82 83 92 93 97 98 141 142 143 144 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 190 195 196 210 211 212 213 233 234 235 236
RSHIFT               : 246
RSHIFT_ASSIGN        : 284
SEMI                 : 42 45 46 48 67 68 88 97 98 109 130 133 158 159 159 160 160 161 161 162 162 163 163 164 164 165 165 166 166 167 167 168 168 169 169 170 170 171 171 172 172 173 173 174 174 180 181 182 183 184 185
SHORT                : 16
STATIC               : 51 89
STRING_LITERAL       : 8
SUB                  : 225 243
SUB_ASSIGN           : 276
SUPER                : 209
SWITCH               : 144
THIS                 : 97 98 189
TILDE                : 231
URSHIFT              : 247
URSHIFT_ASSIGN       : 285
VOID                 : 80 81
WHILE                : 156 157 158
XOR_ASSIGN           : 281
error                : 

Nonterminals, with rules where they appear

AdditiveExpression   : 242 243 244 245 246 247
AndExpression        : 257 258 259
ArgumentList         : 97 196 198 210 212
ArrayAccess          : 194 273
ArrayCreationExpression : 187
ArrayInitializer     : 76
ArrayType            : 22
Assignment           : 134 269
AssignmentExpression : 270 286
AssignmentOperator   : 270
Block                : 87 89 122
BlockStatement       : 105 106
BlockStatements      : 95 104 106 151
BreakStatement       : 127
CastExpression       : 232
ClassBody            : 56 57
ClassBodyDeclaration : 60 61
ClassBodyDeclarations : 59 61
ClassDeclaration     : 47
ClassInstanceCreationExpression : 140 191
ClassMemberDeclaration : 62
ClassType            : 23 195 196 201 202
CompilationUnit      : 1
ConditionalAndExpression : 263 264 265
ConditionalExpression : 267 268
ConditionalOrExpression : 265 266 267
ConstantExpression   : 154
ConstructorBody      : 90 91
ConstructorDeclaration : 63
ConstructorDeclarator : 90 91
ContinueStatement    : 128
DimExpr              : 203 204
DimExprs             : 199 200 201 202 204
Dims                 : 25 26 74 199 201 207 233 236
DoStatement          : 126
EmptyStatement       : 123
EqualityExpression   : 254 255 256 257
ExclusiveOrExpression : 259 260 261
ExplicitConstructorInvocation : 
Expression           : 75 141 142 143 144 156 157 158 159 160 162 164 167 168 170 172 184 190 197 198 205 214 215 235 267 287
ExpressionStatement  : 124
FieldAccess          : 192 272
FieldDeclaration     : 65
FloatingPointType    : 14
ForInit              : 159 161 162 163 167 169 170 171
ForStatement         : 116
ForStatementNoShortIf : 121
ForUpdate            : 159 160 161 165 167 168 169 173
FormalParameter      : 84 85
FormalParameterList  : 83 85 92
Goal                 : 0
IfThenElseStatement  : 114
IfThenElseStatementNoShortIf : 119
IfThenStatement      : 113
ImportDeclaration    : 38 39
ImportDeclarations   : 31 32 35 36 39
InclusiveOrExpression : 261 262 263
IntegralType         : 13
LabeledStatement     : 112
LabeledStatementNoShortIf : 118
LeftHandSide         : 270
Literal              : 188
LocalVariableDeclaration : 109 176
LocalVariableDeclarationStatement : 107
MethodBody           : 77
MethodDeclaration    : 66
MethodDeclarator     : 78 79 80 81
MethodHeader         : 77
MethodInvocation     : 139 193
Modifier             : 49 50
Modifiers            : 50 56 67 78 80 90
MultiplicativeExpression : 238 239 240 241 242 243
Name                 : 24 26 30 210 211 214 217 236 271
NumericType          : 11
PackageDeclaration   : 31 32 33 34
PostDecrementExpression : 138 219
PostIncrementExpression : 137 218
PostfixExpression    : 220 221 229
PreDecrementExpression : 136 223
PreIncrementExpression : 135 222
Primary              : 208 212 213 216
PrimaryNoNewArray    : 186 215
PrimitiveType        : 9 25 199 200 233 234
QualifiedName        : 28
ReferenceType        : 10
RelationalExpression : 249 250 251 252 253 254 255
ReturnStatement      : 129
ShiftExpression      : 245 246 247 248 249 250 251 252
SimpleName           : 27 92 93
SingleTypeImportDeclaration : 43
Statement            : 108 131 141 142 156 158 159 160 161 162 163 164 165 166
StatementExpression  : 133 178 179
StatementExpressionList : 175 177 179
StatementNoShortIf   : 132 142 143 143 157 167 168 169 170 171 172 173 174
StatementWithoutTrailingSubstatement : 111 117
StaticInitializer    : 64
SwitchBlock          : 144
SwitchBlockStatementGroup : 149 150
SwitchBlockStatementGroups : 146 147 150
SwitchLabel          : 152 153
SwitchLabels         : 146 148 151 153
SwitchStatement      : 125
Type                 : 67 68 78 79 86 110
TypeDeclaration      : 40 41
TypeDeclarations     : 31 34 36 37 41
TypeImportOnDemandDeclaration : 44
UnaryExpression      : 224 225 227 228 230 231 233 234 237 238 239 240
UnaryExpressionNotAddSub : 226 235 236
VariableDeclarator   : 69 70
VariableDeclaratorId : 71 72 86
VariableDeclarators  : 67 68 70 110
VariableInitializer  : 72 101 102
VariableInitializers : 99 102
WhileStatement       : 115
WhileStatementNoShortIf : 120
begin_scope          : 89 141 142 142 143 143 146 148 151 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174
decl_mark            : 82 83 92 93
decl_mark_2          : 56 57
end_scope            : 89 141 142 142 143 143 146 148 151 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174

Parsing method: LALR

state 0

    (0) S' -> . Goal
    (1) Goal -> . CompilationUnit
    (31) CompilationUnit -> . PackageDeclaration ImportDeclarations TypeDeclarations
    (32) CompilationUnit -> . PackageDeclaration ImportDeclarations
    (33) CompilationUnit -> . PackageDeclaration
    (34) CompilationUnit -> . PackageDeclaration TypeDeclarations
    (35) CompilationUnit -> . ImportDeclarations
    (36) CompilationUnit -> . ImportDeclarations TypeDeclarations
    (37) CompilationUnit -> . TypeDeclarations
    (42) PackageDeclaration -> . PACKAGE IDENTIFIER SEMI
    (38) ImportDeclarations -> . ImportDeclaration
    (39) ImportDeclarations -> . ImportDeclarations ImportDeclaration
    (40) TypeDeclarations -> . TypeDeclaration
    (41) TypeDeclarations -> . TypeDeclarations TypeDeclaration
    (43) ImportDeclaration -> . SingleTypeImportDeclaration
    (44) ImportDeclaration -> . TypeImportOnDemandDeclaration
    (47) TypeDeclaration -> . ClassDeclaration
    (48) TypeDeclaration -> . SEMI
    (45) SingleTypeImportDeclaration -> . IMPORT IDENTIFIER SEMI
    (46) TypeImportOnDemandDeclaration -> . IMPORT IDENTIFIER DOT MUL SEMI
    (56) ClassDeclaration -> . Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody
    (57) ClassDeclaration -> . CLASS IDENTIFIER decl_mark_2 ClassBody
    (49) Modifiers -> . Modifier
    (50) Modifiers -> . Modifiers Modifier
    (51) Modifier -> . STATIC
    (52) Modifier -> . FINAL
    (53) Modifier -> . PRIVATE
    (54) Modifier -> . PROTECTED
    (55) Modifier -> . PUBLIC

    PACKAGE         shift and go to state 6
    SEMI            shift and go to state 7
    IMPORT          shift and go to state 13
    CLASS           shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21

    Goal                           shift and go to state 1
    CompilationUnit                shift and go to state 2
    PackageDeclaration             shift and go to state 3
    ImportDeclarations             shift and go to state 4
    TypeDeclarations               shift and go to state 5
    ImportDeclaration              shift and go to state 8
    TypeDeclaration                shift and go to state 9
    SingleTypeImportDeclaration    shift and go to state 10
    TypeImportOnDemandDeclaration  shift and go to state 11
    ClassDeclaration               shift and go to state 12
    Modifiers                      shift and go to state 14
    Modifier                       shift and go to state 16

state 1

    (0) S' -> Goal .



state 2

    (1) Goal -> CompilationUnit .

    $end            reduce using rule 1 (Goal -> CompilationUnit .)


state 3

    (31) CompilationUnit -> PackageDeclaration . ImportDeclarations TypeDeclarations
    (32) CompilationUnit -> PackageDeclaration . ImportDeclarations
    (33) CompilationUnit -> PackageDeclaration .
    (34) CompilationUnit -> PackageDeclaration . TypeDeclarations
    (38) ImportDeclarations -> . ImportDeclaration
    (39) ImportDeclarations -> . ImportDeclarations ImportDeclaration
    (40) TypeDeclarations -> . TypeDeclaration
    (41) TypeDeclarations -> . TypeDeclarations TypeDeclaration
    (43) ImportDeclaration -> . SingleTypeImportDeclaration
    (44) ImportDeclaration -> . TypeImportOnDemandDeclaration
    (47) TypeDeclaration -> . ClassDeclaration
    (48) TypeDeclaration -> . SEMI
    (45) SingleTypeImportDeclaration -> . IMPORT IDENTIFIER SEMI
    (46) TypeImportOnDemandDeclaration -> . IMPORT IDENTIFIER DOT MUL SEMI
    (56) ClassDeclaration -> . Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody
    (57) ClassDeclaration -> . CLASS IDENTIFIER decl_mark_2 ClassBody
    (49) Modifiers -> . Modifier
    (50) Modifiers -> . Modifiers Modifier
    (51) Modifier -> . STATIC
    (52) Modifier -> . FINAL
    (53) Modifier -> . PRIVATE
    (54) Modifier -> . PROTECTED
    (55) Modifier -> . PUBLIC

    $end            reduce using rule 33 (CompilationUnit -> PackageDeclaration .)
    SEMI            shift and go to state 7
    IMPORT          shift and go to state 13
    CLASS           shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21

    ImportDeclarations             shift and go to state 22
    TypeDeclarations               shift and go to state 23
    ImportDeclaration              shift and go to state 8
    TypeDeclaration                shift and go to state 9
    SingleTypeImportDeclaration    shift and go to state 10
    TypeImportOnDemandDeclaration  shift and go to state 11
    ClassDeclaration               shift and go to state 12
    Modifiers                      shift and go to state 14
    Modifier                       shift and go to state 16

state 4

    (35) CompilationUnit -> ImportDeclarations .
    (36) CompilationUnit -> ImportDeclarations . TypeDeclarations
    (39) ImportDeclarations -> ImportDeclarations . ImportDeclaration
    (40) TypeDeclarations -> . TypeDeclaration
    (41) TypeDeclarations -> . TypeDeclarations TypeDeclaration
    (43) ImportDeclaration -> . SingleTypeImportDeclaration
    (44) ImportDeclaration -> . TypeImportOnDemandDeclaration
    (47) TypeDeclaration -> . ClassDeclaration
    (48) TypeDeclaration -> . SEMI
    (45) SingleTypeImportDeclaration -> . IMPORT IDENTIFIER SEMI
    (46) TypeImportOnDemandDeclaration -> . IMPORT IDENTIFIER DOT MUL SEMI
    (56) ClassDeclaration -> . Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody
    (57) ClassDeclaration -> . CLASS IDENTIFIER decl_mark_2 ClassBody
    (49) Modifiers -> . Modifier
    (50) Modifiers -> . Modifiers Modifier
    (51) Modifier -> . STATIC
    (52) Modifier -> . FINAL
    (53) Modifier -> . PRIVATE
    (54) Modifier -> . PROTECTED
    (55) Modifier -> . PUBLIC

    $end            reduce using rule 35 (CompilationUnit -> ImportDeclarations .)
    SEMI            shift and go to state 7
    IMPORT          shift and go to state 13
    CLASS           shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21

    TypeDeclarations               shift and go to state 24
    ImportDeclaration              shift and go to state 25
    TypeDeclaration                shift and go to state 9
    SingleTypeImportDeclaration    shift and go to state 10
    TypeImportOnDemandDeclaration  shift and go to state 11
    ClassDeclaration               shift and go to state 12
    Modifiers                      shift and go to state 14
    Modifier                       shift and go to state 16

state 5

    (37) CompilationUnit -> TypeDeclarations .
    (41) TypeDeclarations -> TypeDeclarations . TypeDeclaration
    (47) TypeDeclaration -> . ClassDeclaration
    (48) TypeDeclaration -> . SEMI
    (56) ClassDeclaration -> . Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody
    (57) ClassDeclaration -> . CLASS IDENTIFIER decl_mark_2 ClassBody
    (49) Modifiers -> . Modifier
    (50) Modifiers -> . Modifiers Modifier
    (51) Modifier -> . STATIC
    (52) Modifier -> . FINAL
    (53) Modifier -> . PRIVATE
    (54) Modifier -> . PROTECTED
    (55) Modifier -> . PUBLIC

    $end            reduce using rule 37 (CompilationUnit -> TypeDeclarations .)
    SEMI            shift and go to state 7
    CLASS           shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21

    TypeDeclaration                shift and go to state 26
    ClassDeclaration               shift and go to state 12
    Modifiers                      shift and go to state 14
    Modifier                       shift and go to state 16

state 6

    (42) PackageDeclaration -> PACKAGE . IDENTIFIER SEMI

    IDENTIFIER      shift and go to state 27


state 7

    (48) TypeDeclaration -> SEMI .

    SEMI            reduce using rule 48 (TypeDeclaration -> SEMI .)
    CLASS           reduce using rule 48 (TypeDeclaration -> SEMI .)
    STATIC          reduce using rule 48 (TypeDeclaration -> SEMI .)
    FINAL           reduce using rule 48 (TypeDeclaration -> SEMI .)
    PRIVATE         reduce using rule 48 (TypeDeclaration -> SEMI .)
    PROTECTED       reduce using rule 48 (TypeDeclaration -> SEMI .)
    PUBLIC          reduce using rule 48 (TypeDeclaration -> SEMI .)
    $end            reduce using rule 48 (TypeDeclaration -> SEMI .)


state 8

    (38) ImportDeclarations -> ImportDeclaration .

    SEMI            reduce using rule 38 (ImportDeclarations -> ImportDeclaration .)
    IMPORT          reduce using rule 38 (ImportDeclarations -> ImportDeclaration .)
    CLASS           reduce using rule 38 (ImportDeclarations -> ImportDeclaration .)
    STATIC          reduce using rule 38 (ImportDeclarations -> ImportDeclaration .)
    FINAL           reduce using rule 38 (ImportDeclarations -> ImportDeclaration .)
    PRIVATE         reduce using rule 38 (ImportDeclarations -> ImportDeclaration .)
    PROTECTED       reduce using rule 38 (ImportDeclarations -> ImportDeclaration .)
    PUBLIC          reduce using rule 38 (ImportDeclarations -> ImportDeclaration .)
    $end            reduce using rule 38 (ImportDeclarations -> ImportDeclaration .)


state 9

    (40) TypeDeclarations -> TypeDeclaration .

    SEMI            reduce using rule 40 (TypeDeclarations -> TypeDeclaration .)
    CLASS           reduce using rule 40 (TypeDeclarations -> TypeDeclaration .)
    STATIC          reduce using rule 40 (TypeDeclarations -> TypeDeclaration .)
    FINAL           reduce using rule 40 (TypeDeclarations -> TypeDeclaration .)
    PRIVATE         reduce using rule 40 (TypeDeclarations -> TypeDeclaration .)
    PROTECTED       reduce using rule 40 (TypeDeclarations -> TypeDeclaration .)
    PUBLIC          reduce using rule 40 (TypeDeclarations -> TypeDeclaration .)
    $end            reduce using rule 40 (TypeDeclarations -> TypeDeclaration .)


state 10

    (43) ImportDeclaration -> SingleTypeImportDeclaration .

    SEMI            reduce using rule 43 (ImportDeclaration -> SingleTypeImportDeclaration .)
    IMPORT          reduce using rule 43 (ImportDeclaration -> SingleTypeImportDeclaration .)
    CLASS           reduce using rule 43 (ImportDeclaration -> SingleTypeImportDeclaration .)
    STATIC          reduce using rule 43 (ImportDeclaration -> SingleTypeImportDeclaration .)
    FINAL           reduce using rule 43 (ImportDeclaration -> SingleTypeImportDeclaration .)
    PRIVATE         reduce using rule 43 (ImportDeclaration -> SingleTypeImportDeclaration .)
    PROTECTED       reduce using rule 43 (ImportDeclaration -> SingleTypeImportDeclaration .)
    PUBLIC          reduce using rule 43 (ImportDeclaration -> SingleTypeImportDeclaration .)
    $end            reduce using rule 43 (ImportDeclaration -> SingleTypeImportDeclaration .)


state 11

    (44) ImportDeclaration -> TypeImportOnDemandDeclaration .

    SEMI            reduce using rule 44 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    IMPORT          reduce using rule 44 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    CLASS           reduce using rule 44 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    STATIC          reduce using rule 44 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    FINAL           reduce using rule 44 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    PRIVATE         reduce using rule 44 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    PROTECTED       reduce using rule 44 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    PUBLIC          reduce using rule 44 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    $end            reduce using rule 44 (ImportDeclaration -> TypeImportOnDemandDeclaration .)


state 12

    (47) TypeDeclaration -> ClassDeclaration .

    SEMI            reduce using rule 47 (TypeDeclaration -> ClassDeclaration .)
    CLASS           reduce using rule 47 (TypeDeclaration -> ClassDeclaration .)
    STATIC          reduce using rule 47 (TypeDeclaration -> ClassDeclaration .)
    FINAL           reduce using rule 47 (TypeDeclaration -> ClassDeclaration .)
    PRIVATE         reduce using rule 47 (TypeDeclaration -> ClassDeclaration .)
    PROTECTED       reduce using rule 47 (TypeDeclaration -> ClassDeclaration .)
    PUBLIC          reduce using rule 47 (TypeDeclaration -> ClassDeclaration .)
    $end            reduce using rule 47 (TypeDeclaration -> ClassDeclaration .)


state 13

    (45) SingleTypeImportDeclaration -> IMPORT . IDENTIFIER SEMI
    (46) TypeImportOnDemandDeclaration -> IMPORT . IDENTIFIER DOT MUL SEMI

    IDENTIFIER      shift and go to state 28


state 14

    (56) ClassDeclaration -> Modifiers . CLASS IDENTIFIER decl_mark_2 ClassBody
    (50) Modifiers -> Modifiers . Modifier
    (51) Modifier -> . STATIC
    (52) Modifier -> . FINAL
    (53) Modifier -> . PRIVATE
    (54) Modifier -> . PROTECTED
    (55) Modifier -> . PUBLIC

    CLASS           shift and go to state 29
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21

    Modifier                       shift and go to state 30

state 15

    (57) ClassDeclaration -> CLASS . IDENTIFIER decl_mark_2 ClassBody

    IDENTIFIER      shift and go to state 31


state 16

    (49) Modifiers -> Modifier .

    CLASS           reduce using rule 49 (Modifiers -> Modifier .)
    STATIC          reduce using rule 49 (Modifiers -> Modifier .)
    FINAL           reduce using rule 49 (Modifiers -> Modifier .)
    PRIVATE         reduce using rule 49 (Modifiers -> Modifier .)
    PROTECTED       reduce using rule 49 (Modifiers -> Modifier .)
    PUBLIC          reduce using rule 49 (Modifiers -> Modifier .)
    VOID            reduce using rule 49 (Modifiers -> Modifier .)
    IDENTIFIER      reduce using rule 49 (Modifiers -> Modifier .)
    BOOLEAN         reduce using rule 49 (Modifiers -> Modifier .)
    BYTE            reduce using rule 49 (Modifiers -> Modifier .)
    SHORT           reduce using rule 49 (Modifiers -> Modifier .)
    INT             reduce using rule 49 (Modifiers -> Modifier .)
    LONG            reduce using rule 49 (Modifiers -> Modifier .)
    CHAR            reduce using rule 49 (Modifiers -> Modifier .)
    FLOAT           reduce using rule 49 (Modifiers -> Modifier .)
    DOUBLE          reduce using rule 49 (Modifiers -> Modifier .)


state 17

    (51) Modifier -> STATIC .

    CLASS           reduce using rule 51 (Modifier -> STATIC .)
    STATIC          reduce using rule 51 (Modifier -> STATIC .)
    FINAL           reduce using rule 51 (Modifier -> STATIC .)
    PRIVATE         reduce using rule 51 (Modifier -> STATIC .)
    PROTECTED       reduce using rule 51 (Modifier -> STATIC .)
    PUBLIC          reduce using rule 51 (Modifier -> STATIC .)
    VOID            reduce using rule 51 (Modifier -> STATIC .)
    IDENTIFIER      reduce using rule 51 (Modifier -> STATIC .)
    BOOLEAN         reduce using rule 51 (Modifier -> STATIC .)
    BYTE            reduce using rule 51 (Modifier -> STATIC .)
    SHORT           reduce using rule 51 (Modifier -> STATIC .)
    INT             reduce using rule 51 (Modifier -> STATIC .)
    LONG            reduce using rule 51 (Modifier -> STATIC .)
    CHAR            reduce using rule 51 (Modifier -> STATIC .)
    FLOAT           reduce using rule 51 (Modifier -> STATIC .)
    DOUBLE          reduce using rule 51 (Modifier -> STATIC .)


state 18

    (52) Modifier -> FINAL .

    CLASS           reduce using rule 52 (Modifier -> FINAL .)
    STATIC          reduce using rule 52 (Modifier -> FINAL .)
    FINAL           reduce using rule 52 (Modifier -> FINAL .)
    PRIVATE         reduce using rule 52 (Modifier -> FINAL .)
    PROTECTED       reduce using rule 52 (Modifier -> FINAL .)
    PUBLIC          reduce using rule 52 (Modifier -> FINAL .)
    VOID            reduce using rule 52 (Modifier -> FINAL .)
    IDENTIFIER      reduce using rule 52 (Modifier -> FINAL .)
    BOOLEAN         reduce using rule 52 (Modifier -> FINAL .)
    BYTE            reduce using rule 52 (Modifier -> FINAL .)
    SHORT           reduce using rule 52 (Modifier -> FINAL .)
    INT             reduce using rule 52 (Modifier -> FINAL .)
    LONG            reduce using rule 52 (Modifier -> FINAL .)
    CHAR            reduce using rule 52 (Modifier -> FINAL .)
    FLOAT           reduce using rule 52 (Modifier -> FINAL .)
    DOUBLE          reduce using rule 52 (Modifier -> FINAL .)


state 19

    (53) Modifier -> PRIVATE .

    CLASS           reduce using rule 53 (Modifier -> PRIVATE .)
    STATIC          reduce using rule 53 (Modifier -> PRIVATE .)
    FINAL           reduce using rule 53 (Modifier -> PRIVATE .)
    PRIVATE         reduce using rule 53 (Modifier -> PRIVATE .)
    PROTECTED       reduce using rule 53 (Modifier -> PRIVATE .)
    PUBLIC          reduce using rule 53 (Modifier -> PRIVATE .)
    VOID            reduce using rule 53 (Modifier -> PRIVATE .)
    IDENTIFIER      reduce using rule 53 (Modifier -> PRIVATE .)
    BOOLEAN         reduce using rule 53 (Modifier -> PRIVATE .)
    BYTE            reduce using rule 53 (Modifier -> PRIVATE .)
    SHORT           reduce using rule 53 (Modifier -> PRIVATE .)
    INT             reduce using rule 53 (Modifier -> PRIVATE .)
    LONG            reduce using rule 53 (Modifier -> PRIVATE .)
    CHAR            reduce using rule 53 (Modifier -> PRIVATE .)
    FLOAT           reduce using rule 53 (Modifier -> PRIVATE .)
    DOUBLE          reduce using rule 53 (Modifier -> PRIVATE .)


state 20

    (54) Modifier -> PROTECTED .

    CLASS           reduce using rule 54 (Modifier -> PROTECTED .)
    STATIC          reduce using rule 54 (Modifier -> PROTECTED .)
    FINAL           reduce using rule 54 (Modifier -> PROTECTED .)
    PRIVATE         reduce using rule 54 (Modifier -> PROTECTED .)
    PROTECTED       reduce using rule 54 (Modifier -> PROTECTED .)
    PUBLIC          reduce using rule 54 (Modifier -> PROTECTED .)
    VOID            reduce using rule 54 (Modifier -> PROTECTED .)
    IDENTIFIER      reduce using rule 54 (Modifier -> PROTECTED .)
    BOOLEAN         reduce using rule 54 (Modifier -> PROTECTED .)
    BYTE            reduce using rule 54 (Modifier -> PROTECTED .)
    SHORT           reduce using rule 54 (Modifier -> PROTECTED .)
    INT             reduce using rule 54 (Modifier -> PROTECTED .)
    LONG            reduce using rule 54 (Modifier -> PROTECTED .)
    CHAR            reduce using rule 54 (Modifier -> PROTECTED .)
    FLOAT           reduce using rule 54 (Modifier -> PROTECTED .)
    DOUBLE          reduce using rule 54 (Modifier -> PROTECTED .)


state 21

    (55) Modifier -> PUBLIC .

    CLASS           reduce using rule 55 (Modifier -> PUBLIC .)
    STATIC          reduce using rule 55 (Modifier -> PUBLIC .)
    FINAL           reduce using rule 55 (Modifier -> PUBLIC .)
    PRIVATE         reduce using rule 55 (Modifier -> PUBLIC .)
    PROTECTED       reduce using rule 55 (Modifier -> PUBLIC .)
    PUBLIC          reduce using rule 55 (Modifier -> PUBLIC .)
    VOID            reduce using rule 55 (Modifier -> PUBLIC .)
    IDENTIFIER      reduce using rule 55 (Modifier -> PUBLIC .)
    BOOLEAN         reduce using rule 55 (Modifier -> PUBLIC .)
    BYTE            reduce using rule 55 (Modifier -> PUBLIC .)
    SHORT           reduce using rule 55 (Modifier -> PUBLIC .)
    INT             reduce using rule 55 (Modifier -> PUBLIC .)
    LONG            reduce using rule 55 (Modifier -> PUBLIC .)
    CHAR            reduce using rule 55 (Modifier -> PUBLIC .)
    FLOAT           reduce using rule 55 (Modifier -> PUBLIC .)
    DOUBLE          reduce using rule 55 (Modifier -> PUBLIC .)


state 22

    (31) CompilationUnit -> PackageDeclaration ImportDeclarations . TypeDeclarations
    (32) CompilationUnit -> PackageDeclaration ImportDeclarations .
    (39) ImportDeclarations -> ImportDeclarations . ImportDeclaration
    (40) TypeDeclarations -> . TypeDeclaration
    (41) TypeDeclarations -> . TypeDeclarations TypeDeclaration
    (43) ImportDeclaration -> . SingleTypeImportDeclaration
    (44) ImportDeclaration -> . TypeImportOnDemandDeclaration
    (47) TypeDeclaration -> . ClassDeclaration
    (48) TypeDeclaration -> . SEMI
    (45) SingleTypeImportDeclaration -> . IMPORT IDENTIFIER SEMI
    (46) TypeImportOnDemandDeclaration -> . IMPORT IDENTIFIER DOT MUL SEMI
    (56) ClassDeclaration -> . Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody
    (57) ClassDeclaration -> . CLASS IDENTIFIER decl_mark_2 ClassBody
    (49) Modifiers -> . Modifier
    (50) Modifiers -> . Modifiers Modifier
    (51) Modifier -> . STATIC
    (52) Modifier -> . FINAL
    (53) Modifier -> . PRIVATE
    (54) Modifier -> . PROTECTED
    (55) Modifier -> . PUBLIC

    $end            reduce using rule 32 (CompilationUnit -> PackageDeclaration ImportDeclarations .)
    SEMI            shift and go to state 7
    IMPORT          shift and go to state 13
    CLASS           shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21

    TypeDeclarations               shift and go to state 32
    ImportDeclaration              shift and go to state 25
    TypeDeclaration                shift and go to state 9
    SingleTypeImportDeclaration    shift and go to state 10
    TypeImportOnDemandDeclaration  shift and go to state 11
    ClassDeclaration               shift and go to state 12
    Modifiers                      shift and go to state 14
    Modifier                       shift and go to state 16

state 23

    (34) CompilationUnit -> PackageDeclaration TypeDeclarations .
    (41) TypeDeclarations -> TypeDeclarations . TypeDeclaration
    (47) TypeDeclaration -> . ClassDeclaration
    (48) TypeDeclaration -> . SEMI
    (56) ClassDeclaration -> . Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody
    (57) ClassDeclaration -> . CLASS IDENTIFIER decl_mark_2 ClassBody
    (49) Modifiers -> . Modifier
    (50) Modifiers -> . Modifiers Modifier
    (51) Modifier -> . STATIC
    (52) Modifier -> . FINAL
    (53) Modifier -> . PRIVATE
    (54) Modifier -> . PROTECTED
    (55) Modifier -> . PUBLIC

    $end            reduce using rule 34 (CompilationUnit -> PackageDeclaration TypeDeclarations .)
    SEMI            shift and go to state 7
    CLASS           shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21

    TypeDeclaration                shift and go to state 26
    ClassDeclaration               shift and go to state 12
    Modifiers                      shift and go to state 14
    Modifier                       shift and go to state 16

state 24

    (36) CompilationUnit -> ImportDeclarations TypeDeclarations .
    (41) TypeDeclarations -> TypeDeclarations . TypeDeclaration
    (47) TypeDeclaration -> . ClassDeclaration
    (48) TypeDeclaration -> . SEMI
    (56) ClassDeclaration -> . Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody
    (57) ClassDeclaration -> . CLASS IDENTIFIER decl_mark_2 ClassBody
    (49) Modifiers -> . Modifier
    (50) Modifiers -> . Modifiers Modifier
    (51) Modifier -> . STATIC
    (52) Modifier -> . FINAL
    (53) Modifier -> . PRIVATE
    (54) Modifier -> . PROTECTED
    (55) Modifier -> . PUBLIC

    $end            reduce using rule 36 (CompilationUnit -> ImportDeclarations TypeDeclarations .)
    SEMI            shift and go to state 7
    CLASS           shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21

    TypeDeclaration                shift and go to state 26
    ClassDeclaration               shift and go to state 12
    Modifiers                      shift and go to state 14
    Modifier                       shift and go to state 16

state 25

    (39) ImportDeclarations -> ImportDeclarations ImportDeclaration .

    SEMI            reduce using rule 39 (ImportDeclarations -> ImportDeclarations ImportDeclaration .)
    IMPORT          reduce using rule 39 (ImportDeclarations -> ImportDeclarations ImportDeclaration .)
    CLASS           reduce using rule 39 (ImportDeclarations -> ImportDeclarations ImportDeclaration .)
    STATIC          reduce using rule 39 (ImportDeclarations -> ImportDeclarations ImportDeclaration .)
    FINAL           reduce using rule 39 (ImportDeclarations -> ImportDeclarations ImportDeclaration .)
    PRIVATE         reduce using rule 39 (ImportDeclarations -> ImportDeclarations ImportDeclaration .)
    PROTECTED       reduce using rule 39 (ImportDeclarations -> ImportDeclarations ImportDeclaration .)
    PUBLIC          reduce using rule 39 (ImportDeclarations -> ImportDeclarations ImportDeclaration .)
    $end            reduce using rule 39 (ImportDeclarations -> ImportDeclarations ImportDeclaration .)


state 26

    (41) TypeDeclarations -> TypeDeclarations TypeDeclaration .

    SEMI            reduce using rule 41 (TypeDeclarations -> TypeDeclarations TypeDeclaration .)
    CLASS           reduce using rule 41 (TypeDeclarations -> TypeDeclarations TypeDeclaration .)
    STATIC          reduce using rule 41 (TypeDeclarations -> TypeDeclarations TypeDeclaration .)
    FINAL           reduce using rule 41 (TypeDeclarations -> TypeDeclarations TypeDeclaration .)
    PRIVATE         reduce using rule 41 (TypeDeclarations -> TypeDeclarations TypeDeclaration .)
    PROTECTED       reduce using rule 41 (TypeDeclarations -> TypeDeclarations TypeDeclaration .)
    PUBLIC          reduce using rule 41 (TypeDeclarations -> TypeDeclarations TypeDeclaration .)
    $end            reduce using rule 41 (TypeDeclarations -> TypeDeclarations TypeDeclaration .)


state 27

    (42) PackageDeclaration -> PACKAGE IDENTIFIER . SEMI

    SEMI            shift and go to state 33


state 28

    (45) SingleTypeImportDeclaration -> IMPORT IDENTIFIER . SEMI
    (46) TypeImportOnDemandDeclaration -> IMPORT IDENTIFIER . DOT MUL SEMI

    SEMI            shift and go to state 34
    DOT             shift and go to state 35


state 29

    (56) ClassDeclaration -> Modifiers CLASS . IDENTIFIER decl_mark_2 ClassBody

    IDENTIFIER      shift and go to state 36


state 30

    (50) Modifiers -> Modifiers Modifier .

    CLASS           reduce using rule 50 (Modifiers -> Modifiers Modifier .)
    STATIC          reduce using rule 50 (Modifiers -> Modifiers Modifier .)
    FINAL           reduce using rule 50 (Modifiers -> Modifiers Modifier .)
    PRIVATE         reduce using rule 50 (Modifiers -> Modifiers Modifier .)
    PROTECTED       reduce using rule 50 (Modifiers -> Modifiers Modifier .)
    PUBLIC          reduce using rule 50 (Modifiers -> Modifiers Modifier .)
    VOID            reduce using rule 50 (Modifiers -> Modifiers Modifier .)
    IDENTIFIER      reduce using rule 50 (Modifiers -> Modifiers Modifier .)
    BOOLEAN         reduce using rule 50 (Modifiers -> Modifiers Modifier .)
    BYTE            reduce using rule 50 (Modifiers -> Modifiers Modifier .)
    SHORT           reduce using rule 50 (Modifiers -> Modifiers Modifier .)
    INT             reduce using rule 50 (Modifiers -> Modifiers Modifier .)
    LONG            reduce using rule 50 (Modifiers -> Modifiers Modifier .)
    CHAR            reduce using rule 50 (Modifiers -> Modifiers Modifier .)
    FLOAT           reduce using rule 50 (Modifiers -> Modifiers Modifier .)
    DOUBLE          reduce using rule 50 (Modifiers -> Modifiers Modifier .)


state 31

    (57) ClassDeclaration -> CLASS IDENTIFIER . decl_mark_2 ClassBody
    (289) decl_mark_2 -> .

    LBRACE          reduce using rule 289 (decl_mark_2 -> .)

    decl_mark_2                    shift and go to state 37

state 32

    (31) CompilationUnit -> PackageDeclaration ImportDeclarations TypeDeclarations .
    (41) TypeDeclarations -> TypeDeclarations . TypeDeclaration
    (47) TypeDeclaration -> . ClassDeclaration
    (48) TypeDeclaration -> . SEMI
    (56) ClassDeclaration -> . Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody
    (57) ClassDeclaration -> . CLASS IDENTIFIER decl_mark_2 ClassBody
    (49) Modifiers -> . Modifier
    (50) Modifiers -> . Modifiers Modifier
    (51) Modifier -> . STATIC
    (52) Modifier -> . FINAL
    (53) Modifier -> . PRIVATE
    (54) Modifier -> . PROTECTED
    (55) Modifier -> . PUBLIC

    $end            reduce using rule 31 (CompilationUnit -> PackageDeclaration ImportDeclarations TypeDeclarations .)
    SEMI            shift and go to state 7
    CLASS           shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21

    TypeDeclaration                shift and go to state 26
    ClassDeclaration               shift and go to state 12
    Modifiers                      shift and go to state 14
    Modifier                       shift and go to state 16

state 33

    (42) PackageDeclaration -> PACKAGE IDENTIFIER SEMI .

    SEMI            reduce using rule 42 (PackageDeclaration -> PACKAGE IDENTIFIER SEMI .)
    IMPORT          reduce using rule 42 (PackageDeclaration -> PACKAGE IDENTIFIER SEMI .)
    CLASS           reduce using rule 42 (PackageDeclaration -> PACKAGE IDENTIFIER SEMI .)
    STATIC          reduce using rule 42 (PackageDeclaration -> PACKAGE IDENTIFIER SEMI .)
    FINAL           reduce using rule 42 (PackageDeclaration -> PACKAGE IDENTIFIER SEMI .)
    PRIVATE         reduce using rule 42 (PackageDeclaration -> PACKAGE IDENTIFIER SEMI .)
    PROTECTED       reduce using rule 42 (PackageDeclaration -> PACKAGE IDENTIFIER SEMI .)
    PUBLIC          reduce using rule 42 (PackageDeclaration -> PACKAGE IDENTIFIER SEMI .)
    $end            reduce using rule 42 (PackageDeclaration -> PACKAGE IDENTIFIER SEMI .)


state 34

    (45) SingleTypeImportDeclaration -> IMPORT IDENTIFIER SEMI .

    SEMI            reduce using rule 45 (SingleTypeImportDeclaration -> IMPORT IDENTIFIER SEMI .)
    IMPORT          reduce using rule 45 (SingleTypeImportDeclaration -> IMPORT IDENTIFIER SEMI .)
    CLASS           reduce using rule 45 (SingleTypeImportDeclaration -> IMPORT IDENTIFIER SEMI .)
    STATIC          reduce using rule 45 (SingleTypeImportDeclaration -> IMPORT IDENTIFIER SEMI .)
    FINAL           reduce using rule 45 (SingleTypeImportDeclaration -> IMPORT IDENTIFIER SEMI .)
    PRIVATE         reduce using rule 45 (SingleTypeImportDeclaration -> IMPORT IDENTIFIER SEMI .)
    PROTECTED       reduce using rule 45 (SingleTypeImportDeclaration -> IMPORT IDENTIFIER SEMI .)
    PUBLIC          reduce using rule 45 (SingleTypeImportDeclaration -> IMPORT IDENTIFIER SEMI .)
    $end            reduce using rule 45 (SingleTypeImportDeclaration -> IMPORT IDENTIFIER SEMI .)


state 35

    (46) TypeImportOnDemandDeclaration -> IMPORT IDENTIFIER DOT . MUL SEMI

    MUL             shift and go to state 38


state 36

    (56) ClassDeclaration -> Modifiers CLASS IDENTIFIER . decl_mark_2 ClassBody
    (289) decl_mark_2 -> .

    LBRACE          reduce using rule 289 (decl_mark_2 -> .)

    decl_mark_2                    shift and go to state 39

state 37

    (57) ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 . ClassBody
    (58) ClassBody -> . LBRACE RBRACE
    (59) ClassBody -> . LBRACE ClassBodyDeclarations RBRACE

    LBRACE          shift and go to state 41

    ClassBody                      shift and go to state 40

state 38

    (46) TypeImportOnDemandDeclaration -> IMPORT IDENTIFIER DOT MUL . SEMI

    SEMI            shift and go to state 42


state 39

    (56) ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 . ClassBody
    (58) ClassBody -> . LBRACE RBRACE
    (59) ClassBody -> . LBRACE ClassBodyDeclarations RBRACE

    LBRACE          shift and go to state 41

    ClassBody                      shift and go to state 43

state 40

    (57) ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody .

    SEMI            reduce using rule 57 (ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody .)
    CLASS           reduce using rule 57 (ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody .)
    STATIC          reduce using rule 57 (ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody .)
    FINAL           reduce using rule 57 (ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody .)
    PRIVATE         reduce using rule 57 (ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody .)
    PROTECTED       reduce using rule 57 (ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody .)
    PUBLIC          reduce using rule 57 (ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody .)
    $end            reduce using rule 57 (ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody .)


state 41

    (58) ClassBody -> LBRACE . RBRACE
    (59) ClassBody -> LBRACE . ClassBodyDeclarations RBRACE
    (60) ClassBodyDeclarations -> . ClassBodyDeclaration
    (61) ClassBodyDeclarations -> . ClassBodyDeclarations ClassBodyDeclaration
    (62) ClassBodyDeclaration -> . ClassMemberDeclaration
    (63) ClassBodyDeclaration -> . ConstructorDeclaration
    (64) ClassBodyDeclaration -> . StaticInitializer
    (65) ClassMemberDeclaration -> . FieldDeclaration
    (66) ClassMemberDeclaration -> . MethodDeclaration
    (90) ConstructorDeclaration -> . Modifiers ConstructorDeclarator ConstructorBody
    (91) ConstructorDeclaration -> . ConstructorDeclarator ConstructorBody
    (89) StaticInitializer -> . begin_scope STATIC Block end_scope
    (67) FieldDeclaration -> . Modifiers Type VariableDeclarators SEMI
    (68) FieldDeclaration -> . Type VariableDeclarators SEMI
    (77) MethodDeclaration -> . MethodHeader MethodBody
    (49) Modifiers -> . Modifier
    (50) Modifiers -> . Modifiers Modifier
    (92) ConstructorDeclarator -> . SimpleName LPAREN decl_mark FormalParameterList RPAREN
    (93) ConstructorDeclarator -> . SimpleName decl_mark LPAREN RPAREN
    (290) begin_scope -> .
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (78) MethodHeader -> . Modifiers Type MethodDeclarator
    (79) MethodHeader -> . Type MethodDeclarator
    (80) MethodHeader -> . Modifiers VOID MethodDeclarator
    (81) MethodHeader -> . VOID MethodDeclarator
    (51) Modifier -> . STATIC
    (52) Modifier -> . FINAL
    (53) Modifier -> . PRIVATE
    (54) Modifier -> . PROTECTED
    (55) Modifier -> . PUBLIC
    (29) SimpleName -> . IDENTIFIER
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (30) QualifiedName -> . Name DOT IDENTIFIER

  ! shift/reduce conflict for STATIC resolved as shift
    RBRACE          shift and go to state 44
    VOID            shift and go to state 60
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21
    IDENTIFIER      shift and go to state 61
    BOOLEAN         shift and go to state 63
    BYTE            shift and go to state 69
    SHORT           shift and go to state 70
    INT             shift and go to state 71
    LONG            shift and go to state 72
    CHAR            shift and go to state 73
    FLOAT           shift and go to state 74
    DOUBLE          shift and go to state 75

  ! STATIC          [ reduce using rule 290 (begin_scope -> .) ]

    ClassBodyDeclarations          shift and go to state 45
    ClassBodyDeclaration           shift and go to state 46
    ClassMemberDeclaration         shift and go to state 47
    ConstructorDeclaration         shift and go to state 48
    StaticInitializer              shift and go to state 49
    FieldDeclaration               shift and go to state 50
    MethodDeclaration              shift and go to state 51
    Modifiers                      shift and go to state 52
    ConstructorDeclarator          shift and go to state 53
    begin_scope                    shift and go to state 54
    Type                           shift and go to state 55
    MethodHeader                   shift and go to state 56
    Modifier                       shift and go to state 16
    SimpleName                     shift and go to state 57
    PrimitiveType                  shift and go to state 58
    ReferenceType                  shift and go to state 59
    NumericType                    shift and go to state 62
    ArrayType                      shift and go to state 64
    ClassType                      shift and go to state 65
    IntegralType                   shift and go to state 66
    FloatingPointType              shift and go to state 67
    Name                           shift and go to state 68
    QualifiedName                  shift and go to state 76

state 42

    (46) TypeImportOnDemandDeclaration -> IMPORT IDENTIFIER DOT MUL SEMI .

    SEMI            reduce using rule 46 (TypeImportOnDemandDeclaration -> IMPORT IDENTIFIER DOT MUL SEMI .)
    IMPORT          reduce using rule 46 (TypeImportOnDemandDeclaration -> IMPORT IDENTIFIER DOT MUL SEMI .)
    CLASS           reduce using rule 46 (TypeImportOnDemandDeclaration -> IMPORT IDENTIFIER DOT MUL SEMI .)
    STATIC          reduce using rule 46 (TypeImportOnDemandDeclaration -> IMPORT IDENTIFIER DOT MUL SEMI .)
    FINAL           reduce using rule 46 (TypeImportOnDemandDeclaration -> IMPORT IDENTIFIER DOT MUL SEMI .)
    PRIVATE         reduce using rule 46 (TypeImportOnDemandDeclaration -> IMPORT IDENTIFIER DOT MUL SEMI .)
    PROTECTED       reduce using rule 46 (TypeImportOnDemandDeclaration -> IMPORT IDENTIFIER DOT MUL SEMI .)
    PUBLIC          reduce using rule 46 (TypeImportOnDemandDeclaration -> IMPORT IDENTIFIER DOT MUL SEMI .)
    $end            reduce using rule 46 (TypeImportOnDemandDeclaration -> IMPORT IDENTIFIER DOT MUL SEMI .)


state 43

    (56) ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody .

    SEMI            reduce using rule 56 (ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody .)
    CLASS           reduce using rule 56 (ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody .)
    STATIC          reduce using rule 56 (ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody .)
    FINAL           reduce using rule 56 (ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody .)
    PRIVATE         reduce using rule 56 (ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody .)
    PROTECTED       reduce using rule 56 (ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody .)
    PUBLIC          reduce using rule 56 (ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody .)
    $end            reduce using rule 56 (ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody .)


state 44

    (58) ClassBody -> LBRACE RBRACE .

    SEMI            reduce using rule 58 (ClassBody -> LBRACE RBRACE .)
    CLASS           reduce using rule 58 (ClassBody -> LBRACE RBRACE .)
    STATIC          reduce using rule 58 (ClassBody -> LBRACE RBRACE .)
    FINAL           reduce using rule 58 (ClassBody -> LBRACE RBRACE .)
    PRIVATE         reduce using rule 58 (ClassBody -> LBRACE RBRACE .)
    PROTECTED       reduce using rule 58 (ClassBody -> LBRACE RBRACE .)
    PUBLIC          reduce using rule 58 (ClassBody -> LBRACE RBRACE .)
    $end            reduce using rule 58 (ClassBody -> LBRACE RBRACE .)


state 45

    (59) ClassBody -> LBRACE ClassBodyDeclarations . RBRACE
    (61) ClassBodyDeclarations -> ClassBodyDeclarations . ClassBodyDeclaration
    (62) ClassBodyDeclaration -> . ClassMemberDeclaration
    (63) ClassBodyDeclaration -> . ConstructorDeclaration
    (64) ClassBodyDeclaration -> . StaticInitializer
    (65) ClassMemberDeclaration -> . FieldDeclaration
    (66) ClassMemberDeclaration -> . MethodDeclaration
    (90) ConstructorDeclaration -> . Modifiers ConstructorDeclarator ConstructorBody
    (91) ConstructorDeclaration -> . ConstructorDeclarator ConstructorBody
    (89) StaticInitializer -> . begin_scope STATIC Block end_scope
    (67) FieldDeclaration -> . Modifiers Type VariableDeclarators SEMI
    (68) FieldDeclaration -> . Type VariableDeclarators SEMI
    (77) MethodDeclaration -> . MethodHeader MethodBody
    (49) Modifiers -> . Modifier
    (50) Modifiers -> . Modifiers Modifier
    (92) ConstructorDeclarator -> . SimpleName LPAREN decl_mark FormalParameterList RPAREN
    (93) ConstructorDeclarator -> . SimpleName decl_mark LPAREN RPAREN
    (290) begin_scope -> .
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (78) MethodHeader -> . Modifiers Type MethodDeclarator
    (79) MethodHeader -> . Type MethodDeclarator
    (80) MethodHeader -> . Modifiers VOID MethodDeclarator
    (81) MethodHeader -> . VOID MethodDeclarator
    (51) Modifier -> . STATIC
    (52) Modifier -> . FINAL
    (53) Modifier -> . PRIVATE
    (54) Modifier -> . PROTECTED
    (55) Modifier -> . PUBLIC
    (29) SimpleName -> . IDENTIFIER
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (30) QualifiedName -> . Name DOT IDENTIFIER

  ! shift/reduce conflict for STATIC resolved as shift
    RBRACE          shift and go to state 77
    VOID            shift and go to state 60
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21
    IDENTIFIER      shift and go to state 61
    BOOLEAN         shift and go to state 63
    BYTE            shift and go to state 69
    SHORT           shift and go to state 70
    INT             shift and go to state 71
    LONG            shift and go to state 72
    CHAR            shift and go to state 73
    FLOAT           shift and go to state 74
    DOUBLE          shift and go to state 75

  ! STATIC          [ reduce using rule 290 (begin_scope -> .) ]

    ClassBodyDeclaration           shift and go to state 78
    ClassMemberDeclaration         shift and go to state 47
    ConstructorDeclaration         shift and go to state 48
    StaticInitializer              shift and go to state 49
    FieldDeclaration               shift and go to state 50
    MethodDeclaration              shift and go to state 51
    Modifiers                      shift and go to state 52
    ConstructorDeclarator          shift and go to state 53
    begin_scope                    shift and go to state 54
    Type                           shift and go to state 55
    MethodHeader                   shift and go to state 56
    Modifier                       shift and go to state 16
    SimpleName                     shift and go to state 57
    PrimitiveType                  shift and go to state 58
    ReferenceType                  shift and go to state 59
    NumericType                    shift and go to state 62
    ArrayType                      shift and go to state 64
    ClassType                      shift and go to state 65
    IntegralType                   shift and go to state 66
    FloatingPointType              shift and go to state 67
    Name                           shift and go to state 68
    QualifiedName                  shift and go to state 76

state 46

    (60) ClassBodyDeclarations -> ClassBodyDeclaration .

    RBRACE          reduce using rule 60 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    VOID            reduce using rule 60 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    STATIC          reduce using rule 60 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    FINAL           reduce using rule 60 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    PRIVATE         reduce using rule 60 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    PROTECTED       reduce using rule 60 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    PUBLIC          reduce using rule 60 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    IDENTIFIER      reduce using rule 60 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    BOOLEAN         reduce using rule 60 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    BYTE            reduce using rule 60 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    SHORT           reduce using rule 60 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    INT             reduce using rule 60 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    LONG            reduce using rule 60 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    CHAR            reduce using rule 60 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    FLOAT           reduce using rule 60 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    DOUBLE          reduce using rule 60 (ClassBodyDeclarations -> ClassBodyDeclaration .)


state 47

    (62) ClassBodyDeclaration -> ClassMemberDeclaration .

    RBRACE          reduce using rule 62 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    VOID            reduce using rule 62 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    STATIC          reduce using rule 62 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    FINAL           reduce using rule 62 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    PRIVATE         reduce using rule 62 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    PROTECTED       reduce using rule 62 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    PUBLIC          reduce using rule 62 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    IDENTIFIER      reduce using rule 62 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    BOOLEAN         reduce using rule 62 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    BYTE            reduce using rule 62 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    SHORT           reduce using rule 62 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    INT             reduce using rule 62 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    LONG            reduce using rule 62 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    CHAR            reduce using rule 62 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    FLOAT           reduce using rule 62 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    DOUBLE          reduce using rule 62 (ClassBodyDeclaration -> ClassMemberDeclaration .)


state 48

    (63) ClassBodyDeclaration -> ConstructorDeclaration .

    RBRACE          reduce using rule 63 (ClassBodyDeclaration -> ConstructorDeclaration .)
    VOID            reduce using rule 63 (ClassBodyDeclaration -> ConstructorDeclaration .)
    STATIC          reduce using rule 63 (ClassBodyDeclaration -> ConstructorDeclaration .)
    FINAL           reduce using rule 63 (ClassBodyDeclaration -> ConstructorDeclaration .)
    PRIVATE         reduce using rule 63 (ClassBodyDeclaration -> ConstructorDeclaration .)
    PROTECTED       reduce using rule 63 (ClassBodyDeclaration -> ConstructorDeclaration .)
    PUBLIC          reduce using rule 63 (ClassBodyDeclaration -> ConstructorDeclaration .)
    IDENTIFIER      reduce using rule 63 (ClassBodyDeclaration -> ConstructorDeclaration .)
    BOOLEAN         reduce using rule 63 (ClassBodyDeclaration -> ConstructorDeclaration .)
    BYTE            reduce using rule 63 (ClassBodyDeclaration -> ConstructorDeclaration .)
    SHORT           reduce using rule 63 (ClassBodyDeclaration -> ConstructorDeclaration .)
    INT             reduce using rule 63 (ClassBodyDeclaration -> ConstructorDeclaration .)
    LONG            reduce using rule 63 (ClassBodyDeclaration -> ConstructorDeclaration .)
    CHAR            reduce using rule 63 (ClassBodyDeclaration -> ConstructorDeclaration .)
    FLOAT           reduce using rule 63 (ClassBodyDeclaration -> ConstructorDeclaration .)
    DOUBLE          reduce using rule 63 (ClassBodyDeclaration -> ConstructorDeclaration .)


state 49

    (64) ClassBodyDeclaration -> StaticInitializer .

    RBRACE          reduce using rule 64 (ClassBodyDeclaration -> StaticInitializer .)
    VOID            reduce using rule 64 (ClassBodyDeclaration -> StaticInitializer .)
    STATIC          reduce using rule 64 (ClassBodyDeclaration -> StaticInitializer .)
    FINAL           reduce using rule 64 (ClassBodyDeclaration -> StaticInitializer .)
    PRIVATE         reduce using rule 64 (ClassBodyDeclaration -> StaticInitializer .)
    PROTECTED       reduce using rule 64 (ClassBodyDeclaration -> StaticInitializer .)
    PUBLIC          reduce using rule 64 (ClassBodyDeclaration -> StaticInitializer .)
    IDENTIFIER      reduce using rule 64 (ClassBodyDeclaration -> StaticInitializer .)
    BOOLEAN         reduce using rule 64 (ClassBodyDeclaration -> StaticInitializer .)
    BYTE            reduce using rule 64 (ClassBodyDeclaration -> StaticInitializer .)
    SHORT           reduce using rule 64 (ClassBodyDeclaration -> StaticInitializer .)
    INT             reduce using rule 64 (ClassBodyDeclaration -> StaticInitializer .)
    LONG            reduce using rule 64 (ClassBodyDeclaration -> StaticInitializer .)
    CHAR            reduce using rule 64 (ClassBodyDeclaration -> StaticInitializer .)
    FLOAT           reduce using rule 64 (ClassBodyDeclaration -> StaticInitializer .)
    DOUBLE          reduce using rule 64 (ClassBodyDeclaration -> StaticInitializer .)


state 50

    (65) ClassMemberDeclaration -> FieldDeclaration .

    RBRACE          reduce using rule 65 (ClassMemberDeclaration -> FieldDeclaration .)
    VOID            reduce using rule 65 (ClassMemberDeclaration -> FieldDeclaration .)
    STATIC          reduce using rule 65 (ClassMemberDeclaration -> FieldDeclaration .)
    FINAL           reduce using rule 65 (ClassMemberDeclaration -> FieldDeclaration .)
    PRIVATE         reduce using rule 65 (ClassMemberDeclaration -> FieldDeclaration .)
    PROTECTED       reduce using rule 65 (ClassMemberDeclaration -> FieldDeclaration .)
    PUBLIC          reduce using rule 65 (ClassMemberDeclaration -> FieldDeclaration .)
    IDENTIFIER      reduce using rule 65 (ClassMemberDeclaration -> FieldDeclaration .)
    BOOLEAN         reduce using rule 65 (ClassMemberDeclaration -> FieldDeclaration .)
    BYTE            reduce using rule 65 (ClassMemberDeclaration -> FieldDeclaration .)
    SHORT           reduce using rule 65 (ClassMemberDeclaration -> FieldDeclaration .)
    INT             reduce using rule 65 (ClassMemberDeclaration -> FieldDeclaration .)
    LONG            reduce using rule 65 (ClassMemberDeclaration -> FieldDeclaration .)
    CHAR            reduce using rule 65 (ClassMemberDeclaration -> FieldDeclaration .)
    FLOAT           reduce using rule 65 (ClassMemberDeclaration -> FieldDeclaration .)
    DOUBLE          reduce using rule 65 (ClassMemberDeclaration -> FieldDeclaration .)


state 51

    (66) ClassMemberDeclaration -> MethodDeclaration .

    RBRACE          reduce using rule 66 (ClassMemberDeclaration -> MethodDeclaration .)
    VOID            reduce using rule 66 (ClassMemberDeclaration -> MethodDeclaration .)
    STATIC          reduce using rule 66 (ClassMemberDeclaration -> MethodDeclaration .)
    FINAL           reduce using rule 66 (ClassMemberDeclaration -> MethodDeclaration .)
    PRIVATE         reduce using rule 66 (ClassMemberDeclaration -> MethodDeclaration .)
    PROTECTED       reduce using rule 66 (ClassMemberDeclaration -> MethodDeclaration .)
    PUBLIC          reduce using rule 66 (ClassMemberDeclaration -> MethodDeclaration .)
    IDENTIFIER      reduce using rule 66 (ClassMemberDeclaration -> MethodDeclaration .)
    BOOLEAN         reduce using rule 66 (ClassMemberDeclaration -> MethodDeclaration .)
    BYTE            reduce using rule 66 (ClassMemberDeclaration -> MethodDeclaration .)
    SHORT           reduce using rule 66 (ClassMemberDeclaration -> MethodDeclaration .)
    INT             reduce using rule 66 (ClassMemberDeclaration -> MethodDeclaration .)
    LONG            reduce using rule 66 (ClassMemberDeclaration -> MethodDeclaration .)
    CHAR            reduce using rule 66 (ClassMemberDeclaration -> MethodDeclaration .)
    FLOAT           reduce using rule 66 (ClassMemberDeclaration -> MethodDeclaration .)
    DOUBLE          reduce using rule 66 (ClassMemberDeclaration -> MethodDeclaration .)


state 52

    (90) ConstructorDeclaration -> Modifiers . ConstructorDeclarator ConstructorBody
    (67) FieldDeclaration -> Modifiers . Type VariableDeclarators SEMI
    (50) Modifiers -> Modifiers . Modifier
    (78) MethodHeader -> Modifiers . Type MethodDeclarator
    (80) MethodHeader -> Modifiers . VOID MethodDeclarator
    (92) ConstructorDeclarator -> . SimpleName LPAREN decl_mark FormalParameterList RPAREN
    (93) ConstructorDeclarator -> . SimpleName decl_mark LPAREN RPAREN
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (51) Modifier -> . STATIC
    (52) Modifier -> . FINAL
    (53) Modifier -> . PRIVATE
    (54) Modifier -> . PROTECTED
    (55) Modifier -> . PUBLIC
    (29) SimpleName -> . IDENTIFIER
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (30) QualifiedName -> . Name DOT IDENTIFIER

    VOID            shift and go to state 81
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21
    IDENTIFIER      shift and go to state 61
    BOOLEAN         shift and go to state 63
    BYTE            shift and go to state 69
    SHORT           shift and go to state 70
    INT             shift and go to state 71
    LONG            shift and go to state 72
    CHAR            shift and go to state 73
    FLOAT           shift and go to state 74
    DOUBLE          shift and go to state 75

    ConstructorDeclarator          shift and go to state 79
    Type                           shift and go to state 80
    Modifier                       shift and go to state 30
    SimpleName                     shift and go to state 57
    PrimitiveType                  shift and go to state 58
    ReferenceType                  shift and go to state 59
    NumericType                    shift and go to state 62
    ArrayType                      shift and go to state 64
    ClassType                      shift and go to state 65
    IntegralType                   shift and go to state 66
    FloatingPointType              shift and go to state 67
    Name                           shift and go to state 68
    QualifiedName                  shift and go to state 76

state 53

    (91) ConstructorDeclaration -> ConstructorDeclarator . ConstructorBody
    (94) ConstructorBody -> .
    (95) ConstructorBody -> . LBRACE BlockStatements RBRACE
    (96) ConstructorBody -> . LBRACE RBRACE

    RBRACE          reduce using rule 94 (ConstructorBody -> .)
    VOID            reduce using rule 94 (ConstructorBody -> .)
    STATIC          reduce using rule 94 (ConstructorBody -> .)
    FINAL           reduce using rule 94 (ConstructorBody -> .)
    PRIVATE         reduce using rule 94 (ConstructorBody -> .)
    PROTECTED       reduce using rule 94 (ConstructorBody -> .)
    PUBLIC          reduce using rule 94 (ConstructorBody -> .)
    IDENTIFIER      reduce using rule 94 (ConstructorBody -> .)
    BOOLEAN         reduce using rule 94 (ConstructorBody -> .)
    BYTE            reduce using rule 94 (ConstructorBody -> .)
    SHORT           reduce using rule 94 (ConstructorBody -> .)
    INT             reduce using rule 94 (ConstructorBody -> .)
    LONG            reduce using rule 94 (ConstructorBody -> .)
    CHAR            reduce using rule 94 (ConstructorBody -> .)
    FLOAT           reduce using rule 94 (ConstructorBody -> .)
    DOUBLE          reduce using rule 94 (ConstructorBody -> .)
    LBRACE          shift and go to state 83

    ConstructorBody                shift and go to state 82

state 54

    (89) StaticInitializer -> begin_scope . STATIC Block end_scope

    STATIC          shift and go to state 84


state 55

    (68) FieldDeclaration -> Type . VariableDeclarators SEMI
    (79) MethodHeader -> Type . MethodDeclarator
    (69) VariableDeclarators -> . VariableDeclarator
    (70) VariableDeclarators -> . VariableDeclarators COMMA VariableDeclarator
    (82) MethodDeclarator -> . IDENTIFIER LPAREN decl_mark RPAREN
    (83) MethodDeclarator -> . IDENTIFIER LPAREN decl_mark FormalParameterList RPAREN
    (71) VariableDeclarator -> . VariableDeclaratorId
    (72) VariableDeclarator -> . VariableDeclaratorId ASSIGN VariableInitializer
    (73) VariableDeclaratorId -> . IDENTIFIER
    (74) VariableDeclaratorId -> . IDENTIFIER Dims

    IDENTIFIER      shift and go to state 88

    VariableDeclarators            shift and go to state 85
    MethodDeclarator               shift and go to state 86
    VariableDeclarator             shift and go to state 87
    VariableDeclaratorId           shift and go to state 89

state 56

    (77) MethodDeclaration -> MethodHeader . MethodBody
    (87) MethodBody -> . Block
    (88) MethodBody -> . SEMI
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE

    SEMI            shift and go to state 92
    LBRACE          shift and go to state 93

    MethodBody                     shift and go to state 90
    Block                          shift and go to state 91

state 57

    (92) ConstructorDeclarator -> SimpleName . LPAREN decl_mark FormalParameterList RPAREN
    (93) ConstructorDeclarator -> SimpleName . decl_mark LPAREN RPAREN
    (27) Name -> SimpleName .
    (288) decl_mark -> .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 94
    DOT             reduce using rule 27 (Name -> SimpleName .)
    LBRACK          reduce using rule 27 (Name -> SimpleName .)
    IDENTIFIER      reduce using rule 27 (Name -> SimpleName .)

  ! LPAREN          [ reduce using rule 288 (decl_mark -> .) ]

    decl_mark                      shift and go to state 95

state 58

    (9) Type -> PrimitiveType .
    (25) ArrayType -> PrimitiveType . Dims
    (206) Dims -> . LBRACK RBRACK
    (207) Dims -> . Dims LBRACK RBRACK

    IDENTIFIER      reduce using rule 9 (Type -> PrimitiveType .)
    LBRACK          shift and go to state 97

    Dims                           shift and go to state 96

state 59

    (10) Type -> ReferenceType .

    IDENTIFIER      reduce using rule 10 (Type -> ReferenceType .)


state 60

    (81) MethodHeader -> VOID . MethodDeclarator
    (82) MethodDeclarator -> . IDENTIFIER LPAREN decl_mark RPAREN
    (83) MethodDeclarator -> . IDENTIFIER LPAREN decl_mark FormalParameterList RPAREN

    IDENTIFIER      shift and go to state 99

    MethodDeclarator               shift and go to state 98

state 61

    (29) SimpleName -> IDENTIFIER .

    LPAREN          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DOT             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LBRACK          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    ASSIGN          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    ADD_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    SUB_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    MUL_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    AND_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    OR_ASSIGN       reduce using rule 29 (SimpleName -> IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 29 (SimpleName -> IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 29 (SimpleName -> IDENTIFIER .)
    URSHIFT_ASSIGN  reduce using rule 29 (SimpleName -> IDENTIFIER .)
    INC             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DEC             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    MUL             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DIV             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    MOD             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    ADD             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    SUB             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LSHIFT          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    RSHIFT          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    URSHIFT         reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LT              reduce using rule 29 (SimpleName -> IDENTIFIER .)
    GT              reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LE              reduce using rule 29 (SimpleName -> IDENTIFIER .)
    GE              reduce using rule 29 (SimpleName -> IDENTIFIER .)
    EQUAL           reduce using rule 29 (SimpleName -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 29 (SimpleName -> IDENTIFIER .)
    BITAND          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    CARET           reduce using rule 29 (SimpleName -> IDENTIFIER .)
    BITOR           reduce using rule 29 (SimpleName -> IDENTIFIER .)
    AND             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    QUESTION        reduce using rule 29 (SimpleName -> IDENTIFIER .)
    OR              reduce using rule 29 (SimpleName -> IDENTIFIER .)
    RPAREN          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    SEMI            reduce using rule 29 (SimpleName -> IDENTIFIER .)
    COMMA           reduce using rule 29 (SimpleName -> IDENTIFIER .)
    RBRACK          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    RBRACE          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    COLON           reduce using rule 29 (SimpleName -> IDENTIFIER .)


state 62

    (11) PrimitiveType -> NumericType .

    LBRACK          reduce using rule 11 (PrimitiveType -> NumericType .)
    IDENTIFIER      reduce using rule 11 (PrimitiveType -> NumericType .)
    RPAREN          reduce using rule 11 (PrimitiveType -> NumericType .)


state 63

    (12) PrimitiveType -> BOOLEAN .

    LBRACK          reduce using rule 12 (PrimitiveType -> BOOLEAN .)
    IDENTIFIER      reduce using rule 12 (PrimitiveType -> BOOLEAN .)
    RPAREN          reduce using rule 12 (PrimitiveType -> BOOLEAN .)


state 64

    (22) ReferenceType -> ArrayType .

    IDENTIFIER      reduce using rule 22 (ReferenceType -> ArrayType .)


state 65

    (23) ReferenceType -> ClassType .

    IDENTIFIER      reduce using rule 23 (ReferenceType -> ClassType .)


state 66

    (13) NumericType -> IntegralType .

    LBRACK          reduce using rule 13 (NumericType -> IntegralType .)
    IDENTIFIER      reduce using rule 13 (NumericType -> IntegralType .)
    RPAREN          reduce using rule 13 (NumericType -> IntegralType .)


state 67

    (14) NumericType -> FloatingPointType .

    LBRACK          reduce using rule 14 (NumericType -> FloatingPointType .)
    IDENTIFIER      reduce using rule 14 (NumericType -> FloatingPointType .)
    RPAREN          reduce using rule 14 (NumericType -> FloatingPointType .)


state 68

    (26) ArrayType -> Name . Dims
    (24) ClassType -> Name .
    (30) QualifiedName -> Name . DOT IDENTIFIER
    (206) Dims -> . LBRACK RBRACK
    (207) Dims -> . Dims LBRACK RBRACK

    IDENTIFIER      reduce using rule 24 (ClassType -> Name .)
    DOT             shift and go to state 101
    LBRACK          shift and go to state 97

    Dims                           shift and go to state 100

state 69

    (15) IntegralType -> BYTE .

    LBRACK          reduce using rule 15 (IntegralType -> BYTE .)
    IDENTIFIER      reduce using rule 15 (IntegralType -> BYTE .)
    RPAREN          reduce using rule 15 (IntegralType -> BYTE .)


state 70

    (16) IntegralType -> SHORT .

    LBRACK          reduce using rule 16 (IntegralType -> SHORT .)
    IDENTIFIER      reduce using rule 16 (IntegralType -> SHORT .)
    RPAREN          reduce using rule 16 (IntegralType -> SHORT .)


state 71

    (17) IntegralType -> INT .

    LBRACK          reduce using rule 17 (IntegralType -> INT .)
    IDENTIFIER      reduce using rule 17 (IntegralType -> INT .)
    RPAREN          reduce using rule 17 (IntegralType -> INT .)


state 72

    (18) IntegralType -> LONG .

    LBRACK          reduce using rule 18 (IntegralType -> LONG .)
    IDENTIFIER      reduce using rule 18 (IntegralType -> LONG .)
    RPAREN          reduce using rule 18 (IntegralType -> LONG .)


state 73

    (19) IntegralType -> CHAR .

    LBRACK          reduce using rule 19 (IntegralType -> CHAR .)
    IDENTIFIER      reduce using rule 19 (IntegralType -> CHAR .)
    RPAREN          reduce using rule 19 (IntegralType -> CHAR .)


state 74

    (20) FloatingPointType -> FLOAT .

    LBRACK          reduce using rule 20 (FloatingPointType -> FLOAT .)
    IDENTIFIER      reduce using rule 20 (FloatingPointType -> FLOAT .)
    RPAREN          reduce using rule 20 (FloatingPointType -> FLOAT .)


state 75

    (21) FloatingPointType -> DOUBLE .

    LBRACK          reduce using rule 21 (FloatingPointType -> DOUBLE .)
    IDENTIFIER      reduce using rule 21 (FloatingPointType -> DOUBLE .)
    RPAREN          reduce using rule 21 (FloatingPointType -> DOUBLE .)


state 76

    (28) Name -> QualifiedName .

    DOT             reduce using rule 28 (Name -> QualifiedName .)
    LBRACK          reduce using rule 28 (Name -> QualifiedName .)
    IDENTIFIER      reduce using rule 28 (Name -> QualifiedName .)
    LPAREN          reduce using rule 28 (Name -> QualifiedName .)
    ASSIGN          reduce using rule 28 (Name -> QualifiedName .)
    ADD_ASSIGN      reduce using rule 28 (Name -> QualifiedName .)
    SUB_ASSIGN      reduce using rule 28 (Name -> QualifiedName .)
    MUL_ASSIGN      reduce using rule 28 (Name -> QualifiedName .)
    DIV_ASSIGN      reduce using rule 28 (Name -> QualifiedName .)
    AND_ASSIGN      reduce using rule 28 (Name -> QualifiedName .)
    OR_ASSIGN       reduce using rule 28 (Name -> QualifiedName .)
    XOR_ASSIGN      reduce using rule 28 (Name -> QualifiedName .)
    MOD_ASSIGN      reduce using rule 28 (Name -> QualifiedName .)
    LSHIFT_ASSIGN   reduce using rule 28 (Name -> QualifiedName .)
    RSHIFT_ASSIGN   reduce using rule 28 (Name -> QualifiedName .)
    URSHIFT_ASSIGN  reduce using rule 28 (Name -> QualifiedName .)
    INC             reduce using rule 28 (Name -> QualifiedName .)
    DEC             reduce using rule 28 (Name -> QualifiedName .)
    MUL             reduce using rule 28 (Name -> QualifiedName .)
    DIV             reduce using rule 28 (Name -> QualifiedName .)
    MOD             reduce using rule 28 (Name -> QualifiedName .)
    ADD             reduce using rule 28 (Name -> QualifiedName .)
    SUB             reduce using rule 28 (Name -> QualifiedName .)
    LSHIFT          reduce using rule 28 (Name -> QualifiedName .)
    RSHIFT          reduce using rule 28 (Name -> QualifiedName .)
    URSHIFT         reduce using rule 28 (Name -> QualifiedName .)
    LT              reduce using rule 28 (Name -> QualifiedName .)
    GT              reduce using rule 28 (Name -> QualifiedName .)
    LE              reduce using rule 28 (Name -> QualifiedName .)
    GE              reduce using rule 28 (Name -> QualifiedName .)
    EQUAL           reduce using rule 28 (Name -> QualifiedName .)
    NOTEQUAL        reduce using rule 28 (Name -> QualifiedName .)
    BITAND          reduce using rule 28 (Name -> QualifiedName .)
    CARET           reduce using rule 28 (Name -> QualifiedName .)
    BITOR           reduce using rule 28 (Name -> QualifiedName .)
    AND             reduce using rule 28 (Name -> QualifiedName .)
    QUESTION        reduce using rule 28 (Name -> QualifiedName .)
    OR              reduce using rule 28 (Name -> QualifiedName .)
    RPAREN          reduce using rule 28 (Name -> QualifiedName .)
    SEMI            reduce using rule 28 (Name -> QualifiedName .)
    COMMA           reduce using rule 28 (Name -> QualifiedName .)
    RBRACK          reduce using rule 28 (Name -> QualifiedName .)
    RBRACE          reduce using rule 28 (Name -> QualifiedName .)
    COLON           reduce using rule 28 (Name -> QualifiedName .)


state 77

    (59) ClassBody -> LBRACE ClassBodyDeclarations RBRACE .

    SEMI            reduce using rule 59 (ClassBody -> LBRACE ClassBodyDeclarations RBRACE .)
    CLASS           reduce using rule 59 (ClassBody -> LBRACE ClassBodyDeclarations RBRACE .)
    STATIC          reduce using rule 59 (ClassBody -> LBRACE ClassBodyDeclarations RBRACE .)
    FINAL           reduce using rule 59 (ClassBody -> LBRACE ClassBodyDeclarations RBRACE .)
    PRIVATE         reduce using rule 59 (ClassBody -> LBRACE ClassBodyDeclarations RBRACE .)
    PROTECTED       reduce using rule 59 (ClassBody -> LBRACE ClassBodyDeclarations RBRACE .)
    PUBLIC          reduce using rule 59 (ClassBody -> LBRACE ClassBodyDeclarations RBRACE .)
    $end            reduce using rule 59 (ClassBody -> LBRACE ClassBodyDeclarations RBRACE .)


state 78

    (61) ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .

    RBRACE          reduce using rule 61 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    VOID            reduce using rule 61 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    STATIC          reduce using rule 61 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    FINAL           reduce using rule 61 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    PRIVATE         reduce using rule 61 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    PROTECTED       reduce using rule 61 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    PUBLIC          reduce using rule 61 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    IDENTIFIER      reduce using rule 61 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    BOOLEAN         reduce using rule 61 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    BYTE            reduce using rule 61 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    SHORT           reduce using rule 61 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    INT             reduce using rule 61 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    LONG            reduce using rule 61 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    CHAR            reduce using rule 61 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    FLOAT           reduce using rule 61 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    DOUBLE          reduce using rule 61 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)


state 79

    (90) ConstructorDeclaration -> Modifiers ConstructorDeclarator . ConstructorBody
    (94) ConstructorBody -> .
    (95) ConstructorBody -> . LBRACE BlockStatements RBRACE
    (96) ConstructorBody -> . LBRACE RBRACE

    RBRACE          reduce using rule 94 (ConstructorBody -> .)
    VOID            reduce using rule 94 (ConstructorBody -> .)
    STATIC          reduce using rule 94 (ConstructorBody -> .)
    FINAL           reduce using rule 94 (ConstructorBody -> .)
    PRIVATE         reduce using rule 94 (ConstructorBody -> .)
    PROTECTED       reduce using rule 94 (ConstructorBody -> .)
    PUBLIC          reduce using rule 94 (ConstructorBody -> .)
    IDENTIFIER      reduce using rule 94 (ConstructorBody -> .)
    BOOLEAN         reduce using rule 94 (ConstructorBody -> .)
    BYTE            reduce using rule 94 (ConstructorBody -> .)
    SHORT           reduce using rule 94 (ConstructorBody -> .)
    INT             reduce using rule 94 (ConstructorBody -> .)
    LONG            reduce using rule 94 (ConstructorBody -> .)
    CHAR            reduce using rule 94 (ConstructorBody -> .)
    FLOAT           reduce using rule 94 (ConstructorBody -> .)
    DOUBLE          reduce using rule 94 (ConstructorBody -> .)
    LBRACE          shift and go to state 83

    ConstructorBody                shift and go to state 102

state 80

    (67) FieldDeclaration -> Modifiers Type . VariableDeclarators SEMI
    (78) MethodHeader -> Modifiers Type . MethodDeclarator
    (69) VariableDeclarators -> . VariableDeclarator
    (70) VariableDeclarators -> . VariableDeclarators COMMA VariableDeclarator
    (82) MethodDeclarator -> . IDENTIFIER LPAREN decl_mark RPAREN
    (83) MethodDeclarator -> . IDENTIFIER LPAREN decl_mark FormalParameterList RPAREN
    (71) VariableDeclarator -> . VariableDeclaratorId
    (72) VariableDeclarator -> . VariableDeclaratorId ASSIGN VariableInitializer
    (73) VariableDeclaratorId -> . IDENTIFIER
    (74) VariableDeclaratorId -> . IDENTIFIER Dims

    IDENTIFIER      shift and go to state 88

    VariableDeclarators            shift and go to state 103
    MethodDeclarator               shift and go to state 104
    VariableDeclarator             shift and go to state 87
    VariableDeclaratorId           shift and go to state 89

state 81

    (80) MethodHeader -> Modifiers VOID . MethodDeclarator
    (82) MethodDeclarator -> . IDENTIFIER LPAREN decl_mark RPAREN
    (83) MethodDeclarator -> . IDENTIFIER LPAREN decl_mark FormalParameterList RPAREN

    IDENTIFIER      shift and go to state 99

    MethodDeclarator               shift and go to state 105

state 82

    (91) ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .

    RBRACE          reduce using rule 91 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    VOID            reduce using rule 91 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    STATIC          reduce using rule 91 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    FINAL           reduce using rule 91 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    PRIVATE         reduce using rule 91 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    PROTECTED       reduce using rule 91 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    PUBLIC          reduce using rule 91 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    IDENTIFIER      reduce using rule 91 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    BOOLEAN         reduce using rule 91 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    BYTE            reduce using rule 91 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    SHORT           reduce using rule 91 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    INT             reduce using rule 91 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    LONG            reduce using rule 91 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    CHAR            reduce using rule 91 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    FLOAT           reduce using rule 91 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    DOUBLE          reduce using rule 91 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)


state 83

    (95) ConstructorBody -> LBRACE . BlockStatements RBRACE
    (96) ConstructorBody -> LBRACE . RBRACE
    (105) BlockStatements -> . BlockStatement
    (106) BlockStatements -> . BlockStatements BlockStatement
    (107) BlockStatement -> . LocalVariableDeclarationStatement
    (108) BlockStatement -> . Statement
    (109) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMI
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (110) LocalVariableDeclaration -> . Type VariableDeclarators
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RBRACE          shift and go to state 107
    IDENTIFIER      shift and go to state 128
    IF              shift and go to state 129
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    BOOLEAN         shift and go to state 63
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    BYTE            shift and go to state 69
    SHORT           shift and go to state 70
    INT             shift and go to state 71
    LONG            shift and go to state 72
    CHAR            shift and go to state 73
    FLOAT           shift and go to state 74
    DOUBLE          shift and go to state 75
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    BlockStatements                shift and go to state 106
    BlockStatement                 shift and go to state 108
    LocalVariableDeclarationStatement shift and go to state 109
    Statement                      shift and go to state 110
    LocalVariableDeclaration       shift and go to state 111
    StatementWithoutTrailingSubstatement shift and go to state 113
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    Type                           shift and go to state 119
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    PrimitiveType                  shift and go to state 58
    ReferenceType                  shift and go to state 59
    StatementExpression            shift and go to state 133
    NumericType                    shift and go to state 62
    ArrayType                      shift and go to state 64
    ClassType                      shift and go to state 65
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    IntegralType                   shift and go to state 66
    FloatingPointType              shift and go to state 67
    Name                           shift and go to state 146
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Primary                        shift and go to state 151
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 84

    (89) StaticInitializer -> begin_scope STATIC . Block end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE

    LBRACE          shift and go to state 93

    Block                          shift and go to state 168

state 85

    (68) FieldDeclaration -> Type VariableDeclarators . SEMI
    (70) VariableDeclarators -> VariableDeclarators . COMMA VariableDeclarator

    SEMI            shift and go to state 169
    COMMA           shift and go to state 170


state 86

    (79) MethodHeader -> Type MethodDeclarator .

    SEMI            reduce using rule 79 (MethodHeader -> Type MethodDeclarator .)
    LBRACE          reduce using rule 79 (MethodHeader -> Type MethodDeclarator .)


state 87

    (69) VariableDeclarators -> VariableDeclarator .

    SEMI            reduce using rule 69 (VariableDeclarators -> VariableDeclarator .)
    COMMA           reduce using rule 69 (VariableDeclarators -> VariableDeclarator .)


state 88

    (82) MethodDeclarator -> IDENTIFIER . LPAREN decl_mark RPAREN
    (83) MethodDeclarator -> IDENTIFIER . LPAREN decl_mark FormalParameterList RPAREN
    (73) VariableDeclaratorId -> IDENTIFIER .
    (74) VariableDeclaratorId -> IDENTIFIER . Dims
    (206) Dims -> . LBRACK RBRACK
    (207) Dims -> . Dims LBRACK RBRACK

    LPAREN          shift and go to state 171
    ASSIGN          reduce using rule 73 (VariableDeclaratorId -> IDENTIFIER .)
    SEMI            reduce using rule 73 (VariableDeclaratorId -> IDENTIFIER .)
    COMMA           reduce using rule 73 (VariableDeclaratorId -> IDENTIFIER .)
    LBRACK          shift and go to state 97

    Dims                           shift and go to state 172

state 89

    (71) VariableDeclarator -> VariableDeclaratorId .
    (72) VariableDeclarator -> VariableDeclaratorId . ASSIGN VariableInitializer

    SEMI            reduce using rule 71 (VariableDeclarator -> VariableDeclaratorId .)
    COMMA           reduce using rule 71 (VariableDeclarator -> VariableDeclaratorId .)
    ASSIGN          shift and go to state 173


state 90

    (77) MethodDeclaration -> MethodHeader MethodBody .

    RBRACE          reduce using rule 77 (MethodDeclaration -> MethodHeader MethodBody .)
    VOID            reduce using rule 77 (MethodDeclaration -> MethodHeader MethodBody .)
    STATIC          reduce using rule 77 (MethodDeclaration -> MethodHeader MethodBody .)
    FINAL           reduce using rule 77 (MethodDeclaration -> MethodHeader MethodBody .)
    PRIVATE         reduce using rule 77 (MethodDeclaration -> MethodHeader MethodBody .)
    PROTECTED       reduce using rule 77 (MethodDeclaration -> MethodHeader MethodBody .)
    PUBLIC          reduce using rule 77 (MethodDeclaration -> MethodHeader MethodBody .)
    IDENTIFIER      reduce using rule 77 (MethodDeclaration -> MethodHeader MethodBody .)
    BOOLEAN         reduce using rule 77 (MethodDeclaration -> MethodHeader MethodBody .)
    BYTE            reduce using rule 77 (MethodDeclaration -> MethodHeader MethodBody .)
    SHORT           reduce using rule 77 (MethodDeclaration -> MethodHeader MethodBody .)
    INT             reduce using rule 77 (MethodDeclaration -> MethodHeader MethodBody .)
    LONG            reduce using rule 77 (MethodDeclaration -> MethodHeader MethodBody .)
    CHAR            reduce using rule 77 (MethodDeclaration -> MethodHeader MethodBody .)
    FLOAT           reduce using rule 77 (MethodDeclaration -> MethodHeader MethodBody .)
    DOUBLE          reduce using rule 77 (MethodDeclaration -> MethodHeader MethodBody .)


state 91

    (87) MethodBody -> Block .

    RBRACE          reduce using rule 87 (MethodBody -> Block .)
    VOID            reduce using rule 87 (MethodBody -> Block .)
    STATIC          reduce using rule 87 (MethodBody -> Block .)
    FINAL           reduce using rule 87 (MethodBody -> Block .)
    PRIVATE         reduce using rule 87 (MethodBody -> Block .)
    PROTECTED       reduce using rule 87 (MethodBody -> Block .)
    PUBLIC          reduce using rule 87 (MethodBody -> Block .)
    IDENTIFIER      reduce using rule 87 (MethodBody -> Block .)
    BOOLEAN         reduce using rule 87 (MethodBody -> Block .)
    BYTE            reduce using rule 87 (MethodBody -> Block .)
    SHORT           reduce using rule 87 (MethodBody -> Block .)
    INT             reduce using rule 87 (MethodBody -> Block .)
    LONG            reduce using rule 87 (MethodBody -> Block .)
    CHAR            reduce using rule 87 (MethodBody -> Block .)
    FLOAT           reduce using rule 87 (MethodBody -> Block .)
    DOUBLE          reduce using rule 87 (MethodBody -> Block .)


state 92

    (88) MethodBody -> SEMI .

    RBRACE          reduce using rule 88 (MethodBody -> SEMI .)
    VOID            reduce using rule 88 (MethodBody -> SEMI .)
    STATIC          reduce using rule 88 (MethodBody -> SEMI .)
    FINAL           reduce using rule 88 (MethodBody -> SEMI .)
    PRIVATE         reduce using rule 88 (MethodBody -> SEMI .)
    PROTECTED       reduce using rule 88 (MethodBody -> SEMI .)
    PUBLIC          reduce using rule 88 (MethodBody -> SEMI .)
    IDENTIFIER      reduce using rule 88 (MethodBody -> SEMI .)
    BOOLEAN         reduce using rule 88 (MethodBody -> SEMI .)
    BYTE            reduce using rule 88 (MethodBody -> SEMI .)
    SHORT           reduce using rule 88 (MethodBody -> SEMI .)
    INT             reduce using rule 88 (MethodBody -> SEMI .)
    LONG            reduce using rule 88 (MethodBody -> SEMI .)
    CHAR            reduce using rule 88 (MethodBody -> SEMI .)
    FLOAT           reduce using rule 88 (MethodBody -> SEMI .)
    DOUBLE          reduce using rule 88 (MethodBody -> SEMI .)


state 93

    (103) Block -> LBRACE . RBRACE
    (104) Block -> LBRACE . BlockStatements RBRACE
    (105) BlockStatements -> . BlockStatement
    (106) BlockStatements -> . BlockStatements BlockStatement
    (107) BlockStatement -> . LocalVariableDeclarationStatement
    (108) BlockStatement -> . Statement
    (109) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMI
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (110) LocalVariableDeclaration -> . Type VariableDeclarators
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RBRACE          shift and go to state 174
    IDENTIFIER      shift and go to state 128
    IF              shift and go to state 129
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    BOOLEAN         shift and go to state 63
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    BYTE            shift and go to state 69
    SHORT           shift and go to state 70
    INT             shift and go to state 71
    LONG            shift and go to state 72
    CHAR            shift and go to state 73
    FLOAT           shift and go to state 74
    DOUBLE          shift and go to state 75
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    BlockStatements                shift and go to state 175
    BlockStatement                 shift and go to state 108
    LocalVariableDeclarationStatement shift and go to state 109
    Statement                      shift and go to state 110
    LocalVariableDeclaration       shift and go to state 111
    StatementWithoutTrailingSubstatement shift and go to state 113
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    Type                           shift and go to state 119
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    PrimitiveType                  shift and go to state 58
    ReferenceType                  shift and go to state 59
    StatementExpression            shift and go to state 133
    NumericType                    shift and go to state 62
    ArrayType                      shift and go to state 64
    ClassType                      shift and go to state 65
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    IntegralType                   shift and go to state 66
    FloatingPointType              shift and go to state 67
    Name                           shift and go to state 146
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Primary                        shift and go to state 151
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 94

    (92) ConstructorDeclarator -> SimpleName LPAREN . decl_mark FormalParameterList RPAREN
    (288) decl_mark -> .

    BOOLEAN         reduce using rule 288 (decl_mark -> .)
    BYTE            reduce using rule 288 (decl_mark -> .)
    SHORT           reduce using rule 288 (decl_mark -> .)
    INT             reduce using rule 288 (decl_mark -> .)
    LONG            reduce using rule 288 (decl_mark -> .)
    CHAR            reduce using rule 288 (decl_mark -> .)
    FLOAT           reduce using rule 288 (decl_mark -> .)
    DOUBLE          reduce using rule 288 (decl_mark -> .)
    IDENTIFIER      reduce using rule 288 (decl_mark -> .)

    decl_mark                      shift and go to state 176

state 95

    (93) ConstructorDeclarator -> SimpleName decl_mark . LPAREN RPAREN

    LPAREN          shift and go to state 177


state 96

    (25) ArrayType -> PrimitiveType Dims .
    (207) Dims -> Dims . LBRACK RBRACK

    IDENTIFIER      reduce using rule 25 (ArrayType -> PrimitiveType Dims .)
    LBRACK          shift and go to state 178


state 97

    (206) Dims -> LBRACK . RBRACK

    RBRACK          shift and go to state 179


state 98

    (81) MethodHeader -> VOID MethodDeclarator .

    SEMI            reduce using rule 81 (MethodHeader -> VOID MethodDeclarator .)
    LBRACE          reduce using rule 81 (MethodHeader -> VOID MethodDeclarator .)


state 99

    (82) MethodDeclarator -> IDENTIFIER . LPAREN decl_mark RPAREN
    (83) MethodDeclarator -> IDENTIFIER . LPAREN decl_mark FormalParameterList RPAREN

    LPAREN          shift and go to state 171


state 100

    (26) ArrayType -> Name Dims .
    (207) Dims -> Dims . LBRACK RBRACK

    IDENTIFIER      reduce using rule 26 (ArrayType -> Name Dims .)
    LBRACK          shift and go to state 178


state 101

    (30) QualifiedName -> Name DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 180


state 102

    (90) ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .

    RBRACE          reduce using rule 90 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    VOID            reduce using rule 90 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    STATIC          reduce using rule 90 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    FINAL           reduce using rule 90 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    PRIVATE         reduce using rule 90 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    PROTECTED       reduce using rule 90 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    PUBLIC          reduce using rule 90 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    IDENTIFIER      reduce using rule 90 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    BOOLEAN         reduce using rule 90 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    BYTE            reduce using rule 90 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    SHORT           reduce using rule 90 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    INT             reduce using rule 90 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    LONG            reduce using rule 90 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    CHAR            reduce using rule 90 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    FLOAT           reduce using rule 90 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    DOUBLE          reduce using rule 90 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)


state 103

    (67) FieldDeclaration -> Modifiers Type VariableDeclarators . SEMI
    (70) VariableDeclarators -> VariableDeclarators . COMMA VariableDeclarator

    SEMI            shift and go to state 181
    COMMA           shift and go to state 170


state 104

    (78) MethodHeader -> Modifiers Type MethodDeclarator .

    SEMI            reduce using rule 78 (MethodHeader -> Modifiers Type MethodDeclarator .)
    LBRACE          reduce using rule 78 (MethodHeader -> Modifiers Type MethodDeclarator .)


state 105

    (80) MethodHeader -> Modifiers VOID MethodDeclarator .

    SEMI            reduce using rule 80 (MethodHeader -> Modifiers VOID MethodDeclarator .)
    LBRACE          reduce using rule 80 (MethodHeader -> Modifiers VOID MethodDeclarator .)


state 106

    (95) ConstructorBody -> LBRACE BlockStatements . RBRACE
    (106) BlockStatements -> BlockStatements . BlockStatement
    (107) BlockStatement -> . LocalVariableDeclarationStatement
    (108) BlockStatement -> . Statement
    (109) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMI
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (110) LocalVariableDeclaration -> . Type VariableDeclarators
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RBRACE          shift and go to state 182
    IDENTIFIER      shift and go to state 128
    IF              shift and go to state 129
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    BOOLEAN         shift and go to state 63
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    BYTE            shift and go to state 69
    SHORT           shift and go to state 70
    INT             shift and go to state 71
    LONG            shift and go to state 72
    CHAR            shift and go to state 73
    FLOAT           shift and go to state 74
    DOUBLE          shift and go to state 75
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    BlockStatement                 shift and go to state 183
    LocalVariableDeclarationStatement shift and go to state 109
    Statement                      shift and go to state 110
    LocalVariableDeclaration       shift and go to state 111
    StatementWithoutTrailingSubstatement shift and go to state 113
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    Type                           shift and go to state 119
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    PrimitiveType                  shift and go to state 58
    ReferenceType                  shift and go to state 59
    StatementExpression            shift and go to state 133
    NumericType                    shift and go to state 62
    ArrayType                      shift and go to state 64
    ClassType                      shift and go to state 65
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    IntegralType                   shift and go to state 66
    FloatingPointType              shift and go to state 67
    Name                           shift and go to state 146
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Primary                        shift and go to state 151
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 107

    (96) ConstructorBody -> LBRACE RBRACE .

    RBRACE          reduce using rule 96 (ConstructorBody -> LBRACE RBRACE .)
    VOID            reduce using rule 96 (ConstructorBody -> LBRACE RBRACE .)
    STATIC          reduce using rule 96 (ConstructorBody -> LBRACE RBRACE .)
    FINAL           reduce using rule 96 (ConstructorBody -> LBRACE RBRACE .)
    PRIVATE         reduce using rule 96 (ConstructorBody -> LBRACE RBRACE .)
    PROTECTED       reduce using rule 96 (ConstructorBody -> LBRACE RBRACE .)
    PUBLIC          reduce using rule 96 (ConstructorBody -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 96 (ConstructorBody -> LBRACE RBRACE .)
    BOOLEAN         reduce using rule 96 (ConstructorBody -> LBRACE RBRACE .)
    BYTE            reduce using rule 96 (ConstructorBody -> LBRACE RBRACE .)
    SHORT           reduce using rule 96 (ConstructorBody -> LBRACE RBRACE .)
    INT             reduce using rule 96 (ConstructorBody -> LBRACE RBRACE .)
    LONG            reduce using rule 96 (ConstructorBody -> LBRACE RBRACE .)
    CHAR            reduce using rule 96 (ConstructorBody -> LBRACE RBRACE .)
    FLOAT           reduce using rule 96 (ConstructorBody -> LBRACE RBRACE .)
    DOUBLE          reduce using rule 96 (ConstructorBody -> LBRACE RBRACE .)


state 108

    (105) BlockStatements -> BlockStatement .

    RBRACE          reduce using rule 105 (BlockStatements -> BlockStatement .)
    IDENTIFIER      reduce using rule 105 (BlockStatements -> BlockStatement .)
    IF              reduce using rule 105 (BlockStatements -> BlockStatement .)
    WHILE           reduce using rule 105 (BlockStatements -> BlockStatement .)
    FOR             reduce using rule 105 (BlockStatements -> BlockStatement .)
    LBRACE          reduce using rule 105 (BlockStatements -> BlockStatement .)
    SEMI            reduce using rule 105 (BlockStatements -> BlockStatement .)
    SWITCH          reduce using rule 105 (BlockStatements -> BlockStatement .)
    DO              reduce using rule 105 (BlockStatements -> BlockStatement .)
    BREAK           reduce using rule 105 (BlockStatements -> BlockStatement .)
    CONTINUE        reduce using rule 105 (BlockStatements -> BlockStatement .)
    RETURN          reduce using rule 105 (BlockStatements -> BlockStatement .)
    BOOLEAN         reduce using rule 105 (BlockStatements -> BlockStatement .)
    INC             reduce using rule 105 (BlockStatements -> BlockStatement .)
    DEC             reduce using rule 105 (BlockStatements -> BlockStatement .)
    NEW             reduce using rule 105 (BlockStatements -> BlockStatement .)
    BYTE            reduce using rule 105 (BlockStatements -> BlockStatement .)
    SHORT           reduce using rule 105 (BlockStatements -> BlockStatement .)
    INT             reduce using rule 105 (BlockStatements -> BlockStatement .)
    LONG            reduce using rule 105 (BlockStatements -> BlockStatement .)
    CHAR            reduce using rule 105 (BlockStatements -> BlockStatement .)
    FLOAT           reduce using rule 105 (BlockStatements -> BlockStatement .)
    DOUBLE          reduce using rule 105 (BlockStatements -> BlockStatement .)
    SUPER           reduce using rule 105 (BlockStatements -> BlockStatement .)
    THIS            reduce using rule 105 (BlockStatements -> BlockStatement .)
    LPAREN          reduce using rule 105 (BlockStatements -> BlockStatement .)
    DECIMAL_LITERAL reduce using rule 105 (BlockStatements -> BlockStatement .)
    HEX_LITERAL     reduce using rule 105 (BlockStatements -> BlockStatement .)
    BINARY_LITERAL  reduce using rule 105 (BlockStatements -> BlockStatement .)
    FLOAT_LITERAL   reduce using rule 105 (BlockStatements -> BlockStatement .)
    BOOL_LITERAL    reduce using rule 105 (BlockStatements -> BlockStatement .)
    CHAR_LITERAL    reduce using rule 105 (BlockStatements -> BlockStatement .)
    STRING_LITERAL  reduce using rule 105 (BlockStatements -> BlockStatement .)
    CASE            reduce using rule 105 (BlockStatements -> BlockStatement .)
    DEFAULT         reduce using rule 105 (BlockStatements -> BlockStatement .)


state 109

    (107) BlockStatement -> LocalVariableDeclarationStatement .

    RBRACE          reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    IDENTIFIER      reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    IF              reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    WHILE           reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    FOR             reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    LBRACE          reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    SEMI            reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    SWITCH          reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    DO              reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    BREAK           reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    CONTINUE        reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    RETURN          reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    BOOLEAN         reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    INC             reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    DEC             reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    NEW             reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    BYTE            reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    SHORT           reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    INT             reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    LONG            reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    CHAR            reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    FLOAT           reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    DOUBLE          reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    SUPER           reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    THIS            reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    LPAREN          reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    DECIMAL_LITERAL reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    HEX_LITERAL     reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    BINARY_LITERAL  reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    FLOAT_LITERAL   reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    BOOL_LITERAL    reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    CHAR_LITERAL    reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    STRING_LITERAL  reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    CASE            reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)
    DEFAULT         reduce using rule 107 (BlockStatement -> LocalVariableDeclarationStatement .)


state 110

    (108) BlockStatement -> Statement .

    RBRACE          reduce using rule 108 (BlockStatement -> Statement .)
    IDENTIFIER      reduce using rule 108 (BlockStatement -> Statement .)
    IF              reduce using rule 108 (BlockStatement -> Statement .)
    WHILE           reduce using rule 108 (BlockStatement -> Statement .)
    FOR             reduce using rule 108 (BlockStatement -> Statement .)
    LBRACE          reduce using rule 108 (BlockStatement -> Statement .)
    SEMI            reduce using rule 108 (BlockStatement -> Statement .)
    SWITCH          reduce using rule 108 (BlockStatement -> Statement .)
    DO              reduce using rule 108 (BlockStatement -> Statement .)
    BREAK           reduce using rule 108 (BlockStatement -> Statement .)
    CONTINUE        reduce using rule 108 (BlockStatement -> Statement .)
    RETURN          reduce using rule 108 (BlockStatement -> Statement .)
    BOOLEAN         reduce using rule 108 (BlockStatement -> Statement .)
    INC             reduce using rule 108 (BlockStatement -> Statement .)
    DEC             reduce using rule 108 (BlockStatement -> Statement .)
    NEW             reduce using rule 108 (BlockStatement -> Statement .)
    BYTE            reduce using rule 108 (BlockStatement -> Statement .)
    SHORT           reduce using rule 108 (BlockStatement -> Statement .)
    INT             reduce using rule 108 (BlockStatement -> Statement .)
    LONG            reduce using rule 108 (BlockStatement -> Statement .)
    CHAR            reduce using rule 108 (BlockStatement -> Statement .)
    FLOAT           reduce using rule 108 (BlockStatement -> Statement .)
    DOUBLE          reduce using rule 108 (BlockStatement -> Statement .)
    SUPER           reduce using rule 108 (BlockStatement -> Statement .)
    THIS            reduce using rule 108 (BlockStatement -> Statement .)
    LPAREN          reduce using rule 108 (BlockStatement -> Statement .)
    DECIMAL_LITERAL reduce using rule 108 (BlockStatement -> Statement .)
    HEX_LITERAL     reduce using rule 108 (BlockStatement -> Statement .)
    BINARY_LITERAL  reduce using rule 108 (BlockStatement -> Statement .)
    FLOAT_LITERAL   reduce using rule 108 (BlockStatement -> Statement .)
    BOOL_LITERAL    reduce using rule 108 (BlockStatement -> Statement .)
    CHAR_LITERAL    reduce using rule 108 (BlockStatement -> Statement .)
    STRING_LITERAL  reduce using rule 108 (BlockStatement -> Statement .)
    CASE            reduce using rule 108 (BlockStatement -> Statement .)
    DEFAULT         reduce using rule 108 (BlockStatement -> Statement .)


state 111

    (109) LocalVariableDeclarationStatement -> LocalVariableDeclaration . SEMI

    SEMI            shift and go to state 184


state 112

    (130) EmptyStatement -> SEMI .

    RBRACE          reduce using rule 130 (EmptyStatement -> SEMI .)
    IDENTIFIER      reduce using rule 130 (EmptyStatement -> SEMI .)
    IF              reduce using rule 130 (EmptyStatement -> SEMI .)
    WHILE           reduce using rule 130 (EmptyStatement -> SEMI .)
    FOR             reduce using rule 130 (EmptyStatement -> SEMI .)
    LBRACE          reduce using rule 130 (EmptyStatement -> SEMI .)
    SEMI            reduce using rule 130 (EmptyStatement -> SEMI .)
    SWITCH          reduce using rule 130 (EmptyStatement -> SEMI .)
    DO              reduce using rule 130 (EmptyStatement -> SEMI .)
    BREAK           reduce using rule 130 (EmptyStatement -> SEMI .)
    CONTINUE        reduce using rule 130 (EmptyStatement -> SEMI .)
    RETURN          reduce using rule 130 (EmptyStatement -> SEMI .)
    BOOLEAN         reduce using rule 130 (EmptyStatement -> SEMI .)
    INC             reduce using rule 130 (EmptyStatement -> SEMI .)
    DEC             reduce using rule 130 (EmptyStatement -> SEMI .)
    NEW             reduce using rule 130 (EmptyStatement -> SEMI .)
    BYTE            reduce using rule 130 (EmptyStatement -> SEMI .)
    SHORT           reduce using rule 130 (EmptyStatement -> SEMI .)
    INT             reduce using rule 130 (EmptyStatement -> SEMI .)
    LONG            reduce using rule 130 (EmptyStatement -> SEMI .)
    CHAR            reduce using rule 130 (EmptyStatement -> SEMI .)
    FLOAT           reduce using rule 130 (EmptyStatement -> SEMI .)
    DOUBLE          reduce using rule 130 (EmptyStatement -> SEMI .)
    SUPER           reduce using rule 130 (EmptyStatement -> SEMI .)
    THIS            reduce using rule 130 (EmptyStatement -> SEMI .)
    LPAREN          reduce using rule 130 (EmptyStatement -> SEMI .)
    DECIMAL_LITERAL reduce using rule 130 (EmptyStatement -> SEMI .)
    HEX_LITERAL     reduce using rule 130 (EmptyStatement -> SEMI .)
    BINARY_LITERAL  reduce using rule 130 (EmptyStatement -> SEMI .)
    FLOAT_LITERAL   reduce using rule 130 (EmptyStatement -> SEMI .)
    BOOL_LITERAL    reduce using rule 130 (EmptyStatement -> SEMI .)
    CHAR_LITERAL    reduce using rule 130 (EmptyStatement -> SEMI .)
    STRING_LITERAL  reduce using rule 130 (EmptyStatement -> SEMI .)
    CASE            reduce using rule 130 (EmptyStatement -> SEMI .)
    DEFAULT         reduce using rule 130 (EmptyStatement -> SEMI .)
    ELSE            reduce using rule 130 (EmptyStatement -> SEMI .)


state 113

    (111) Statement -> StatementWithoutTrailingSubstatement .

    RBRACE          reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    IDENTIFIER      reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    IF              reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    WHILE           reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    FOR             reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    LBRACE          reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    SEMI            reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    SWITCH          reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    DO              reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    BREAK           reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    CONTINUE        reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    RETURN          reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    BOOLEAN         reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    INC             reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    DEC             reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    NEW             reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    BYTE            reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    SHORT           reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    INT             reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    LONG            reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    CHAR            reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    FLOAT           reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    DOUBLE          reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    SUPER           reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    THIS            reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    LPAREN          reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    DECIMAL_LITERAL reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    HEX_LITERAL     reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    BINARY_LITERAL  reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    FLOAT_LITERAL   reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    BOOL_LITERAL    reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    CHAR_LITERAL    reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    STRING_LITERAL  reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    CASE            reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    DEFAULT         reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)


state 114

    (112) Statement -> LabeledStatement .

    RBRACE          reduce using rule 112 (Statement -> LabeledStatement .)
    IDENTIFIER      reduce using rule 112 (Statement -> LabeledStatement .)
    IF              reduce using rule 112 (Statement -> LabeledStatement .)
    WHILE           reduce using rule 112 (Statement -> LabeledStatement .)
    FOR             reduce using rule 112 (Statement -> LabeledStatement .)
    LBRACE          reduce using rule 112 (Statement -> LabeledStatement .)
    SEMI            reduce using rule 112 (Statement -> LabeledStatement .)
    SWITCH          reduce using rule 112 (Statement -> LabeledStatement .)
    DO              reduce using rule 112 (Statement -> LabeledStatement .)
    BREAK           reduce using rule 112 (Statement -> LabeledStatement .)
    CONTINUE        reduce using rule 112 (Statement -> LabeledStatement .)
    RETURN          reduce using rule 112 (Statement -> LabeledStatement .)
    BOOLEAN         reduce using rule 112 (Statement -> LabeledStatement .)
    INC             reduce using rule 112 (Statement -> LabeledStatement .)
    DEC             reduce using rule 112 (Statement -> LabeledStatement .)
    NEW             reduce using rule 112 (Statement -> LabeledStatement .)
    BYTE            reduce using rule 112 (Statement -> LabeledStatement .)
    SHORT           reduce using rule 112 (Statement -> LabeledStatement .)
    INT             reduce using rule 112 (Statement -> LabeledStatement .)
    LONG            reduce using rule 112 (Statement -> LabeledStatement .)
    CHAR            reduce using rule 112 (Statement -> LabeledStatement .)
    FLOAT           reduce using rule 112 (Statement -> LabeledStatement .)
    DOUBLE          reduce using rule 112 (Statement -> LabeledStatement .)
    SUPER           reduce using rule 112 (Statement -> LabeledStatement .)
    THIS            reduce using rule 112 (Statement -> LabeledStatement .)
    LPAREN          reduce using rule 112 (Statement -> LabeledStatement .)
    DECIMAL_LITERAL reduce using rule 112 (Statement -> LabeledStatement .)
    HEX_LITERAL     reduce using rule 112 (Statement -> LabeledStatement .)
    BINARY_LITERAL  reduce using rule 112 (Statement -> LabeledStatement .)
    FLOAT_LITERAL   reduce using rule 112 (Statement -> LabeledStatement .)
    BOOL_LITERAL    reduce using rule 112 (Statement -> LabeledStatement .)
    CHAR_LITERAL    reduce using rule 112 (Statement -> LabeledStatement .)
    STRING_LITERAL  reduce using rule 112 (Statement -> LabeledStatement .)
    CASE            reduce using rule 112 (Statement -> LabeledStatement .)
    DEFAULT         reduce using rule 112 (Statement -> LabeledStatement .)


state 115

    (113) Statement -> IfThenStatement .

    RBRACE          reduce using rule 113 (Statement -> IfThenStatement .)
    IDENTIFIER      reduce using rule 113 (Statement -> IfThenStatement .)
    IF              reduce using rule 113 (Statement -> IfThenStatement .)
    WHILE           reduce using rule 113 (Statement -> IfThenStatement .)
    FOR             reduce using rule 113 (Statement -> IfThenStatement .)
    LBRACE          reduce using rule 113 (Statement -> IfThenStatement .)
    SEMI            reduce using rule 113 (Statement -> IfThenStatement .)
    SWITCH          reduce using rule 113 (Statement -> IfThenStatement .)
    DO              reduce using rule 113 (Statement -> IfThenStatement .)
    BREAK           reduce using rule 113 (Statement -> IfThenStatement .)
    CONTINUE        reduce using rule 113 (Statement -> IfThenStatement .)
    RETURN          reduce using rule 113 (Statement -> IfThenStatement .)
    BOOLEAN         reduce using rule 113 (Statement -> IfThenStatement .)
    INC             reduce using rule 113 (Statement -> IfThenStatement .)
    DEC             reduce using rule 113 (Statement -> IfThenStatement .)
    NEW             reduce using rule 113 (Statement -> IfThenStatement .)
    BYTE            reduce using rule 113 (Statement -> IfThenStatement .)
    SHORT           reduce using rule 113 (Statement -> IfThenStatement .)
    INT             reduce using rule 113 (Statement -> IfThenStatement .)
    LONG            reduce using rule 113 (Statement -> IfThenStatement .)
    CHAR            reduce using rule 113 (Statement -> IfThenStatement .)
    FLOAT           reduce using rule 113 (Statement -> IfThenStatement .)
    DOUBLE          reduce using rule 113 (Statement -> IfThenStatement .)
    SUPER           reduce using rule 113 (Statement -> IfThenStatement .)
    THIS            reduce using rule 113 (Statement -> IfThenStatement .)
    LPAREN          reduce using rule 113 (Statement -> IfThenStatement .)
    DECIMAL_LITERAL reduce using rule 113 (Statement -> IfThenStatement .)
    HEX_LITERAL     reduce using rule 113 (Statement -> IfThenStatement .)
    BINARY_LITERAL  reduce using rule 113 (Statement -> IfThenStatement .)
    FLOAT_LITERAL   reduce using rule 113 (Statement -> IfThenStatement .)
    BOOL_LITERAL    reduce using rule 113 (Statement -> IfThenStatement .)
    CHAR_LITERAL    reduce using rule 113 (Statement -> IfThenStatement .)
    STRING_LITERAL  reduce using rule 113 (Statement -> IfThenStatement .)
    CASE            reduce using rule 113 (Statement -> IfThenStatement .)
    DEFAULT         reduce using rule 113 (Statement -> IfThenStatement .)


state 116

    (114) Statement -> IfThenElseStatement .

    RBRACE          reduce using rule 114 (Statement -> IfThenElseStatement .)
    IDENTIFIER      reduce using rule 114 (Statement -> IfThenElseStatement .)
    IF              reduce using rule 114 (Statement -> IfThenElseStatement .)
    WHILE           reduce using rule 114 (Statement -> IfThenElseStatement .)
    FOR             reduce using rule 114 (Statement -> IfThenElseStatement .)
    LBRACE          reduce using rule 114 (Statement -> IfThenElseStatement .)
    SEMI            reduce using rule 114 (Statement -> IfThenElseStatement .)
    SWITCH          reduce using rule 114 (Statement -> IfThenElseStatement .)
    DO              reduce using rule 114 (Statement -> IfThenElseStatement .)
    BREAK           reduce using rule 114 (Statement -> IfThenElseStatement .)
    CONTINUE        reduce using rule 114 (Statement -> IfThenElseStatement .)
    RETURN          reduce using rule 114 (Statement -> IfThenElseStatement .)
    BOOLEAN         reduce using rule 114 (Statement -> IfThenElseStatement .)
    INC             reduce using rule 114 (Statement -> IfThenElseStatement .)
    DEC             reduce using rule 114 (Statement -> IfThenElseStatement .)
    NEW             reduce using rule 114 (Statement -> IfThenElseStatement .)
    BYTE            reduce using rule 114 (Statement -> IfThenElseStatement .)
    SHORT           reduce using rule 114 (Statement -> IfThenElseStatement .)
    INT             reduce using rule 114 (Statement -> IfThenElseStatement .)
    LONG            reduce using rule 114 (Statement -> IfThenElseStatement .)
    CHAR            reduce using rule 114 (Statement -> IfThenElseStatement .)
    FLOAT           reduce using rule 114 (Statement -> IfThenElseStatement .)
    DOUBLE          reduce using rule 114 (Statement -> IfThenElseStatement .)
    SUPER           reduce using rule 114 (Statement -> IfThenElseStatement .)
    THIS            reduce using rule 114 (Statement -> IfThenElseStatement .)
    LPAREN          reduce using rule 114 (Statement -> IfThenElseStatement .)
    DECIMAL_LITERAL reduce using rule 114 (Statement -> IfThenElseStatement .)
    HEX_LITERAL     reduce using rule 114 (Statement -> IfThenElseStatement .)
    BINARY_LITERAL  reduce using rule 114 (Statement -> IfThenElseStatement .)
    FLOAT_LITERAL   reduce using rule 114 (Statement -> IfThenElseStatement .)
    BOOL_LITERAL    reduce using rule 114 (Statement -> IfThenElseStatement .)
    CHAR_LITERAL    reduce using rule 114 (Statement -> IfThenElseStatement .)
    STRING_LITERAL  reduce using rule 114 (Statement -> IfThenElseStatement .)
    CASE            reduce using rule 114 (Statement -> IfThenElseStatement .)
    DEFAULT         reduce using rule 114 (Statement -> IfThenElseStatement .)


state 117

    (115) Statement -> WhileStatement .

    RBRACE          reduce using rule 115 (Statement -> WhileStatement .)
    IDENTIFIER      reduce using rule 115 (Statement -> WhileStatement .)
    IF              reduce using rule 115 (Statement -> WhileStatement .)
    WHILE           reduce using rule 115 (Statement -> WhileStatement .)
    FOR             reduce using rule 115 (Statement -> WhileStatement .)
    LBRACE          reduce using rule 115 (Statement -> WhileStatement .)
    SEMI            reduce using rule 115 (Statement -> WhileStatement .)
    SWITCH          reduce using rule 115 (Statement -> WhileStatement .)
    DO              reduce using rule 115 (Statement -> WhileStatement .)
    BREAK           reduce using rule 115 (Statement -> WhileStatement .)
    CONTINUE        reduce using rule 115 (Statement -> WhileStatement .)
    RETURN          reduce using rule 115 (Statement -> WhileStatement .)
    BOOLEAN         reduce using rule 115 (Statement -> WhileStatement .)
    INC             reduce using rule 115 (Statement -> WhileStatement .)
    DEC             reduce using rule 115 (Statement -> WhileStatement .)
    NEW             reduce using rule 115 (Statement -> WhileStatement .)
    BYTE            reduce using rule 115 (Statement -> WhileStatement .)
    SHORT           reduce using rule 115 (Statement -> WhileStatement .)
    INT             reduce using rule 115 (Statement -> WhileStatement .)
    LONG            reduce using rule 115 (Statement -> WhileStatement .)
    CHAR            reduce using rule 115 (Statement -> WhileStatement .)
    FLOAT           reduce using rule 115 (Statement -> WhileStatement .)
    DOUBLE          reduce using rule 115 (Statement -> WhileStatement .)
    SUPER           reduce using rule 115 (Statement -> WhileStatement .)
    THIS            reduce using rule 115 (Statement -> WhileStatement .)
    LPAREN          reduce using rule 115 (Statement -> WhileStatement .)
    DECIMAL_LITERAL reduce using rule 115 (Statement -> WhileStatement .)
    HEX_LITERAL     reduce using rule 115 (Statement -> WhileStatement .)
    BINARY_LITERAL  reduce using rule 115 (Statement -> WhileStatement .)
    FLOAT_LITERAL   reduce using rule 115 (Statement -> WhileStatement .)
    BOOL_LITERAL    reduce using rule 115 (Statement -> WhileStatement .)
    CHAR_LITERAL    reduce using rule 115 (Statement -> WhileStatement .)
    STRING_LITERAL  reduce using rule 115 (Statement -> WhileStatement .)
    CASE            reduce using rule 115 (Statement -> WhileStatement .)
    DEFAULT         reduce using rule 115 (Statement -> WhileStatement .)


state 118

    (116) Statement -> ForStatement .

    RBRACE          reduce using rule 116 (Statement -> ForStatement .)
    IDENTIFIER      reduce using rule 116 (Statement -> ForStatement .)
    IF              reduce using rule 116 (Statement -> ForStatement .)
    WHILE           reduce using rule 116 (Statement -> ForStatement .)
    FOR             reduce using rule 116 (Statement -> ForStatement .)
    LBRACE          reduce using rule 116 (Statement -> ForStatement .)
    SEMI            reduce using rule 116 (Statement -> ForStatement .)
    SWITCH          reduce using rule 116 (Statement -> ForStatement .)
    DO              reduce using rule 116 (Statement -> ForStatement .)
    BREAK           reduce using rule 116 (Statement -> ForStatement .)
    CONTINUE        reduce using rule 116 (Statement -> ForStatement .)
    RETURN          reduce using rule 116 (Statement -> ForStatement .)
    BOOLEAN         reduce using rule 116 (Statement -> ForStatement .)
    INC             reduce using rule 116 (Statement -> ForStatement .)
    DEC             reduce using rule 116 (Statement -> ForStatement .)
    NEW             reduce using rule 116 (Statement -> ForStatement .)
    BYTE            reduce using rule 116 (Statement -> ForStatement .)
    SHORT           reduce using rule 116 (Statement -> ForStatement .)
    INT             reduce using rule 116 (Statement -> ForStatement .)
    LONG            reduce using rule 116 (Statement -> ForStatement .)
    CHAR            reduce using rule 116 (Statement -> ForStatement .)
    FLOAT           reduce using rule 116 (Statement -> ForStatement .)
    DOUBLE          reduce using rule 116 (Statement -> ForStatement .)
    SUPER           reduce using rule 116 (Statement -> ForStatement .)
    THIS            reduce using rule 116 (Statement -> ForStatement .)
    LPAREN          reduce using rule 116 (Statement -> ForStatement .)
    DECIMAL_LITERAL reduce using rule 116 (Statement -> ForStatement .)
    HEX_LITERAL     reduce using rule 116 (Statement -> ForStatement .)
    BINARY_LITERAL  reduce using rule 116 (Statement -> ForStatement .)
    FLOAT_LITERAL   reduce using rule 116 (Statement -> ForStatement .)
    BOOL_LITERAL    reduce using rule 116 (Statement -> ForStatement .)
    CHAR_LITERAL    reduce using rule 116 (Statement -> ForStatement .)
    STRING_LITERAL  reduce using rule 116 (Statement -> ForStatement .)
    CASE            reduce using rule 116 (Statement -> ForStatement .)
    DEFAULT         reduce using rule 116 (Statement -> ForStatement .)


state 119

    (110) LocalVariableDeclaration -> Type . VariableDeclarators
    (69) VariableDeclarators -> . VariableDeclarator
    (70) VariableDeclarators -> . VariableDeclarators COMMA VariableDeclarator
    (71) VariableDeclarator -> . VariableDeclaratorId
    (72) VariableDeclarator -> . VariableDeclaratorId ASSIGN VariableInitializer
    (73) VariableDeclaratorId -> . IDENTIFIER
    (74) VariableDeclaratorId -> . IDENTIFIER Dims

    IDENTIFIER      shift and go to state 186

    VariableDeclarators            shift and go to state 185
    VariableDeclarator             shift and go to state 87
    VariableDeclaratorId           shift and go to state 89

state 120

    (122) StatementWithoutTrailingSubstatement -> Block .

    RBRACE          reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    IDENTIFIER      reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    IF              reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    WHILE           reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    FOR             reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    LBRACE          reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    SEMI            reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    SWITCH          reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    DO              reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    BREAK           reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    CONTINUE        reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    RETURN          reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    BOOLEAN         reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    INC             reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    DEC             reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    NEW             reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    BYTE            reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    SHORT           reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    INT             reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    LONG            reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    CHAR            reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    FLOAT           reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    DOUBLE          reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    SUPER           reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    THIS            reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    LPAREN          reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    DECIMAL_LITERAL reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    HEX_LITERAL     reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    BINARY_LITERAL  reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    FLOAT_LITERAL   reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    BOOL_LITERAL    reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    CHAR_LITERAL    reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    STRING_LITERAL  reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    CASE            reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    DEFAULT         reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)
    ELSE            reduce using rule 122 (StatementWithoutTrailingSubstatement -> Block .)


state 121

    (123) StatementWithoutTrailingSubstatement -> EmptyStatement .

    RBRACE          reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    IDENTIFIER      reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    IF              reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    WHILE           reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    FOR             reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    LBRACE          reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    SEMI            reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    SWITCH          reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    DO              reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    BREAK           reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    CONTINUE        reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    RETURN          reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    BOOLEAN         reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    INC             reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    DEC             reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    NEW             reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    BYTE            reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    SHORT           reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    INT             reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    LONG            reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    CHAR            reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    FLOAT           reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    DOUBLE          reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    SUPER           reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    THIS            reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    LPAREN          reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    DECIMAL_LITERAL reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    HEX_LITERAL     reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    BINARY_LITERAL  reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    FLOAT_LITERAL   reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    BOOL_LITERAL    reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    CHAR_LITERAL    reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    STRING_LITERAL  reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    CASE            reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    DEFAULT         reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    ELSE            reduce using rule 123 (StatementWithoutTrailingSubstatement -> EmptyStatement .)


state 122

    (124) StatementWithoutTrailingSubstatement -> ExpressionStatement .

    RBRACE          reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    IDENTIFIER      reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    IF              reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    WHILE           reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    FOR             reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    LBRACE          reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    SEMI            reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    SWITCH          reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    DO              reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    BREAK           reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    CONTINUE        reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    RETURN          reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    BOOLEAN         reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    INC             reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    DEC             reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    NEW             reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    BYTE            reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    SHORT           reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    INT             reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    LONG            reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    CHAR            reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    FLOAT           reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    DOUBLE          reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    SUPER           reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    THIS            reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    LPAREN          reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    DECIMAL_LITERAL reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    HEX_LITERAL     reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    BINARY_LITERAL  reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    FLOAT_LITERAL   reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    BOOL_LITERAL    reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    CHAR_LITERAL    reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    STRING_LITERAL  reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    CASE            reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    DEFAULT         reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    ELSE            reduce using rule 124 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)


state 123

    (125) StatementWithoutTrailingSubstatement -> SwitchStatement .

    RBRACE          reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    IDENTIFIER      reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    IF              reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    WHILE           reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    FOR             reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    LBRACE          reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    SEMI            reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    SWITCH          reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    DO              reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    BREAK           reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    CONTINUE        reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    RETURN          reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    BOOLEAN         reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    INC             reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    DEC             reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    NEW             reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    BYTE            reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    SHORT           reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    INT             reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    LONG            reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    CHAR            reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    FLOAT           reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    DOUBLE          reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    SUPER           reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    THIS            reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    LPAREN          reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    DECIMAL_LITERAL reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    HEX_LITERAL     reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    BINARY_LITERAL  reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    FLOAT_LITERAL   reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    BOOL_LITERAL    reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    CHAR_LITERAL    reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    STRING_LITERAL  reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    CASE            reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    DEFAULT         reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    ELSE            reduce using rule 125 (StatementWithoutTrailingSubstatement -> SwitchStatement .)


state 124

    (126) StatementWithoutTrailingSubstatement -> DoStatement .

    RBRACE          reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    IDENTIFIER      reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    IF              reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    WHILE           reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    FOR             reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    LBRACE          reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    SEMI            reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    SWITCH          reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    DO              reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    BREAK           reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    CONTINUE        reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    RETURN          reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    BOOLEAN         reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    INC             reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    DEC             reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    NEW             reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    BYTE            reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    SHORT           reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    INT             reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    LONG            reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    CHAR            reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    FLOAT           reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    DOUBLE          reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    SUPER           reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    THIS            reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    LPAREN          reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    DECIMAL_LITERAL reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    HEX_LITERAL     reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    BINARY_LITERAL  reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    FLOAT_LITERAL   reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    BOOL_LITERAL    reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    CHAR_LITERAL    reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    STRING_LITERAL  reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    CASE            reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    DEFAULT         reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)
    ELSE            reduce using rule 126 (StatementWithoutTrailingSubstatement -> DoStatement .)


state 125

    (127) StatementWithoutTrailingSubstatement -> BreakStatement .

    RBRACE          reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    IDENTIFIER      reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    IF              reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    WHILE           reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    FOR             reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    LBRACE          reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    SEMI            reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    SWITCH          reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    DO              reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    BREAK           reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    CONTINUE        reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    RETURN          reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    BOOLEAN         reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    INC             reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    DEC             reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    NEW             reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    BYTE            reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    SHORT           reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    INT             reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    LONG            reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    CHAR            reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    FLOAT           reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    DOUBLE          reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    SUPER           reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    THIS            reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    LPAREN          reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    DECIMAL_LITERAL reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    HEX_LITERAL     reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    BINARY_LITERAL  reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    FLOAT_LITERAL   reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    BOOL_LITERAL    reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    CHAR_LITERAL    reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    STRING_LITERAL  reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    CASE            reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    DEFAULT         reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    ELSE            reduce using rule 127 (StatementWithoutTrailingSubstatement -> BreakStatement .)


state 126

    (128) StatementWithoutTrailingSubstatement -> ContinueStatement .

    RBRACE          reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    IDENTIFIER      reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    IF              reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    WHILE           reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    FOR             reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    LBRACE          reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    SEMI            reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    SWITCH          reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    DO              reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    BREAK           reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    CONTINUE        reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    RETURN          reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    BOOLEAN         reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    INC             reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    DEC             reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    NEW             reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    BYTE            reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    SHORT           reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    INT             reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    LONG            reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    CHAR            reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    FLOAT           reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    DOUBLE          reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    SUPER           reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    THIS            reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    LPAREN          reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    DECIMAL_LITERAL reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    HEX_LITERAL     reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    BINARY_LITERAL  reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    FLOAT_LITERAL   reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    BOOL_LITERAL    reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    CHAR_LITERAL    reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    STRING_LITERAL  reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    CASE            reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    DEFAULT         reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    ELSE            reduce using rule 128 (StatementWithoutTrailingSubstatement -> ContinueStatement .)


state 127

    (129) StatementWithoutTrailingSubstatement -> ReturnStatement .

    RBRACE          reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    IDENTIFIER      reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    IF              reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    WHILE           reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    FOR             reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    LBRACE          reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    SEMI            reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    SWITCH          reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    DO              reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    BREAK           reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    CONTINUE        reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    RETURN          reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    BOOLEAN         reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    INC             reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    DEC             reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    NEW             reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    BYTE            reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    SHORT           reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    INT             reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    LONG            reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    CHAR            reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    FLOAT           reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    DOUBLE          reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    SUPER           reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    THIS            reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    LPAREN          reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    DECIMAL_LITERAL reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    HEX_LITERAL     reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    BINARY_LITERAL  reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    FLOAT_LITERAL   reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    BOOL_LITERAL    reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    CHAR_LITERAL    reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    STRING_LITERAL  reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    CASE            reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    DEFAULT         reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    ELSE            reduce using rule 129 (StatementWithoutTrailingSubstatement -> ReturnStatement .)


state 128

    (131) LabeledStatement -> IDENTIFIER . COLON Statement
    (29) SimpleName -> IDENTIFIER .

    COLON           shift and go to state 187
    LPAREN          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DOT             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LBRACK          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    ASSIGN          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    ADD_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    SUB_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    MUL_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    AND_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    OR_ASSIGN       reduce using rule 29 (SimpleName -> IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 29 (SimpleName -> IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 29 (SimpleName -> IDENTIFIER .)
    URSHIFT_ASSIGN  reduce using rule 29 (SimpleName -> IDENTIFIER .)
    INC             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DEC             reduce using rule 29 (SimpleName -> IDENTIFIER .)


state 129

    (141) IfThenStatement -> IF . begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> IF . begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (290) begin_scope -> .

    LPAREN          reduce using rule 290 (begin_scope -> .)

    begin_scope                    shift and go to state 188

state 130

    (190) PrimaryNoNewArray -> LPAREN . Expression RPAREN
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    Expression                     shift and go to state 190
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 131

    (156) WhileStatement -> WHILE . begin_scope LPAREN Expression RPAREN Statement end_scope
    (290) begin_scope -> .

    LPAREN          reduce using rule 290 (begin_scope -> .)

    begin_scope                    shift and go to state 222

state 132

    (159) ForStatement -> FOR . begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> FOR . begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> FOR . begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> FOR . begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> FOR . begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> FOR . begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> FOR . begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> FOR . begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (290) begin_scope -> .

    LPAREN          reduce using rule 290 (begin_scope -> .)

    begin_scope                    shift and go to state 223

state 133

    (133) ExpressionStatement -> StatementExpression . SEMI

    SEMI            shift and go to state 224


state 134

    (144) SwitchStatement -> SWITCH . LPAREN Expression RPAREN SwitchBlock

    LPAREN          shift and go to state 225


state 135

    (158) DoStatement -> DO . begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (290) begin_scope -> .

    IDENTIFIER      reduce using rule 290 (begin_scope -> .)
    IF              reduce using rule 290 (begin_scope -> .)
    WHILE           reduce using rule 290 (begin_scope -> .)
    FOR             reduce using rule 290 (begin_scope -> .)
    LBRACE          reduce using rule 290 (begin_scope -> .)
    SEMI            reduce using rule 290 (begin_scope -> .)
    SWITCH          reduce using rule 290 (begin_scope -> .)
    DO              reduce using rule 290 (begin_scope -> .)
    BREAK           reduce using rule 290 (begin_scope -> .)
    CONTINUE        reduce using rule 290 (begin_scope -> .)
    RETURN          reduce using rule 290 (begin_scope -> .)
    INC             reduce using rule 290 (begin_scope -> .)
    DEC             reduce using rule 290 (begin_scope -> .)
    NEW             reduce using rule 290 (begin_scope -> .)
    SUPER           reduce using rule 290 (begin_scope -> .)
    THIS            reduce using rule 290 (begin_scope -> .)
    LPAREN          reduce using rule 290 (begin_scope -> .)
    DECIMAL_LITERAL reduce using rule 290 (begin_scope -> .)
    HEX_LITERAL     reduce using rule 290 (begin_scope -> .)
    BINARY_LITERAL  reduce using rule 290 (begin_scope -> .)
    FLOAT_LITERAL   reduce using rule 290 (begin_scope -> .)
    BOOL_LITERAL    reduce using rule 290 (begin_scope -> .)
    CHAR_LITERAL    reduce using rule 290 (begin_scope -> .)
    STRING_LITERAL  reduce using rule 290 (begin_scope -> .)

    begin_scope                    shift and go to state 226

state 136

    (180) BreakStatement -> BREAK . IDENTIFIER SEMI
    (181) BreakStatement -> BREAK . SEMI

    IDENTIFIER      shift and go to state 227
    SEMI            shift and go to state 228


state 137

    (182) ContinueStatement -> CONTINUE . IDENTIFIER SEMI
    (183) ContinueStatement -> CONTINUE . SEMI

    IDENTIFIER      shift and go to state 229
    SEMI            shift and go to state 230


state 138

    (184) ReturnStatement -> RETURN . Expression SEMI
    (185) ReturnStatement -> RETURN . SEMI
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    SEMI            shift and go to state 232
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    Expression                     shift and go to state 231
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 139

    (134) StatementExpression -> Assignment .

    SEMI            reduce using rule 134 (StatementExpression -> Assignment .)
    COMMA           reduce using rule 134 (StatementExpression -> Assignment .)
    RPAREN          reduce using rule 134 (StatementExpression -> Assignment .)


state 140

    (135) StatementExpression -> PreIncrementExpression .

    SEMI            reduce using rule 135 (StatementExpression -> PreIncrementExpression .)
    COMMA           reduce using rule 135 (StatementExpression -> PreIncrementExpression .)
    RPAREN          reduce using rule 135 (StatementExpression -> PreIncrementExpression .)


state 141

    (136) StatementExpression -> PreDecrementExpression .

    SEMI            reduce using rule 136 (StatementExpression -> PreDecrementExpression .)
    COMMA           reduce using rule 136 (StatementExpression -> PreDecrementExpression .)
    RPAREN          reduce using rule 136 (StatementExpression -> PreDecrementExpression .)


state 142

    (137) StatementExpression -> PostIncrementExpression .
    (218) PostfixExpression -> PostIncrementExpression .

    SEMI            reduce using rule 137 (StatementExpression -> PostIncrementExpression .)
    COMMA           reduce using rule 137 (StatementExpression -> PostIncrementExpression .)
    RPAREN          reduce using rule 137 (StatementExpression -> PostIncrementExpression .)
    INC             reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    DEC             reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)


state 143

    (138) StatementExpression -> PostDecrementExpression .
    (219) PostfixExpression -> PostDecrementExpression .

    SEMI            reduce using rule 138 (StatementExpression -> PostDecrementExpression .)
    COMMA           reduce using rule 138 (StatementExpression -> PostDecrementExpression .)
    RPAREN          reduce using rule 138 (StatementExpression -> PostDecrementExpression .)
    INC             reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    DEC             reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)


state 144

    (139) StatementExpression -> MethodInvocation .
    (193) PrimaryNoNewArray -> MethodInvocation .

    SEMI            reduce using rule 139 (StatementExpression -> MethodInvocation .)
    COMMA           reduce using rule 139 (StatementExpression -> MethodInvocation .)
    RPAREN          reduce using rule 139 (StatementExpression -> MethodInvocation .)
    LBRACK          reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    DOT             reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    INC             reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    DEC             reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)


state 145

    (140) StatementExpression -> ClassInstanceCreationExpression .
    (191) PrimaryNoNewArray -> ClassInstanceCreationExpression .

    SEMI            reduce using rule 140 (StatementExpression -> ClassInstanceCreationExpression .)
    COMMA           reduce using rule 140 (StatementExpression -> ClassInstanceCreationExpression .)
    RPAREN          reduce using rule 140 (StatementExpression -> ClassInstanceCreationExpression .)
    LBRACK          reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    DOT             reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    INC             reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    DEC             reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)


state 146

    (26) ArrayType -> Name . Dims
    (24) ClassType -> Name .
    (210) MethodInvocation -> Name . LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> Name . LPAREN RPAREN
    (271) LeftHandSide -> Name .
    (217) PostfixExpression -> Name .
    (30) QualifiedName -> Name . DOT IDENTIFIER
    (214) ArrayAccess -> Name . LBRACK Expression RBRACK
    (206) Dims -> . LBRACK RBRACK
    (207) Dims -> . Dims LBRACK RBRACK

    IDENTIFIER      reduce using rule 24 (ClassType -> Name .)
    LPAREN          shift and go to state 233
    ASSIGN          reduce using rule 271 (LeftHandSide -> Name .)
    ADD_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    SUB_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    MUL_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    DIV_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    AND_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    OR_ASSIGN       reduce using rule 271 (LeftHandSide -> Name .)
    XOR_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    MOD_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    LSHIFT_ASSIGN   reduce using rule 271 (LeftHandSide -> Name .)
    RSHIFT_ASSIGN   reduce using rule 271 (LeftHandSide -> Name .)
    URSHIFT_ASSIGN  reduce using rule 271 (LeftHandSide -> Name .)
    INC             reduce using rule 217 (PostfixExpression -> Name .)
    DEC             reduce using rule 217 (PostfixExpression -> Name .)
    DOT             shift and go to state 101
    LBRACK          shift and go to state 234

    Dims                           shift and go to state 100

state 147

    (270) Assignment -> LeftHandSide . AssignmentOperator AssignmentExpression
    (274) AssignmentOperator -> . ASSIGN
    (275) AssignmentOperator -> . ADD_ASSIGN
    (276) AssignmentOperator -> . SUB_ASSIGN
    (277) AssignmentOperator -> . MUL_ASSIGN
    (278) AssignmentOperator -> . DIV_ASSIGN
    (279) AssignmentOperator -> . AND_ASSIGN
    (280) AssignmentOperator -> . OR_ASSIGN
    (281) AssignmentOperator -> . XOR_ASSIGN
    (282) AssignmentOperator -> . MOD_ASSIGN
    (283) AssignmentOperator -> . LSHIFT_ASSIGN
    (284) AssignmentOperator -> . RSHIFT_ASSIGN
    (285) AssignmentOperator -> . URSHIFT_ASSIGN

    ASSIGN          shift and go to state 236
    ADD_ASSIGN      shift and go to state 237
    SUB_ASSIGN      shift and go to state 238
    MUL_ASSIGN      shift and go to state 239
    DIV_ASSIGN      shift and go to state 240
    AND_ASSIGN      shift and go to state 241
    OR_ASSIGN       shift and go to state 242
    XOR_ASSIGN      shift and go to state 243
    MOD_ASSIGN      shift and go to state 244
    LSHIFT_ASSIGN   shift and go to state 245
    RSHIFT_ASSIGN   shift and go to state 246
    URSHIFT_ASSIGN  shift and go to state 247

    AssignmentOperator             shift and go to state 235

state 148

    (227) PreIncrementExpression -> INC . UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    UnaryExpression                shift and go to state 248
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 149

    (228) PreDecrementExpression -> DEC . UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    UnaryExpression                shift and go to state 254
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 150

    (220) PostIncrementExpression -> PostfixExpression . INC
    (221) PostDecrementExpression -> PostfixExpression . DEC

    INC             shift and go to state 255
    DEC             shift and go to state 256


state 151

    (212) MethodInvocation -> Primary . DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> Primary . DOT IDENTIFIER LPAREN RPAREN
    (216) PostfixExpression -> Primary .
    (208) FieldAccess -> Primary . DOT IDENTIFIER

    DOT             shift and go to state 257
    INC             reduce using rule 216 (PostfixExpression -> Primary .)
    DEC             reduce using rule 216 (PostfixExpression -> Primary .)


state 152

    (195) ClassInstanceCreationExpression -> NEW . ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> NEW . ClassType LPAREN ArgumentList RPAREN
    (199) ArrayCreationExpression -> NEW . PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> NEW . PrimitiveType DimExprs
    (201) ArrayCreationExpression -> NEW . ClassType DimExprs Dims
    (202) ArrayCreationExpression -> NEW . ClassType DimExprs
    (24) ClassType -> . Name
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE

    BOOLEAN         shift and go to state 63
    IDENTIFIER      shift and go to state 61
    BYTE            shift and go to state 69
    SHORT           shift and go to state 70
    INT             shift and go to state 71
    LONG            shift and go to state 72
    CHAR            shift and go to state 73
    FLOAT           shift and go to state 74
    DOUBLE          shift and go to state 75

    ClassType                      shift and go to state 258
    PrimitiveType                  shift and go to state 259
    Name                           shift and go to state 260
    NumericType                    shift and go to state 62
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    IntegralType                   shift and go to state 66
    FloatingPointType              shift and go to state 67

state 153

    (27) Name -> SimpleName .

    LPAREN          reduce using rule 27 (Name -> SimpleName .)
    DOT             reduce using rule 27 (Name -> SimpleName .)
    LBRACK          reduce using rule 27 (Name -> SimpleName .)
    IDENTIFIER      reduce using rule 27 (Name -> SimpleName .)
    ASSIGN          reduce using rule 27 (Name -> SimpleName .)
    ADD_ASSIGN      reduce using rule 27 (Name -> SimpleName .)
    SUB_ASSIGN      reduce using rule 27 (Name -> SimpleName .)
    MUL_ASSIGN      reduce using rule 27 (Name -> SimpleName .)
    DIV_ASSIGN      reduce using rule 27 (Name -> SimpleName .)
    AND_ASSIGN      reduce using rule 27 (Name -> SimpleName .)
    OR_ASSIGN       reduce using rule 27 (Name -> SimpleName .)
    XOR_ASSIGN      reduce using rule 27 (Name -> SimpleName .)
    MOD_ASSIGN      reduce using rule 27 (Name -> SimpleName .)
    LSHIFT_ASSIGN   reduce using rule 27 (Name -> SimpleName .)
    RSHIFT_ASSIGN   reduce using rule 27 (Name -> SimpleName .)
    URSHIFT_ASSIGN  reduce using rule 27 (Name -> SimpleName .)
    INC             reduce using rule 27 (Name -> SimpleName .)
    DEC             reduce using rule 27 (Name -> SimpleName .)
    MUL             reduce using rule 27 (Name -> SimpleName .)
    DIV             reduce using rule 27 (Name -> SimpleName .)
    MOD             reduce using rule 27 (Name -> SimpleName .)
    ADD             reduce using rule 27 (Name -> SimpleName .)
    SUB             reduce using rule 27 (Name -> SimpleName .)
    LSHIFT          reduce using rule 27 (Name -> SimpleName .)
    RSHIFT          reduce using rule 27 (Name -> SimpleName .)
    URSHIFT         reduce using rule 27 (Name -> SimpleName .)
    LT              reduce using rule 27 (Name -> SimpleName .)
    GT              reduce using rule 27 (Name -> SimpleName .)
    LE              reduce using rule 27 (Name -> SimpleName .)
    GE              reduce using rule 27 (Name -> SimpleName .)
    EQUAL           reduce using rule 27 (Name -> SimpleName .)
    NOTEQUAL        reduce using rule 27 (Name -> SimpleName .)
    BITAND          reduce using rule 27 (Name -> SimpleName .)
    CARET           reduce using rule 27 (Name -> SimpleName .)
    BITOR           reduce using rule 27 (Name -> SimpleName .)
    AND             reduce using rule 27 (Name -> SimpleName .)
    QUESTION        reduce using rule 27 (Name -> SimpleName .)
    OR              reduce using rule 27 (Name -> SimpleName .)
    RPAREN          reduce using rule 27 (Name -> SimpleName .)
    SEMI            reduce using rule 27 (Name -> SimpleName .)
    COMMA           reduce using rule 27 (Name -> SimpleName .)
    RBRACK          reduce using rule 27 (Name -> SimpleName .)
    RBRACE          reduce using rule 27 (Name -> SimpleName .)
    COLON           reduce using rule 27 (Name -> SimpleName .)


state 154

    (272) LeftHandSide -> FieldAccess .
    (192) PrimaryNoNewArray -> FieldAccess .

    ASSIGN          reduce using rule 272 (LeftHandSide -> FieldAccess .)
    ADD_ASSIGN      reduce using rule 272 (LeftHandSide -> FieldAccess .)
    SUB_ASSIGN      reduce using rule 272 (LeftHandSide -> FieldAccess .)
    MUL_ASSIGN      reduce using rule 272 (LeftHandSide -> FieldAccess .)
    DIV_ASSIGN      reduce using rule 272 (LeftHandSide -> FieldAccess .)
    AND_ASSIGN      reduce using rule 272 (LeftHandSide -> FieldAccess .)
    OR_ASSIGN       reduce using rule 272 (LeftHandSide -> FieldAccess .)
    XOR_ASSIGN      reduce using rule 272 (LeftHandSide -> FieldAccess .)
    MOD_ASSIGN      reduce using rule 272 (LeftHandSide -> FieldAccess .)
    LSHIFT_ASSIGN   reduce using rule 272 (LeftHandSide -> FieldAccess .)
    RSHIFT_ASSIGN   reduce using rule 272 (LeftHandSide -> FieldAccess .)
    URSHIFT_ASSIGN  reduce using rule 272 (LeftHandSide -> FieldAccess .)
    LBRACK          reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    DOT             reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    INC             reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    DEC             reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    MUL             reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    DIV             reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    MOD             reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    ADD             reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    SUB             reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    LSHIFT          reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    RSHIFT          reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    URSHIFT         reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    LT              reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    GT              reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    LE              reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    GE              reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    EQUAL           reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    NOTEQUAL        reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    BITAND          reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    CARET           reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    BITOR           reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    AND             reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    QUESTION        reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    OR              reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    RPAREN          reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    SEMI            reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    COMMA           reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    RBRACK          reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    RBRACE          reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    COLON           reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)


state 155

    (273) LeftHandSide -> ArrayAccess .
    (194) PrimaryNoNewArray -> ArrayAccess .

    ASSIGN          reduce using rule 273 (LeftHandSide -> ArrayAccess .)
    ADD_ASSIGN      reduce using rule 273 (LeftHandSide -> ArrayAccess .)
    SUB_ASSIGN      reduce using rule 273 (LeftHandSide -> ArrayAccess .)
    MUL_ASSIGN      reduce using rule 273 (LeftHandSide -> ArrayAccess .)
    DIV_ASSIGN      reduce using rule 273 (LeftHandSide -> ArrayAccess .)
    AND_ASSIGN      reduce using rule 273 (LeftHandSide -> ArrayAccess .)
    OR_ASSIGN       reduce using rule 273 (LeftHandSide -> ArrayAccess .)
    XOR_ASSIGN      reduce using rule 273 (LeftHandSide -> ArrayAccess .)
    MOD_ASSIGN      reduce using rule 273 (LeftHandSide -> ArrayAccess .)
    LSHIFT_ASSIGN   reduce using rule 273 (LeftHandSide -> ArrayAccess .)
    RSHIFT_ASSIGN   reduce using rule 273 (LeftHandSide -> ArrayAccess .)
    URSHIFT_ASSIGN  reduce using rule 273 (LeftHandSide -> ArrayAccess .)
    LBRACK          reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    DOT             reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    INC             reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    DEC             reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    MUL             reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    DIV             reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    MOD             reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    ADD             reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    SUB             reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    LSHIFT          reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    RSHIFT          reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    URSHIFT         reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    LT              reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    GT              reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    LE              reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    GE              reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    EQUAL           reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    NOTEQUAL        reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    BITAND          reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    CARET           reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    BITOR           reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    AND             reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    QUESTION        reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    OR              reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    RPAREN          reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    SEMI            reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    COMMA           reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    RBRACK          reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    RBRACE          reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    COLON           reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)


state 156

    (186) Primary -> PrimaryNoNewArray .
    (215) ArrayAccess -> PrimaryNoNewArray . LBRACK Expression RBRACK

    DOT             reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    INC             reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    DEC             reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    SEMI            reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    MUL             reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    DIV             reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    MOD             reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    ADD             reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    SUB             reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    LSHIFT          reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    RSHIFT          reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    URSHIFT         reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    LT              reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    GT              reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    LE              reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    GE              reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    EQUAL           reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    NOTEQUAL        reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    BITAND          reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    CARET           reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    BITOR           reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    AND             reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    QUESTION        reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    OR              reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    RPAREN          reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    COMMA           reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    RBRACK          reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    RBRACE          reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    COLON           reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    LBRACK          shift and go to state 261


state 157

    (187) Primary -> ArrayCreationExpression .

    DOT             reduce using rule 187 (Primary -> ArrayCreationExpression .)
    INC             reduce using rule 187 (Primary -> ArrayCreationExpression .)
    DEC             reduce using rule 187 (Primary -> ArrayCreationExpression .)
    MUL             reduce using rule 187 (Primary -> ArrayCreationExpression .)
    DIV             reduce using rule 187 (Primary -> ArrayCreationExpression .)
    MOD             reduce using rule 187 (Primary -> ArrayCreationExpression .)
    ADD             reduce using rule 187 (Primary -> ArrayCreationExpression .)
    SUB             reduce using rule 187 (Primary -> ArrayCreationExpression .)
    LSHIFT          reduce using rule 187 (Primary -> ArrayCreationExpression .)
    RSHIFT          reduce using rule 187 (Primary -> ArrayCreationExpression .)
    URSHIFT         reduce using rule 187 (Primary -> ArrayCreationExpression .)
    LT              reduce using rule 187 (Primary -> ArrayCreationExpression .)
    GT              reduce using rule 187 (Primary -> ArrayCreationExpression .)
    LE              reduce using rule 187 (Primary -> ArrayCreationExpression .)
    GE              reduce using rule 187 (Primary -> ArrayCreationExpression .)
    EQUAL           reduce using rule 187 (Primary -> ArrayCreationExpression .)
    NOTEQUAL        reduce using rule 187 (Primary -> ArrayCreationExpression .)
    BITAND          reduce using rule 187 (Primary -> ArrayCreationExpression .)
    CARET           reduce using rule 187 (Primary -> ArrayCreationExpression .)
    BITOR           reduce using rule 187 (Primary -> ArrayCreationExpression .)
    AND             reduce using rule 187 (Primary -> ArrayCreationExpression .)
    QUESTION        reduce using rule 187 (Primary -> ArrayCreationExpression .)
    OR              reduce using rule 187 (Primary -> ArrayCreationExpression .)
    RPAREN          reduce using rule 187 (Primary -> ArrayCreationExpression .)
    SEMI            reduce using rule 187 (Primary -> ArrayCreationExpression .)
    COMMA           reduce using rule 187 (Primary -> ArrayCreationExpression .)
    RBRACK          reduce using rule 187 (Primary -> ArrayCreationExpression .)
    RBRACE          reduce using rule 187 (Primary -> ArrayCreationExpression .)
    COLON           reduce using rule 187 (Primary -> ArrayCreationExpression .)


state 158

    (209) FieldAccess -> SUPER . DOT IDENTIFIER

    DOT             shift and go to state 262


state 159

    (188) PrimaryNoNewArray -> Literal .

    LBRACK          reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    DOT             reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    INC             reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    DEC             reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    MUL             reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    DIV             reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    MOD             reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    ADD             reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    SUB             reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    LSHIFT          reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    RSHIFT          reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    URSHIFT         reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    LT              reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    GT              reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    LE              reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    GE              reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    EQUAL           reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    NOTEQUAL        reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    BITAND          reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    CARET           reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    BITOR           reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    AND             reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    QUESTION        reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    OR              reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    RPAREN          reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    SEMI            reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    COMMA           reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    RBRACK          reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    RBRACE          reduce using rule 188 (PrimaryNoNewArray -> Literal .)
    COLON           reduce using rule 188 (PrimaryNoNewArray -> Literal .)


state 160

    (189) PrimaryNoNewArray -> THIS .

    LBRACK          reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    DOT             reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    INC             reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    DEC             reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    MUL             reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    DIV             reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    MOD             reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    ADD             reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    SUB             reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    LSHIFT          reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    RSHIFT          reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    URSHIFT         reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    LT              reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    GT              reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    LE              reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    GE              reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    EQUAL           reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    NOTEQUAL        reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    BITAND          reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    CARET           reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    BITOR           reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    AND             reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    QUESTION        reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    OR              reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    RPAREN          reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    SEMI            reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    COMMA           reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    RBRACK          reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    RBRACE          reduce using rule 189 (PrimaryNoNewArray -> THIS .)
    COLON           reduce using rule 189 (PrimaryNoNewArray -> THIS .)


state 161

    (2) Literal -> DECIMAL_LITERAL .

    LBRACK          reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    DOT             reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    INC             reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    DEC             reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    MUL             reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    DIV             reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    MOD             reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    ADD             reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    SUB             reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    LSHIFT          reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    RSHIFT          reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    URSHIFT         reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    LT              reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    GT              reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    LE              reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    GE              reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    EQUAL           reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    NOTEQUAL        reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    BITAND          reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    CARET           reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    BITOR           reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    AND             reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    QUESTION        reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    OR              reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    RPAREN          reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    SEMI            reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    COMMA           reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    RBRACK          reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    RBRACE          reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    COLON           reduce using rule 2 (Literal -> DECIMAL_LITERAL .)


state 162

    (3) Literal -> HEX_LITERAL .

    LBRACK          reduce using rule 3 (Literal -> HEX_LITERAL .)
    DOT             reduce using rule 3 (Literal -> HEX_LITERAL .)
    INC             reduce using rule 3 (Literal -> HEX_LITERAL .)
    DEC             reduce using rule 3 (Literal -> HEX_LITERAL .)
    MUL             reduce using rule 3 (Literal -> HEX_LITERAL .)
    DIV             reduce using rule 3 (Literal -> HEX_LITERAL .)
    MOD             reduce using rule 3 (Literal -> HEX_LITERAL .)
    ADD             reduce using rule 3 (Literal -> HEX_LITERAL .)
    SUB             reduce using rule 3 (Literal -> HEX_LITERAL .)
    LSHIFT          reduce using rule 3 (Literal -> HEX_LITERAL .)
    RSHIFT          reduce using rule 3 (Literal -> HEX_LITERAL .)
    URSHIFT         reduce using rule 3 (Literal -> HEX_LITERAL .)
    LT              reduce using rule 3 (Literal -> HEX_LITERAL .)
    GT              reduce using rule 3 (Literal -> HEX_LITERAL .)
    LE              reduce using rule 3 (Literal -> HEX_LITERAL .)
    GE              reduce using rule 3 (Literal -> HEX_LITERAL .)
    EQUAL           reduce using rule 3 (Literal -> HEX_LITERAL .)
    NOTEQUAL        reduce using rule 3 (Literal -> HEX_LITERAL .)
    BITAND          reduce using rule 3 (Literal -> HEX_LITERAL .)
    CARET           reduce using rule 3 (Literal -> HEX_LITERAL .)
    BITOR           reduce using rule 3 (Literal -> HEX_LITERAL .)
    AND             reduce using rule 3 (Literal -> HEX_LITERAL .)
    QUESTION        reduce using rule 3 (Literal -> HEX_LITERAL .)
    OR              reduce using rule 3 (Literal -> HEX_LITERAL .)
    RPAREN          reduce using rule 3 (Literal -> HEX_LITERAL .)
    SEMI            reduce using rule 3 (Literal -> HEX_LITERAL .)
    COMMA           reduce using rule 3 (Literal -> HEX_LITERAL .)
    RBRACK          reduce using rule 3 (Literal -> HEX_LITERAL .)
    RBRACE          reduce using rule 3 (Literal -> HEX_LITERAL .)
    COLON           reduce using rule 3 (Literal -> HEX_LITERAL .)


state 163

    (4) Literal -> BINARY_LITERAL .

    LBRACK          reduce using rule 4 (Literal -> BINARY_LITERAL .)
    DOT             reduce using rule 4 (Literal -> BINARY_LITERAL .)
    INC             reduce using rule 4 (Literal -> BINARY_LITERAL .)
    DEC             reduce using rule 4 (Literal -> BINARY_LITERAL .)
    MUL             reduce using rule 4 (Literal -> BINARY_LITERAL .)
    DIV             reduce using rule 4 (Literal -> BINARY_LITERAL .)
    MOD             reduce using rule 4 (Literal -> BINARY_LITERAL .)
    ADD             reduce using rule 4 (Literal -> BINARY_LITERAL .)
    SUB             reduce using rule 4 (Literal -> BINARY_LITERAL .)
    LSHIFT          reduce using rule 4 (Literal -> BINARY_LITERAL .)
    RSHIFT          reduce using rule 4 (Literal -> BINARY_LITERAL .)
    URSHIFT         reduce using rule 4 (Literal -> BINARY_LITERAL .)
    LT              reduce using rule 4 (Literal -> BINARY_LITERAL .)
    GT              reduce using rule 4 (Literal -> BINARY_LITERAL .)
    LE              reduce using rule 4 (Literal -> BINARY_LITERAL .)
    GE              reduce using rule 4 (Literal -> BINARY_LITERAL .)
    EQUAL           reduce using rule 4 (Literal -> BINARY_LITERAL .)
    NOTEQUAL        reduce using rule 4 (Literal -> BINARY_LITERAL .)
    BITAND          reduce using rule 4 (Literal -> BINARY_LITERAL .)
    CARET           reduce using rule 4 (Literal -> BINARY_LITERAL .)
    BITOR           reduce using rule 4 (Literal -> BINARY_LITERAL .)
    AND             reduce using rule 4 (Literal -> BINARY_LITERAL .)
    QUESTION        reduce using rule 4 (Literal -> BINARY_LITERAL .)
    OR              reduce using rule 4 (Literal -> BINARY_LITERAL .)
    RPAREN          reduce using rule 4 (Literal -> BINARY_LITERAL .)
    SEMI            reduce using rule 4 (Literal -> BINARY_LITERAL .)
    COMMA           reduce using rule 4 (Literal -> BINARY_LITERAL .)
    RBRACK          reduce using rule 4 (Literal -> BINARY_LITERAL .)
    RBRACE          reduce using rule 4 (Literal -> BINARY_LITERAL .)
    COLON           reduce using rule 4 (Literal -> BINARY_LITERAL .)


state 164

    (5) Literal -> FLOAT_LITERAL .

    LBRACK          reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    DOT             reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    INC             reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    DEC             reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    MUL             reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    DIV             reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    MOD             reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    ADD             reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    SUB             reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    LSHIFT          reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    RSHIFT          reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    URSHIFT         reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    LT              reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    GT              reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    LE              reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    GE              reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    EQUAL           reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    NOTEQUAL        reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    BITAND          reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    CARET           reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    BITOR           reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    AND             reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    QUESTION        reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    OR              reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    RPAREN          reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    SEMI            reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    COMMA           reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    RBRACK          reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    RBRACE          reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    COLON           reduce using rule 5 (Literal -> FLOAT_LITERAL .)


state 165

    (6) Literal -> BOOL_LITERAL .

    LBRACK          reduce using rule 6 (Literal -> BOOL_LITERAL .)
    DOT             reduce using rule 6 (Literal -> BOOL_LITERAL .)
    INC             reduce using rule 6 (Literal -> BOOL_LITERAL .)
    DEC             reduce using rule 6 (Literal -> BOOL_LITERAL .)
    MUL             reduce using rule 6 (Literal -> BOOL_LITERAL .)
    DIV             reduce using rule 6 (Literal -> BOOL_LITERAL .)
    MOD             reduce using rule 6 (Literal -> BOOL_LITERAL .)
    ADD             reduce using rule 6 (Literal -> BOOL_LITERAL .)
    SUB             reduce using rule 6 (Literal -> BOOL_LITERAL .)
    LSHIFT          reduce using rule 6 (Literal -> BOOL_LITERAL .)
    RSHIFT          reduce using rule 6 (Literal -> BOOL_LITERAL .)
    URSHIFT         reduce using rule 6 (Literal -> BOOL_LITERAL .)
    LT              reduce using rule 6 (Literal -> BOOL_LITERAL .)
    GT              reduce using rule 6 (Literal -> BOOL_LITERAL .)
    LE              reduce using rule 6 (Literal -> BOOL_LITERAL .)
    GE              reduce using rule 6 (Literal -> BOOL_LITERAL .)
    EQUAL           reduce using rule 6 (Literal -> BOOL_LITERAL .)
    NOTEQUAL        reduce using rule 6 (Literal -> BOOL_LITERAL .)
    BITAND          reduce using rule 6 (Literal -> BOOL_LITERAL .)
    CARET           reduce using rule 6 (Literal -> BOOL_LITERAL .)
    BITOR           reduce using rule 6 (Literal -> BOOL_LITERAL .)
    AND             reduce using rule 6 (Literal -> BOOL_LITERAL .)
    QUESTION        reduce using rule 6 (Literal -> BOOL_LITERAL .)
    OR              reduce using rule 6 (Literal -> BOOL_LITERAL .)
    RPAREN          reduce using rule 6 (Literal -> BOOL_LITERAL .)
    SEMI            reduce using rule 6 (Literal -> BOOL_LITERAL .)
    COMMA           reduce using rule 6 (Literal -> BOOL_LITERAL .)
    RBRACK          reduce using rule 6 (Literal -> BOOL_LITERAL .)
    RBRACE          reduce using rule 6 (Literal -> BOOL_LITERAL .)
    COLON           reduce using rule 6 (Literal -> BOOL_LITERAL .)


state 166

    (7) Literal -> CHAR_LITERAL .

    LBRACK          reduce using rule 7 (Literal -> CHAR_LITERAL .)
    DOT             reduce using rule 7 (Literal -> CHAR_LITERAL .)
    INC             reduce using rule 7 (Literal -> CHAR_LITERAL .)
    DEC             reduce using rule 7 (Literal -> CHAR_LITERAL .)
    MUL             reduce using rule 7 (Literal -> CHAR_LITERAL .)
    DIV             reduce using rule 7 (Literal -> CHAR_LITERAL .)
    MOD             reduce using rule 7 (Literal -> CHAR_LITERAL .)
    ADD             reduce using rule 7 (Literal -> CHAR_LITERAL .)
    SUB             reduce using rule 7 (Literal -> CHAR_LITERAL .)
    LSHIFT          reduce using rule 7 (Literal -> CHAR_LITERAL .)
    RSHIFT          reduce using rule 7 (Literal -> CHAR_LITERAL .)
    URSHIFT         reduce using rule 7 (Literal -> CHAR_LITERAL .)
    LT              reduce using rule 7 (Literal -> CHAR_LITERAL .)
    GT              reduce using rule 7 (Literal -> CHAR_LITERAL .)
    LE              reduce using rule 7 (Literal -> CHAR_LITERAL .)
    GE              reduce using rule 7 (Literal -> CHAR_LITERAL .)
    EQUAL           reduce using rule 7 (Literal -> CHAR_LITERAL .)
    NOTEQUAL        reduce using rule 7 (Literal -> CHAR_LITERAL .)
    BITAND          reduce using rule 7 (Literal -> CHAR_LITERAL .)
    CARET           reduce using rule 7 (Literal -> CHAR_LITERAL .)
    BITOR           reduce using rule 7 (Literal -> CHAR_LITERAL .)
    AND             reduce using rule 7 (Literal -> CHAR_LITERAL .)
    QUESTION        reduce using rule 7 (Literal -> CHAR_LITERAL .)
    OR              reduce using rule 7 (Literal -> CHAR_LITERAL .)
    RPAREN          reduce using rule 7 (Literal -> CHAR_LITERAL .)
    SEMI            reduce using rule 7 (Literal -> CHAR_LITERAL .)
    COMMA           reduce using rule 7 (Literal -> CHAR_LITERAL .)
    RBRACK          reduce using rule 7 (Literal -> CHAR_LITERAL .)
    RBRACE          reduce using rule 7 (Literal -> CHAR_LITERAL .)
    COLON           reduce using rule 7 (Literal -> CHAR_LITERAL .)


state 167

    (8) Literal -> STRING_LITERAL .

    LBRACK          reduce using rule 8 (Literal -> STRING_LITERAL .)
    DOT             reduce using rule 8 (Literal -> STRING_LITERAL .)
    INC             reduce using rule 8 (Literal -> STRING_LITERAL .)
    DEC             reduce using rule 8 (Literal -> STRING_LITERAL .)
    MUL             reduce using rule 8 (Literal -> STRING_LITERAL .)
    DIV             reduce using rule 8 (Literal -> STRING_LITERAL .)
    MOD             reduce using rule 8 (Literal -> STRING_LITERAL .)
    ADD             reduce using rule 8 (Literal -> STRING_LITERAL .)
    SUB             reduce using rule 8 (Literal -> STRING_LITERAL .)
    LSHIFT          reduce using rule 8 (Literal -> STRING_LITERAL .)
    RSHIFT          reduce using rule 8 (Literal -> STRING_LITERAL .)
    URSHIFT         reduce using rule 8 (Literal -> STRING_LITERAL .)
    LT              reduce using rule 8 (Literal -> STRING_LITERAL .)
    GT              reduce using rule 8 (Literal -> STRING_LITERAL .)
    LE              reduce using rule 8 (Literal -> STRING_LITERAL .)
    GE              reduce using rule 8 (Literal -> STRING_LITERAL .)
    EQUAL           reduce using rule 8 (Literal -> STRING_LITERAL .)
    NOTEQUAL        reduce using rule 8 (Literal -> STRING_LITERAL .)
    BITAND          reduce using rule 8 (Literal -> STRING_LITERAL .)
    CARET           reduce using rule 8 (Literal -> STRING_LITERAL .)
    BITOR           reduce using rule 8 (Literal -> STRING_LITERAL .)
    AND             reduce using rule 8 (Literal -> STRING_LITERAL .)
    QUESTION        reduce using rule 8 (Literal -> STRING_LITERAL .)
    OR              reduce using rule 8 (Literal -> STRING_LITERAL .)
    RPAREN          reduce using rule 8 (Literal -> STRING_LITERAL .)
    SEMI            reduce using rule 8 (Literal -> STRING_LITERAL .)
    COMMA           reduce using rule 8 (Literal -> STRING_LITERAL .)
    RBRACK          reduce using rule 8 (Literal -> STRING_LITERAL .)
    RBRACE          reduce using rule 8 (Literal -> STRING_LITERAL .)
    COLON           reduce using rule 8 (Literal -> STRING_LITERAL .)


state 168

    (89) StaticInitializer -> begin_scope STATIC Block . end_scope
    (291) end_scope -> .

    RBRACE          reduce using rule 291 (end_scope -> .)
    VOID            reduce using rule 291 (end_scope -> .)
    STATIC          reduce using rule 291 (end_scope -> .)
    FINAL           reduce using rule 291 (end_scope -> .)
    PRIVATE         reduce using rule 291 (end_scope -> .)
    PROTECTED       reduce using rule 291 (end_scope -> .)
    PUBLIC          reduce using rule 291 (end_scope -> .)
    IDENTIFIER      reduce using rule 291 (end_scope -> .)
    BOOLEAN         reduce using rule 291 (end_scope -> .)
    BYTE            reduce using rule 291 (end_scope -> .)
    SHORT           reduce using rule 291 (end_scope -> .)
    INT             reduce using rule 291 (end_scope -> .)
    LONG            reduce using rule 291 (end_scope -> .)
    CHAR            reduce using rule 291 (end_scope -> .)
    FLOAT           reduce using rule 291 (end_scope -> .)
    DOUBLE          reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 263

state 169

    (68) FieldDeclaration -> Type VariableDeclarators SEMI .

    RBRACE          reduce using rule 68 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    VOID            reduce using rule 68 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    STATIC          reduce using rule 68 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    FINAL           reduce using rule 68 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    PRIVATE         reduce using rule 68 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    PROTECTED       reduce using rule 68 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    PUBLIC          reduce using rule 68 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    IDENTIFIER      reduce using rule 68 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    BOOLEAN         reduce using rule 68 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    BYTE            reduce using rule 68 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    SHORT           reduce using rule 68 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    INT             reduce using rule 68 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    LONG            reduce using rule 68 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    CHAR            reduce using rule 68 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    FLOAT           reduce using rule 68 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    DOUBLE          reduce using rule 68 (FieldDeclaration -> Type VariableDeclarators SEMI .)


state 170

    (70) VariableDeclarators -> VariableDeclarators COMMA . VariableDeclarator
    (71) VariableDeclarator -> . VariableDeclaratorId
    (72) VariableDeclarator -> . VariableDeclaratorId ASSIGN VariableInitializer
    (73) VariableDeclaratorId -> . IDENTIFIER
    (74) VariableDeclaratorId -> . IDENTIFIER Dims

    IDENTIFIER      shift and go to state 186

    VariableDeclarator             shift and go to state 264
    VariableDeclaratorId           shift and go to state 89

state 171

    (82) MethodDeclarator -> IDENTIFIER LPAREN . decl_mark RPAREN
    (83) MethodDeclarator -> IDENTIFIER LPAREN . decl_mark FormalParameterList RPAREN
    (288) decl_mark -> .

    RPAREN          reduce using rule 288 (decl_mark -> .)
    BOOLEAN         reduce using rule 288 (decl_mark -> .)
    BYTE            reduce using rule 288 (decl_mark -> .)
    SHORT           reduce using rule 288 (decl_mark -> .)
    INT             reduce using rule 288 (decl_mark -> .)
    LONG            reduce using rule 288 (decl_mark -> .)
    CHAR            reduce using rule 288 (decl_mark -> .)
    FLOAT           reduce using rule 288 (decl_mark -> .)
    DOUBLE          reduce using rule 288 (decl_mark -> .)
    IDENTIFIER      reduce using rule 288 (decl_mark -> .)

    decl_mark                      shift and go to state 265

state 172

    (74) VariableDeclaratorId -> IDENTIFIER Dims .
    (207) Dims -> Dims . LBRACK RBRACK

    ASSIGN          reduce using rule 74 (VariableDeclaratorId -> IDENTIFIER Dims .)
    SEMI            reduce using rule 74 (VariableDeclaratorId -> IDENTIFIER Dims .)
    COMMA           reduce using rule 74 (VariableDeclaratorId -> IDENTIFIER Dims .)
    RPAREN          reduce using rule 74 (VariableDeclaratorId -> IDENTIFIER Dims .)
    LBRACK          shift and go to state 178


state 173

    (72) VariableDeclarator -> VariableDeclaratorId ASSIGN . VariableInitializer
    (75) VariableInitializer -> . Expression
    (76) VariableInitializer -> . ArrayInitializer
    (286) Expression -> . AssignmentExpression
    (99) ArrayInitializer -> . LBRACE VariableInitializers RBRACE
    (100) ArrayInitializer -> . LBRACE RBRACE
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    LBRACE          shift and go to state 269
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    VariableInitializer            shift and go to state 266
    Expression                     shift and go to state 267
    ArrayInitializer               shift and go to state 268
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 174

    (103) Block -> LBRACE RBRACE .

    RBRACE          reduce using rule 103 (Block -> LBRACE RBRACE .)
    VOID            reduce using rule 103 (Block -> LBRACE RBRACE .)
    STATIC          reduce using rule 103 (Block -> LBRACE RBRACE .)
    FINAL           reduce using rule 103 (Block -> LBRACE RBRACE .)
    PRIVATE         reduce using rule 103 (Block -> LBRACE RBRACE .)
    PROTECTED       reduce using rule 103 (Block -> LBRACE RBRACE .)
    PUBLIC          reduce using rule 103 (Block -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 103 (Block -> LBRACE RBRACE .)
    BOOLEAN         reduce using rule 103 (Block -> LBRACE RBRACE .)
    BYTE            reduce using rule 103 (Block -> LBRACE RBRACE .)
    SHORT           reduce using rule 103 (Block -> LBRACE RBRACE .)
    INT             reduce using rule 103 (Block -> LBRACE RBRACE .)
    LONG            reduce using rule 103 (Block -> LBRACE RBRACE .)
    CHAR            reduce using rule 103 (Block -> LBRACE RBRACE .)
    FLOAT           reduce using rule 103 (Block -> LBRACE RBRACE .)
    DOUBLE          reduce using rule 103 (Block -> LBRACE RBRACE .)
    IF              reduce using rule 103 (Block -> LBRACE RBRACE .)
    WHILE           reduce using rule 103 (Block -> LBRACE RBRACE .)
    FOR             reduce using rule 103 (Block -> LBRACE RBRACE .)
    LBRACE          reduce using rule 103 (Block -> LBRACE RBRACE .)
    SEMI            reduce using rule 103 (Block -> LBRACE RBRACE .)
    SWITCH          reduce using rule 103 (Block -> LBRACE RBRACE .)
    DO              reduce using rule 103 (Block -> LBRACE RBRACE .)
    BREAK           reduce using rule 103 (Block -> LBRACE RBRACE .)
    CONTINUE        reduce using rule 103 (Block -> LBRACE RBRACE .)
    RETURN          reduce using rule 103 (Block -> LBRACE RBRACE .)
    INC             reduce using rule 103 (Block -> LBRACE RBRACE .)
    DEC             reduce using rule 103 (Block -> LBRACE RBRACE .)
    NEW             reduce using rule 103 (Block -> LBRACE RBRACE .)
    SUPER           reduce using rule 103 (Block -> LBRACE RBRACE .)
    THIS            reduce using rule 103 (Block -> LBRACE RBRACE .)
    LPAREN          reduce using rule 103 (Block -> LBRACE RBRACE .)
    DECIMAL_LITERAL reduce using rule 103 (Block -> LBRACE RBRACE .)
    HEX_LITERAL     reduce using rule 103 (Block -> LBRACE RBRACE .)
    BINARY_LITERAL  reduce using rule 103 (Block -> LBRACE RBRACE .)
    FLOAT_LITERAL   reduce using rule 103 (Block -> LBRACE RBRACE .)
    BOOL_LITERAL    reduce using rule 103 (Block -> LBRACE RBRACE .)
    CHAR_LITERAL    reduce using rule 103 (Block -> LBRACE RBRACE .)
    STRING_LITERAL  reduce using rule 103 (Block -> LBRACE RBRACE .)
    CASE            reduce using rule 103 (Block -> LBRACE RBRACE .)
    DEFAULT         reduce using rule 103 (Block -> LBRACE RBRACE .)
    ELSE            reduce using rule 103 (Block -> LBRACE RBRACE .)


state 175

    (104) Block -> LBRACE BlockStatements . RBRACE
    (106) BlockStatements -> BlockStatements . BlockStatement
    (107) BlockStatement -> . LocalVariableDeclarationStatement
    (108) BlockStatement -> . Statement
    (109) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMI
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (110) LocalVariableDeclaration -> . Type VariableDeclarators
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RBRACE          shift and go to state 270
    IDENTIFIER      shift and go to state 128
    IF              shift and go to state 129
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    BOOLEAN         shift and go to state 63
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    BYTE            shift and go to state 69
    SHORT           shift and go to state 70
    INT             shift and go to state 71
    LONG            shift and go to state 72
    CHAR            shift and go to state 73
    FLOAT           shift and go to state 74
    DOUBLE          shift and go to state 75
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    BlockStatement                 shift and go to state 183
    LocalVariableDeclarationStatement shift and go to state 109
    Statement                      shift and go to state 110
    LocalVariableDeclaration       shift and go to state 111
    StatementWithoutTrailingSubstatement shift and go to state 113
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    Type                           shift and go to state 119
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    PrimitiveType                  shift and go to state 58
    ReferenceType                  shift and go to state 59
    StatementExpression            shift and go to state 133
    NumericType                    shift and go to state 62
    ArrayType                      shift and go to state 64
    ClassType                      shift and go to state 65
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    IntegralType                   shift and go to state 66
    FloatingPointType              shift and go to state 67
    Name                           shift and go to state 146
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Primary                        shift and go to state 151
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 176

    (92) ConstructorDeclarator -> SimpleName LPAREN decl_mark . FormalParameterList RPAREN
    (84) FormalParameterList -> . FormalParameter
    (85) FormalParameterList -> . FormalParameterList COMMA FormalParameter
    (86) FormalParameter -> . Type VariableDeclaratorId
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER

    BOOLEAN         shift and go to state 63
    BYTE            shift and go to state 69
    SHORT           shift and go to state 70
    INT             shift and go to state 71
    LONG            shift and go to state 72
    CHAR            shift and go to state 73
    FLOAT           shift and go to state 74
    DOUBLE          shift and go to state 75
    IDENTIFIER      shift and go to state 61

    SimpleName                     shift and go to state 153
    FormalParameterList            shift and go to state 271
    FormalParameter                shift and go to state 272
    Type                           shift and go to state 273
    PrimitiveType                  shift and go to state 58
    ReferenceType                  shift and go to state 59
    NumericType                    shift and go to state 62
    ArrayType                      shift and go to state 64
    ClassType                      shift and go to state 65
    IntegralType                   shift and go to state 66
    FloatingPointType              shift and go to state 67
    Name                           shift and go to state 68
    QualifiedName                  shift and go to state 76

state 177

    (93) ConstructorDeclarator -> SimpleName decl_mark LPAREN . RPAREN

    RPAREN          shift and go to state 274


state 178

    (207) Dims -> Dims LBRACK . RBRACK

    RBRACK          shift and go to state 275


state 179

    (206) Dims -> LBRACK RBRACK .

    LBRACK          reduce using rule 206 (Dims -> LBRACK RBRACK .)
    IDENTIFIER      reduce using rule 206 (Dims -> LBRACK RBRACK .)
    ASSIGN          reduce using rule 206 (Dims -> LBRACK RBRACK .)
    SEMI            reduce using rule 206 (Dims -> LBRACK RBRACK .)
    COMMA           reduce using rule 206 (Dims -> LBRACK RBRACK .)
    RPAREN          reduce using rule 206 (Dims -> LBRACK RBRACK .)
    DOT             reduce using rule 206 (Dims -> LBRACK RBRACK .)
    INC             reduce using rule 206 (Dims -> LBRACK RBRACK .)
    DEC             reduce using rule 206 (Dims -> LBRACK RBRACK .)
    MUL             reduce using rule 206 (Dims -> LBRACK RBRACK .)
    DIV             reduce using rule 206 (Dims -> LBRACK RBRACK .)
    MOD             reduce using rule 206 (Dims -> LBRACK RBRACK .)
    ADD             reduce using rule 206 (Dims -> LBRACK RBRACK .)
    SUB             reduce using rule 206 (Dims -> LBRACK RBRACK .)
    LSHIFT          reduce using rule 206 (Dims -> LBRACK RBRACK .)
    RSHIFT          reduce using rule 206 (Dims -> LBRACK RBRACK .)
    URSHIFT         reduce using rule 206 (Dims -> LBRACK RBRACK .)
    LT              reduce using rule 206 (Dims -> LBRACK RBRACK .)
    GT              reduce using rule 206 (Dims -> LBRACK RBRACK .)
    LE              reduce using rule 206 (Dims -> LBRACK RBRACK .)
    GE              reduce using rule 206 (Dims -> LBRACK RBRACK .)
    EQUAL           reduce using rule 206 (Dims -> LBRACK RBRACK .)
    NOTEQUAL        reduce using rule 206 (Dims -> LBRACK RBRACK .)
    BITAND          reduce using rule 206 (Dims -> LBRACK RBRACK .)
    CARET           reduce using rule 206 (Dims -> LBRACK RBRACK .)
    BITOR           reduce using rule 206 (Dims -> LBRACK RBRACK .)
    AND             reduce using rule 206 (Dims -> LBRACK RBRACK .)
    QUESTION        reduce using rule 206 (Dims -> LBRACK RBRACK .)
    OR              reduce using rule 206 (Dims -> LBRACK RBRACK .)
    RBRACK          reduce using rule 206 (Dims -> LBRACK RBRACK .)
    RBRACE          reduce using rule 206 (Dims -> LBRACK RBRACK .)
    COLON           reduce using rule 206 (Dims -> LBRACK RBRACK .)


state 180

    (30) QualifiedName -> Name DOT IDENTIFIER .

    DOT             reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    LBRACK          reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    IDENTIFIER      reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    LPAREN          reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    ASSIGN          reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    ADD_ASSIGN      reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    SUB_ASSIGN      reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    MUL_ASSIGN      reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    AND_ASSIGN      reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    OR_ASSIGN       reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    URSHIFT_ASSIGN  reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    INC             reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    DEC             reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    MUL             reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    DIV             reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    MOD             reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    ADD             reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    SUB             reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    LSHIFT          reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    RSHIFT          reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    URSHIFT         reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    LT              reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    GT              reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    LE              reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    GE              reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    EQUAL           reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    NOTEQUAL        reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    BITAND          reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    CARET           reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    BITOR           reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    AND             reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    QUESTION        reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    OR              reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    RPAREN          reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    SEMI            reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    COMMA           reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    RBRACK          reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    RBRACE          reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    COLON           reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)


state 181

    (67) FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .

    RBRACE          reduce using rule 67 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    VOID            reduce using rule 67 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    STATIC          reduce using rule 67 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    FINAL           reduce using rule 67 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    PRIVATE         reduce using rule 67 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    PROTECTED       reduce using rule 67 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    PUBLIC          reduce using rule 67 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    IDENTIFIER      reduce using rule 67 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    BOOLEAN         reduce using rule 67 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    BYTE            reduce using rule 67 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    SHORT           reduce using rule 67 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    INT             reduce using rule 67 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    LONG            reduce using rule 67 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    CHAR            reduce using rule 67 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    FLOAT           reduce using rule 67 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    DOUBLE          reduce using rule 67 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)


state 182

    (95) ConstructorBody -> LBRACE BlockStatements RBRACE .

    RBRACE          reduce using rule 95 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    VOID            reduce using rule 95 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    STATIC          reduce using rule 95 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    FINAL           reduce using rule 95 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    PRIVATE         reduce using rule 95 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    PROTECTED       reduce using rule 95 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    PUBLIC          reduce using rule 95 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    IDENTIFIER      reduce using rule 95 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    BOOLEAN         reduce using rule 95 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    BYTE            reduce using rule 95 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    SHORT           reduce using rule 95 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    INT             reduce using rule 95 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    LONG            reduce using rule 95 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    CHAR            reduce using rule 95 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    FLOAT           reduce using rule 95 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    DOUBLE          reduce using rule 95 (ConstructorBody -> LBRACE BlockStatements RBRACE .)


state 183

    (106) BlockStatements -> BlockStatements BlockStatement .

    RBRACE          reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    IDENTIFIER      reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    IF              reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    WHILE           reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    FOR             reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    LBRACE          reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    SEMI            reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    SWITCH          reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    DO              reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    BREAK           reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    CONTINUE        reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    RETURN          reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    BOOLEAN         reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    INC             reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    DEC             reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    NEW             reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    BYTE            reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    SHORT           reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    INT             reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    LONG            reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    CHAR            reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    FLOAT           reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    DOUBLE          reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    SUPER           reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    THIS            reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    LPAREN          reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    DECIMAL_LITERAL reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    HEX_LITERAL     reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    BINARY_LITERAL  reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    FLOAT_LITERAL   reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    BOOL_LITERAL    reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    CHAR_LITERAL    reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    STRING_LITERAL  reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    CASE            reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)
    DEFAULT         reduce using rule 106 (BlockStatements -> BlockStatements BlockStatement .)


state 184

    (109) LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .

    RBRACE          reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    IDENTIFIER      reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    IF              reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    WHILE           reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    FOR             reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    LBRACE          reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    SEMI            reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    SWITCH          reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    DO              reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    BREAK           reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    CONTINUE        reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    RETURN          reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    BOOLEAN         reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    INC             reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    DEC             reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    NEW             reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    BYTE            reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    SHORT           reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    INT             reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    LONG            reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    CHAR            reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    FLOAT           reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    DOUBLE          reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    SUPER           reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    THIS            reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    LPAREN          reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    DECIMAL_LITERAL reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    HEX_LITERAL     reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    BINARY_LITERAL  reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    FLOAT_LITERAL   reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    BOOL_LITERAL    reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    CHAR_LITERAL    reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    STRING_LITERAL  reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    CASE            reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    DEFAULT         reduce using rule 109 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)


state 185

    (110) LocalVariableDeclaration -> Type VariableDeclarators .
    (70) VariableDeclarators -> VariableDeclarators . COMMA VariableDeclarator

    SEMI            reduce using rule 110 (LocalVariableDeclaration -> Type VariableDeclarators .)
    COMMA           shift and go to state 170


state 186

    (73) VariableDeclaratorId -> IDENTIFIER .
    (74) VariableDeclaratorId -> IDENTIFIER . Dims
    (206) Dims -> . LBRACK RBRACK
    (207) Dims -> . Dims LBRACK RBRACK

    ASSIGN          reduce using rule 73 (VariableDeclaratorId -> IDENTIFIER .)
    COMMA           reduce using rule 73 (VariableDeclaratorId -> IDENTIFIER .)
    SEMI            reduce using rule 73 (VariableDeclaratorId -> IDENTIFIER .)
    RPAREN          reduce using rule 73 (VariableDeclaratorId -> IDENTIFIER .)
    LBRACK          shift and go to state 97

    Dims                           shift and go to state 172

state 187

    (131) LabeledStatement -> IDENTIFIER COLON . Statement
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 128
    IF              shift and go to state 129
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 276
    StatementWithoutTrailingSubstatement shift and go to state 113
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 188

    (141) IfThenStatement -> IF begin_scope . LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> IF begin_scope . LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope

    LPAREN          shift and go to state 278


state 189

    (190) PrimaryNoNewArray -> LPAREN . Expression RPAREN
    (233) CastExpression -> LPAREN . PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> LPAREN . PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> LPAREN . Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> LPAREN . Name Dims RPAREN UnaryExpressionNotAddSub
    (286) Expression -> . AssignmentExpression
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    BOOLEAN         shift and go to state 63
    IDENTIFIER      shift and go to state 61
    BYTE            shift and go to state 69
    SHORT           shift and go to state 70
    INT             shift and go to state 71
    LONG            shift and go to state 72
    CHAR            shift and go to state 73
    FLOAT           shift and go to state 74
    DOUBLE          shift and go to state 75
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    Expression                     shift and go to state 279
    PrimitiveType                  shift and go to state 280
    UnaryExpression                shift and go to state 212
    UnaryExpressionNotAddSub       shift and go to state 215
    Name                           shift and go to state 281
    AssignmentExpression           shift and go to state 191
    NumericType                    shift and go to state 62
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    IntegralType                   shift and go to state 66
    FloatingPointType              shift and go to state 67
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 190

    (190) PrimaryNoNewArray -> LPAREN Expression . RPAREN

    RPAREN          shift and go to state 282


state 191

    (286) Expression -> AssignmentExpression .

    RPAREN          reduce using rule 286 (Expression -> AssignmentExpression .)
    SEMI            reduce using rule 286 (Expression -> AssignmentExpression .)
    COMMA           reduce using rule 286 (Expression -> AssignmentExpression .)
    RBRACK          reduce using rule 286 (Expression -> AssignmentExpression .)
    RBRACE          reduce using rule 286 (Expression -> AssignmentExpression .)
    COLON           reduce using rule 286 (Expression -> AssignmentExpression .)


state 192

    (268) AssignmentExpression -> ConditionalExpression .

    RPAREN          reduce using rule 268 (AssignmentExpression -> ConditionalExpression .)
    SEMI            reduce using rule 268 (AssignmentExpression -> ConditionalExpression .)
    COMMA           reduce using rule 268 (AssignmentExpression -> ConditionalExpression .)
    RBRACK          reduce using rule 268 (AssignmentExpression -> ConditionalExpression .)
    RBRACE          reduce using rule 268 (AssignmentExpression -> ConditionalExpression .)
    COLON           reduce using rule 268 (AssignmentExpression -> ConditionalExpression .)


state 193

    (269) AssignmentExpression -> Assignment .

    RPAREN          reduce using rule 269 (AssignmentExpression -> Assignment .)
    SEMI            reduce using rule 269 (AssignmentExpression -> Assignment .)
    COMMA           reduce using rule 269 (AssignmentExpression -> Assignment .)
    RBRACK          reduce using rule 269 (AssignmentExpression -> Assignment .)
    RBRACE          reduce using rule 269 (AssignmentExpression -> Assignment .)
    COLON           reduce using rule 269 (AssignmentExpression -> Assignment .)


state 194

    (266) ConditionalExpression -> ConditionalOrExpression .
    (267) ConditionalExpression -> ConditionalOrExpression . QUESTION Expression COLON ConditionalExpression
    (265) ConditionalOrExpression -> ConditionalOrExpression . OR ConditionalAndExpression

    RPAREN          reduce using rule 266 (ConditionalExpression -> ConditionalOrExpression .)
    SEMI            reduce using rule 266 (ConditionalExpression -> ConditionalOrExpression .)
    COMMA           reduce using rule 266 (ConditionalExpression -> ConditionalOrExpression .)
    RBRACK          reduce using rule 266 (ConditionalExpression -> ConditionalOrExpression .)
    RBRACE          reduce using rule 266 (ConditionalExpression -> ConditionalOrExpression .)
    COLON           reduce using rule 266 (ConditionalExpression -> ConditionalOrExpression .)
    QUESTION        shift and go to state 283
    OR              shift and go to state 284


state 195

    (264) ConditionalOrExpression -> ConditionalAndExpression .
    (263) ConditionalAndExpression -> ConditionalAndExpression . AND InclusiveOrExpression

    QUESTION        reduce using rule 264 (ConditionalOrExpression -> ConditionalAndExpression .)
    OR              reduce using rule 264 (ConditionalOrExpression -> ConditionalAndExpression .)
    RPAREN          reduce using rule 264 (ConditionalOrExpression -> ConditionalAndExpression .)
    SEMI            reduce using rule 264 (ConditionalOrExpression -> ConditionalAndExpression .)
    COMMA           reduce using rule 264 (ConditionalOrExpression -> ConditionalAndExpression .)
    RBRACK          reduce using rule 264 (ConditionalOrExpression -> ConditionalAndExpression .)
    RBRACE          reduce using rule 264 (ConditionalOrExpression -> ConditionalAndExpression .)
    COLON           reduce using rule 264 (ConditionalOrExpression -> ConditionalAndExpression .)
    AND             shift and go to state 285


state 196

    (271) LeftHandSide -> Name .
    (214) ArrayAccess -> Name . LBRACK Expression RBRACK
    (30) QualifiedName -> Name . DOT IDENTIFIER
    (210) MethodInvocation -> Name . LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> Name . LPAREN RPAREN
    (217) PostfixExpression -> Name .

    ASSIGN          reduce using rule 271 (LeftHandSide -> Name .)
    ADD_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    SUB_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    MUL_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    DIV_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    AND_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    OR_ASSIGN       reduce using rule 271 (LeftHandSide -> Name .)
    XOR_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    MOD_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    LSHIFT_ASSIGN   reduce using rule 271 (LeftHandSide -> Name .)
    RSHIFT_ASSIGN   reduce using rule 271 (LeftHandSide -> Name .)
    URSHIFT_ASSIGN  reduce using rule 271 (LeftHandSide -> Name .)
    LBRACK          shift and go to state 286
    DOT             shift and go to state 101
    LPAREN          shift and go to state 233
    INC             reduce using rule 217 (PostfixExpression -> Name .)
    DEC             reduce using rule 217 (PostfixExpression -> Name .)
    MUL             reduce using rule 217 (PostfixExpression -> Name .)
    DIV             reduce using rule 217 (PostfixExpression -> Name .)
    MOD             reduce using rule 217 (PostfixExpression -> Name .)
    ADD             reduce using rule 217 (PostfixExpression -> Name .)
    SUB             reduce using rule 217 (PostfixExpression -> Name .)
    LSHIFT          reduce using rule 217 (PostfixExpression -> Name .)
    RSHIFT          reduce using rule 217 (PostfixExpression -> Name .)
    URSHIFT         reduce using rule 217 (PostfixExpression -> Name .)
    LT              reduce using rule 217 (PostfixExpression -> Name .)
    GT              reduce using rule 217 (PostfixExpression -> Name .)
    LE              reduce using rule 217 (PostfixExpression -> Name .)
    GE              reduce using rule 217 (PostfixExpression -> Name .)
    EQUAL           reduce using rule 217 (PostfixExpression -> Name .)
    NOTEQUAL        reduce using rule 217 (PostfixExpression -> Name .)
    BITAND          reduce using rule 217 (PostfixExpression -> Name .)
    CARET           reduce using rule 217 (PostfixExpression -> Name .)
    BITOR           reduce using rule 217 (PostfixExpression -> Name .)
    AND             reduce using rule 217 (PostfixExpression -> Name .)
    QUESTION        reduce using rule 217 (PostfixExpression -> Name .)
    OR              reduce using rule 217 (PostfixExpression -> Name .)
    RPAREN          reduce using rule 217 (PostfixExpression -> Name .)
    SEMI            reduce using rule 217 (PostfixExpression -> Name .)
    COMMA           reduce using rule 217 (PostfixExpression -> Name .)
    RBRACK          reduce using rule 217 (PostfixExpression -> Name .)
    RBRACE          reduce using rule 217 (PostfixExpression -> Name .)
    COLON           reduce using rule 217 (PostfixExpression -> Name .)


state 197

    (262) ConditionalAndExpression -> InclusiveOrExpression .
    (261) InclusiveOrExpression -> InclusiveOrExpression . BITOR ExclusiveOrExpression

    AND             reduce using rule 262 (ConditionalAndExpression -> InclusiveOrExpression .)
    QUESTION        reduce using rule 262 (ConditionalAndExpression -> InclusiveOrExpression .)
    OR              reduce using rule 262 (ConditionalAndExpression -> InclusiveOrExpression .)
    RPAREN          reduce using rule 262 (ConditionalAndExpression -> InclusiveOrExpression .)
    SEMI            reduce using rule 262 (ConditionalAndExpression -> InclusiveOrExpression .)
    COMMA           reduce using rule 262 (ConditionalAndExpression -> InclusiveOrExpression .)
    RBRACK          reduce using rule 262 (ConditionalAndExpression -> InclusiveOrExpression .)
    RBRACE          reduce using rule 262 (ConditionalAndExpression -> InclusiveOrExpression .)
    COLON           reduce using rule 262 (ConditionalAndExpression -> InclusiveOrExpression .)
    BITOR           shift and go to state 287


state 198

    (208) FieldAccess -> Primary . DOT IDENTIFIER
    (212) MethodInvocation -> Primary . DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> Primary . DOT IDENTIFIER LPAREN RPAREN
    (216) PostfixExpression -> Primary .

    DOT             shift and go to state 288
    INC             reduce using rule 216 (PostfixExpression -> Primary .)
    DEC             reduce using rule 216 (PostfixExpression -> Primary .)
    MUL             reduce using rule 216 (PostfixExpression -> Primary .)
    DIV             reduce using rule 216 (PostfixExpression -> Primary .)
    MOD             reduce using rule 216 (PostfixExpression -> Primary .)
    ADD             reduce using rule 216 (PostfixExpression -> Primary .)
    SUB             reduce using rule 216 (PostfixExpression -> Primary .)
    LSHIFT          reduce using rule 216 (PostfixExpression -> Primary .)
    RSHIFT          reduce using rule 216 (PostfixExpression -> Primary .)
    URSHIFT         reduce using rule 216 (PostfixExpression -> Primary .)
    LT              reduce using rule 216 (PostfixExpression -> Primary .)
    GT              reduce using rule 216 (PostfixExpression -> Primary .)
    LE              reduce using rule 216 (PostfixExpression -> Primary .)
    GE              reduce using rule 216 (PostfixExpression -> Primary .)
    EQUAL           reduce using rule 216 (PostfixExpression -> Primary .)
    NOTEQUAL        reduce using rule 216 (PostfixExpression -> Primary .)
    BITAND          reduce using rule 216 (PostfixExpression -> Primary .)
    CARET           reduce using rule 216 (PostfixExpression -> Primary .)
    BITOR           reduce using rule 216 (PostfixExpression -> Primary .)
    AND             reduce using rule 216 (PostfixExpression -> Primary .)
    QUESTION        reduce using rule 216 (PostfixExpression -> Primary .)
    OR              reduce using rule 216 (PostfixExpression -> Primary .)
    RPAREN          reduce using rule 216 (PostfixExpression -> Primary .)
    SEMI            reduce using rule 216 (PostfixExpression -> Primary .)
    COMMA           reduce using rule 216 (PostfixExpression -> Primary .)
    RBRACK          reduce using rule 216 (PostfixExpression -> Primary .)
    RBRACE          reduce using rule 216 (PostfixExpression -> Primary .)
    COLON           reduce using rule 216 (PostfixExpression -> Primary .)


state 199

    (215) ArrayAccess -> PrimaryNoNewArray . LBRACK Expression RBRACK
    (186) Primary -> PrimaryNoNewArray .

    LBRACK          shift and go to state 261
    DOT             reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    INC             reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    DEC             reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    MUL             reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    DIV             reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    MOD             reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    ADD             reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    SUB             reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    LSHIFT          reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    RSHIFT          reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    URSHIFT         reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    LT              reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    GT              reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    LE              reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    GE              reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    EQUAL           reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    NOTEQUAL        reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    BITAND          reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    CARET           reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    BITOR           reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    AND             reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    QUESTION        reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    OR              reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    RPAREN          reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    SEMI            reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    COMMA           reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    RBRACK          reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    RBRACE          reduce using rule 186 (Primary -> PrimaryNoNewArray .)
    COLON           reduce using rule 186 (Primary -> PrimaryNoNewArray .)


state 200

    (260) InclusiveOrExpression -> ExclusiveOrExpression .
    (259) ExclusiveOrExpression -> ExclusiveOrExpression . CARET AndExpression

    BITOR           reduce using rule 260 (InclusiveOrExpression -> ExclusiveOrExpression .)
    AND             reduce using rule 260 (InclusiveOrExpression -> ExclusiveOrExpression .)
    QUESTION        reduce using rule 260 (InclusiveOrExpression -> ExclusiveOrExpression .)
    OR              reduce using rule 260 (InclusiveOrExpression -> ExclusiveOrExpression .)
    RPAREN          reduce using rule 260 (InclusiveOrExpression -> ExclusiveOrExpression .)
    SEMI            reduce using rule 260 (InclusiveOrExpression -> ExclusiveOrExpression .)
    COMMA           reduce using rule 260 (InclusiveOrExpression -> ExclusiveOrExpression .)
    RBRACK          reduce using rule 260 (InclusiveOrExpression -> ExclusiveOrExpression .)
    RBRACE          reduce using rule 260 (InclusiveOrExpression -> ExclusiveOrExpression .)
    COLON           reduce using rule 260 (InclusiveOrExpression -> ExclusiveOrExpression .)
    CARET           shift and go to state 289


state 201

    (191) PrimaryNoNewArray -> ClassInstanceCreationExpression .

    LBRACK          reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    DOT             reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    INC             reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    DEC             reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    MUL             reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    DIV             reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    MOD             reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    ADD             reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    SUB             reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    LSHIFT          reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    RSHIFT          reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    URSHIFT         reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    LT              reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    GT              reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    LE              reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    GE              reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    EQUAL           reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    NOTEQUAL        reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    BITAND          reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    CARET           reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    BITOR           reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    AND             reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    QUESTION        reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    OR              reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    RPAREN          reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    SEMI            reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    COMMA           reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    RBRACK          reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    RBRACE          reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    COLON           reduce using rule 191 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)


state 202

    (193) PrimaryNoNewArray -> MethodInvocation .

    LBRACK          reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    DOT             reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    INC             reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    DEC             reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    MUL             reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    DIV             reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    MOD             reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    ADD             reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    SUB             reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    LSHIFT          reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    RSHIFT          reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    URSHIFT         reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    LT              reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    GT              reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    LE              reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    GE              reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    EQUAL           reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    NOTEQUAL        reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    BITAND          reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    CARET           reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    BITOR           reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    AND             reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    QUESTION        reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    OR              reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    RPAREN          reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    SEMI            reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    COMMA           reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    RBRACK          reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    RBRACE          reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)
    COLON           reduce using rule 193 (PrimaryNoNewArray -> MethodInvocation .)


state 203

    (258) ExclusiveOrExpression -> AndExpression .
    (257) AndExpression -> AndExpression . BITAND EqualityExpression

    CARET           reduce using rule 258 (ExclusiveOrExpression -> AndExpression .)
    BITOR           reduce using rule 258 (ExclusiveOrExpression -> AndExpression .)
    AND             reduce using rule 258 (ExclusiveOrExpression -> AndExpression .)
    QUESTION        reduce using rule 258 (ExclusiveOrExpression -> AndExpression .)
    OR              reduce using rule 258 (ExclusiveOrExpression -> AndExpression .)
    RPAREN          reduce using rule 258 (ExclusiveOrExpression -> AndExpression .)
    SEMI            reduce using rule 258 (ExclusiveOrExpression -> AndExpression .)
    COMMA           reduce using rule 258 (ExclusiveOrExpression -> AndExpression .)
    RBRACK          reduce using rule 258 (ExclusiveOrExpression -> AndExpression .)
    RBRACE          reduce using rule 258 (ExclusiveOrExpression -> AndExpression .)
    COLON           reduce using rule 258 (ExclusiveOrExpression -> AndExpression .)
    BITAND          shift and go to state 290


state 204

    (199) ArrayCreationExpression -> NEW . PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> NEW . PrimitiveType DimExprs
    (201) ArrayCreationExpression -> NEW . ClassType DimExprs Dims
    (202) ArrayCreationExpression -> NEW . ClassType DimExprs
    (195) ClassInstanceCreationExpression -> NEW . ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> NEW . ClassType LPAREN ArgumentList RPAREN
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (24) ClassType -> . Name
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER

    BOOLEAN         shift and go to state 63
    BYTE            shift and go to state 69
    SHORT           shift and go to state 70
    INT             shift and go to state 71
    LONG            shift and go to state 72
    CHAR            shift and go to state 73
    FLOAT           shift and go to state 74
    DOUBLE          shift and go to state 75
    IDENTIFIER      shift and go to state 61

    PrimitiveType                  shift and go to state 259
    ClassType                      shift and go to state 291
    NumericType                    shift and go to state 62
    Name                           shift and go to state 260
    IntegralType                   shift and go to state 66
    FloatingPointType              shift and go to state 67
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76

state 205

    (256) AndExpression -> EqualityExpression .
    (254) EqualityExpression -> EqualityExpression . EQUAL RelationalExpression
    (255) EqualityExpression -> EqualityExpression . NOTEQUAL RelationalExpression

    BITAND          reduce using rule 256 (AndExpression -> EqualityExpression .)
    CARET           reduce using rule 256 (AndExpression -> EqualityExpression .)
    BITOR           reduce using rule 256 (AndExpression -> EqualityExpression .)
    AND             reduce using rule 256 (AndExpression -> EqualityExpression .)
    QUESTION        reduce using rule 256 (AndExpression -> EqualityExpression .)
    OR              reduce using rule 256 (AndExpression -> EqualityExpression .)
    RPAREN          reduce using rule 256 (AndExpression -> EqualityExpression .)
    SEMI            reduce using rule 256 (AndExpression -> EqualityExpression .)
    COMMA           reduce using rule 256 (AndExpression -> EqualityExpression .)
    RBRACK          reduce using rule 256 (AndExpression -> EqualityExpression .)
    RBRACE          reduce using rule 256 (AndExpression -> EqualityExpression .)
    COLON           reduce using rule 256 (AndExpression -> EqualityExpression .)
    EQUAL           shift and go to state 292
    NOTEQUAL        shift and go to state 293


state 206

    (253) EqualityExpression -> RelationalExpression .
    (249) RelationalExpression -> RelationalExpression . LT ShiftExpression
    (250) RelationalExpression -> RelationalExpression . GT ShiftExpression
    (251) RelationalExpression -> RelationalExpression . LE ShiftExpression
    (252) RelationalExpression -> RelationalExpression . GE ShiftExpression

    EQUAL           reduce using rule 253 (EqualityExpression -> RelationalExpression .)
    NOTEQUAL        reduce using rule 253 (EqualityExpression -> RelationalExpression .)
    BITAND          reduce using rule 253 (EqualityExpression -> RelationalExpression .)
    CARET           reduce using rule 253 (EqualityExpression -> RelationalExpression .)
    BITOR           reduce using rule 253 (EqualityExpression -> RelationalExpression .)
    AND             reduce using rule 253 (EqualityExpression -> RelationalExpression .)
    QUESTION        reduce using rule 253 (EqualityExpression -> RelationalExpression .)
    OR              reduce using rule 253 (EqualityExpression -> RelationalExpression .)
    RPAREN          reduce using rule 253 (EqualityExpression -> RelationalExpression .)
    SEMI            reduce using rule 253 (EqualityExpression -> RelationalExpression .)
    COMMA           reduce using rule 253 (EqualityExpression -> RelationalExpression .)
    RBRACK          reduce using rule 253 (EqualityExpression -> RelationalExpression .)
    RBRACE          reduce using rule 253 (EqualityExpression -> RelationalExpression .)
    COLON           reduce using rule 253 (EqualityExpression -> RelationalExpression .)
    LT              shift and go to state 294
    GT              shift and go to state 295
    LE              shift and go to state 296
    GE              shift and go to state 297


state 207

    (248) RelationalExpression -> ShiftExpression .
    (245) ShiftExpression -> ShiftExpression . LSHIFT AdditiveExpression
    (246) ShiftExpression -> ShiftExpression . RSHIFT AdditiveExpression
    (247) ShiftExpression -> ShiftExpression . URSHIFT AdditiveExpression

    LT              reduce using rule 248 (RelationalExpression -> ShiftExpression .)
    GT              reduce using rule 248 (RelationalExpression -> ShiftExpression .)
    LE              reduce using rule 248 (RelationalExpression -> ShiftExpression .)
    GE              reduce using rule 248 (RelationalExpression -> ShiftExpression .)
    EQUAL           reduce using rule 248 (RelationalExpression -> ShiftExpression .)
    NOTEQUAL        reduce using rule 248 (RelationalExpression -> ShiftExpression .)
    BITAND          reduce using rule 248 (RelationalExpression -> ShiftExpression .)
    CARET           reduce using rule 248 (RelationalExpression -> ShiftExpression .)
    BITOR           reduce using rule 248 (RelationalExpression -> ShiftExpression .)
    AND             reduce using rule 248 (RelationalExpression -> ShiftExpression .)
    QUESTION        reduce using rule 248 (RelationalExpression -> ShiftExpression .)
    OR              reduce using rule 248 (RelationalExpression -> ShiftExpression .)
    RPAREN          reduce using rule 248 (RelationalExpression -> ShiftExpression .)
    SEMI            reduce using rule 248 (RelationalExpression -> ShiftExpression .)
    COMMA           reduce using rule 248 (RelationalExpression -> ShiftExpression .)
    RBRACK          reduce using rule 248 (RelationalExpression -> ShiftExpression .)
    RBRACE          reduce using rule 248 (RelationalExpression -> ShiftExpression .)
    COLON           reduce using rule 248 (RelationalExpression -> ShiftExpression .)
    LSHIFT          shift and go to state 298
    RSHIFT          shift and go to state 299
    URSHIFT         shift and go to state 300


state 208

    (244) ShiftExpression -> AdditiveExpression .
    (242) AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression
    (243) AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression

    LSHIFT          reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    RSHIFT          reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    URSHIFT         reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    LT              reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    GT              reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    LE              reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    GE              reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    EQUAL           reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    NOTEQUAL        reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    BITAND          reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    CARET           reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    BITOR           reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    AND             reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    QUESTION        reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    OR              reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    RPAREN          reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    SEMI            reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    COMMA           reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    RBRACK          reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    RBRACE          reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    COLON           reduce using rule 244 (ShiftExpression -> AdditiveExpression .)
    ADD             shift and go to state 301
    SUB             shift and go to state 302


state 209

    (241) AdditiveExpression -> MultiplicativeExpression .
    (238) MultiplicativeExpression -> MultiplicativeExpression . MUL UnaryExpression
    (239) MultiplicativeExpression -> MultiplicativeExpression . DIV UnaryExpression
    (240) MultiplicativeExpression -> MultiplicativeExpression . MOD UnaryExpression

    ADD             reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    SUB             reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    LSHIFT          reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    RSHIFT          reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    URSHIFT         reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    LT              reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    GT              reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    LE              reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    GE              reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    EQUAL           reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    NOTEQUAL        reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    BITAND          reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    CARET           reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    BITOR           reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    AND             reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    QUESTION        reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    OR              reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    RPAREN          reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    SEMI            reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    COMMA           reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    RBRACK          reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    RBRACE          reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    COLON           reduce using rule 241 (AdditiveExpression -> MultiplicativeExpression .)
    MUL             shift and go to state 303
    DIV             shift and go to state 304
    MOD             shift and go to state 305


state 210

    (224) UnaryExpression -> ADD . UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    UnaryExpression                shift and go to state 306
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 211

    (225) UnaryExpression -> SUB . UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    UnaryExpression                shift and go to state 307
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 212

    (237) MultiplicativeExpression -> UnaryExpression .

    MUL             reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    DIV             reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    MOD             reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    ADD             reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    SUB             reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    LSHIFT          reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    RSHIFT          reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    URSHIFT         reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    LT              reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    GT              reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    LE              reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    GE              reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    EQUAL           reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    NOTEQUAL        reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    BITAND          reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    CARET           reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    BITOR           reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    AND             reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    QUESTION        reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    OR              reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    RPAREN          reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    SEMI            reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    COMMA           reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    RBRACK          reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    RBRACE          reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)
    COLON           reduce using rule 237 (MultiplicativeExpression -> UnaryExpression .)


state 213

    (222) UnaryExpression -> PreIncrementExpression .

    MUL             reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    DIV             reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    MOD             reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    ADD             reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    SUB             reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    LSHIFT          reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    RSHIFT          reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    URSHIFT         reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    LT              reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    GT              reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    LE              reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    GE              reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    EQUAL           reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    NOTEQUAL        reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    BITAND          reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    CARET           reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    BITOR           reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    AND             reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    QUESTION        reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    OR              reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    RPAREN          reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    SEMI            reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    COMMA           reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    RBRACK          reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    RBRACE          reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)
    COLON           reduce using rule 222 (UnaryExpression -> PreIncrementExpression .)


state 214

    (223) UnaryExpression -> PreDecrementExpression .

    MUL             reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    DIV             reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    MOD             reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    ADD             reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    SUB             reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    LSHIFT          reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    RSHIFT          reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    URSHIFT         reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    LT              reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    GT              reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    LE              reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    GE              reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    EQUAL           reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    NOTEQUAL        reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    BITAND          reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    CARET           reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    BITOR           reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    AND             reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    QUESTION        reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    OR              reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    RPAREN          reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    SEMI            reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    COMMA           reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    RBRACK          reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    RBRACE          reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)
    COLON           reduce using rule 223 (UnaryExpression -> PreDecrementExpression .)


state 215

    (226) UnaryExpression -> UnaryExpressionNotAddSub .

    MUL             reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    DIV             reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    MOD             reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    ADD             reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    SUB             reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    LSHIFT          reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    RSHIFT          reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    URSHIFT         reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    LT              reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    GT              reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    LE              reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    GE              reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    EQUAL           reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    NOTEQUAL        reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    BITAND          reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    CARET           reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    BITOR           reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    AND             reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    QUESTION        reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    OR              reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    RPAREN          reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    SEMI            reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    COMMA           reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    RBRACK          reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    RBRACE          reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)
    COLON           reduce using rule 226 (UnaryExpression -> UnaryExpressionNotAddSub .)


state 216

    (229) UnaryExpressionNotAddSub -> PostfixExpression .
    (220) PostIncrementExpression -> PostfixExpression . INC
    (221) PostDecrementExpression -> PostfixExpression . DEC

    MUL             reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    DIV             reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    MOD             reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    ADD             reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    SUB             reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    LSHIFT          reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    RSHIFT          reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    URSHIFT         reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    LT              reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    GT              reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    LE              reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    GE              reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    EQUAL           reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    NOTEQUAL        reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    BITAND          reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    CARET           reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    BITOR           reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    AND             reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    QUESTION        reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    OR              reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    RPAREN          reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    SEMI            reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    COMMA           reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    RBRACK          reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    RBRACE          reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    COLON           reduce using rule 229 (UnaryExpressionNotAddSub -> PostfixExpression .)
    INC             shift and go to state 255
    DEC             shift and go to state 256


state 217

    (230) UnaryExpressionNotAddSub -> BANG . UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    UnaryExpression                shift and go to state 308
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 218

    (231) UnaryExpressionNotAddSub -> TILDE . UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    UnaryExpression                shift and go to state 309
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 219

    (232) UnaryExpressionNotAddSub -> CastExpression .

    MUL             reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    DIV             reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    MOD             reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    ADD             reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    SUB             reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    LSHIFT          reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    RSHIFT          reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    URSHIFT         reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    LT              reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    GT              reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    LE              reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    GE              reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    EQUAL           reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    NOTEQUAL        reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    BITAND          reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    CARET           reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    BITOR           reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    AND             reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    QUESTION        reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    OR              reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    RPAREN          reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    SEMI            reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    COMMA           reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    RBRACK          reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    RBRACE          reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)
    COLON           reduce using rule 232 (UnaryExpressionNotAddSub -> CastExpression .)


state 220

    (218) PostfixExpression -> PostIncrementExpression .

    INC             reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    DEC             reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    MUL             reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    DIV             reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    MOD             reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    ADD             reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    SUB             reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    LSHIFT          reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    RSHIFT          reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    URSHIFT         reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    LT              reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    GT              reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    LE              reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    GE              reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    EQUAL           reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    NOTEQUAL        reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    BITAND          reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    CARET           reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    BITOR           reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    AND             reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    QUESTION        reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    OR              reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    RPAREN          reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    SEMI            reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    COMMA           reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    RBRACK          reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    RBRACE          reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)
    COLON           reduce using rule 218 (PostfixExpression -> PostIncrementExpression .)


state 221

    (219) PostfixExpression -> PostDecrementExpression .

    INC             reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    DEC             reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    MUL             reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    DIV             reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    MOD             reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    ADD             reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    SUB             reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    LSHIFT          reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    RSHIFT          reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    URSHIFT         reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    LT              reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    GT              reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    LE              reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    GE              reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    EQUAL           reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    NOTEQUAL        reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    BITAND          reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    CARET           reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    BITOR           reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    AND             reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    QUESTION        reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    OR              reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    RPAREN          reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    SEMI            reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    COMMA           reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    RBRACK          reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    RBRACE          reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)
    COLON           reduce using rule 219 (PostfixExpression -> PostDecrementExpression .)


state 222

    (156) WhileStatement -> WHILE begin_scope . LPAREN Expression RPAREN Statement end_scope

    LPAREN          shift and go to state 310


state 223

    (159) ForStatement -> FOR begin_scope . LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> FOR begin_scope . LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> FOR begin_scope . LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> FOR begin_scope . LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> FOR begin_scope . LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope . LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> FOR begin_scope . LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> FOR begin_scope . LPAREN SEMI SEMI RPAREN Statement end_scope

    LPAREN          shift and go to state 311


state 224

    (133) ExpressionStatement -> StatementExpression SEMI .

    RBRACE          reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    IDENTIFIER      reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    IF              reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    WHILE           reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    FOR             reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    LBRACE          reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    SEMI            reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    SWITCH          reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    DO              reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    BREAK           reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    CONTINUE        reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    RETURN          reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    BOOLEAN         reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    INC             reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    DEC             reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    NEW             reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    BYTE            reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    SHORT           reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    INT             reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    LONG            reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    CHAR            reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    FLOAT           reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    DOUBLE          reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    SUPER           reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    THIS            reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    LPAREN          reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    DECIMAL_LITERAL reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    HEX_LITERAL     reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    BINARY_LITERAL  reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    FLOAT_LITERAL   reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    BOOL_LITERAL    reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    CHAR_LITERAL    reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    STRING_LITERAL  reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    CASE            reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    DEFAULT         reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)
    ELSE            reduce using rule 133 (ExpressionStatement -> StatementExpression SEMI .)


state 225

    (144) SwitchStatement -> SWITCH LPAREN . Expression RPAREN SwitchBlock
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    Expression                     shift and go to state 312
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 226

    (158) DoStatement -> DO begin_scope . Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 128
    IF              shift and go to state 129
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 313
    StatementWithoutTrailingSubstatement shift and go to state 113
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 227

    (180) BreakStatement -> BREAK IDENTIFIER . SEMI

    SEMI            shift and go to state 314


state 228

    (181) BreakStatement -> BREAK SEMI .

    RBRACE          reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    IDENTIFIER      reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    IF              reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    WHILE           reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    FOR             reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    LBRACE          reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    SEMI            reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    SWITCH          reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    DO              reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    BREAK           reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    CONTINUE        reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    RETURN          reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    BOOLEAN         reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    INC             reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    DEC             reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    NEW             reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    BYTE            reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    SHORT           reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    INT             reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    LONG            reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    CHAR            reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    FLOAT           reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    DOUBLE          reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    SUPER           reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    THIS            reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    LPAREN          reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    DECIMAL_LITERAL reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    HEX_LITERAL     reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    BINARY_LITERAL  reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    FLOAT_LITERAL   reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    BOOL_LITERAL    reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    CHAR_LITERAL    reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    STRING_LITERAL  reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    CASE            reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    DEFAULT         reduce using rule 181 (BreakStatement -> BREAK SEMI .)
    ELSE            reduce using rule 181 (BreakStatement -> BREAK SEMI .)


state 229

    (182) ContinueStatement -> CONTINUE IDENTIFIER . SEMI

    SEMI            shift and go to state 315


state 230

    (183) ContinueStatement -> CONTINUE SEMI .

    RBRACE          reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    IDENTIFIER      reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    IF              reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    WHILE           reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    FOR             reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    LBRACE          reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    SEMI            reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    SWITCH          reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    DO              reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    BREAK           reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    CONTINUE        reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    RETURN          reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    BOOLEAN         reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    INC             reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    DEC             reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    NEW             reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    BYTE            reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    SHORT           reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    INT             reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    LONG            reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    CHAR            reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    FLOAT           reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    DOUBLE          reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    SUPER           reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    THIS            reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    LPAREN          reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    DECIMAL_LITERAL reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    HEX_LITERAL     reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    BINARY_LITERAL  reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    FLOAT_LITERAL   reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    BOOL_LITERAL    reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    CHAR_LITERAL    reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    STRING_LITERAL  reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    CASE            reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    DEFAULT         reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)
    ELSE            reduce using rule 183 (ContinueStatement -> CONTINUE SEMI .)


state 231

    (184) ReturnStatement -> RETURN Expression . SEMI

    SEMI            shift and go to state 316


state 232

    (185) ReturnStatement -> RETURN SEMI .

    RBRACE          reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    IDENTIFIER      reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    IF              reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    WHILE           reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    FOR             reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    LBRACE          reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    SEMI            reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    SWITCH          reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    DO              reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    BREAK           reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    CONTINUE        reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    RETURN          reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    BOOLEAN         reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    INC             reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    DEC             reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    NEW             reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    BYTE            reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    SHORT           reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    INT             reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    LONG            reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    CHAR            reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    FLOAT           reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    DOUBLE          reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    SUPER           reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    THIS            reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    LPAREN          reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    DECIMAL_LITERAL reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    HEX_LITERAL     reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    BINARY_LITERAL  reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    FLOAT_LITERAL   reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    BOOL_LITERAL    reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    CHAR_LITERAL    reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    STRING_LITERAL  reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    CASE            reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    DEFAULT         reduce using rule 185 (ReturnStatement -> RETURN SEMI .)
    ELSE            reduce using rule 185 (ReturnStatement -> RETURN SEMI .)


state 233

    (210) MethodInvocation -> Name LPAREN . ArgumentList RPAREN
    (211) MethodInvocation -> Name LPAREN . RPAREN
    (197) ArgumentList -> . Expression
    (198) ArgumentList -> . ArgumentList COMMA Expression
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    RPAREN          shift and go to state 318
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    Name                           shift and go to state 196
    ArgumentList                   shift and go to state 317
    Expression                     shift and go to state 319
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 234

    (214) ArrayAccess -> Name LBRACK . Expression RBRACK
    (206) Dims -> LBRACK . RBRACK
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    RBRACK          shift and go to state 179
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    Name                           shift and go to state 196
    Expression                     shift and go to state 320
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 235

    (270) Assignment -> LeftHandSide AssignmentOperator . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    LeftHandSide                   shift and go to state 147
    AssignmentExpression           shift and go to state 321
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 236

    (274) AssignmentOperator -> ASSIGN .

    SUPER           reduce using rule 274 (AssignmentOperator -> ASSIGN .)
    IDENTIFIER      reduce using rule 274 (AssignmentOperator -> ASSIGN .)
    THIS            reduce using rule 274 (AssignmentOperator -> ASSIGN .)
    LPAREN          reduce using rule 274 (AssignmentOperator -> ASSIGN .)
    NEW             reduce using rule 274 (AssignmentOperator -> ASSIGN .)
    DECIMAL_LITERAL reduce using rule 274 (AssignmentOperator -> ASSIGN .)
    HEX_LITERAL     reduce using rule 274 (AssignmentOperator -> ASSIGN .)
    BINARY_LITERAL  reduce using rule 274 (AssignmentOperator -> ASSIGN .)
    FLOAT_LITERAL   reduce using rule 274 (AssignmentOperator -> ASSIGN .)
    BOOL_LITERAL    reduce using rule 274 (AssignmentOperator -> ASSIGN .)
    CHAR_LITERAL    reduce using rule 274 (AssignmentOperator -> ASSIGN .)
    STRING_LITERAL  reduce using rule 274 (AssignmentOperator -> ASSIGN .)
    ADD             reduce using rule 274 (AssignmentOperator -> ASSIGN .)
    SUB             reduce using rule 274 (AssignmentOperator -> ASSIGN .)
    INC             reduce using rule 274 (AssignmentOperator -> ASSIGN .)
    DEC             reduce using rule 274 (AssignmentOperator -> ASSIGN .)
    BANG            reduce using rule 274 (AssignmentOperator -> ASSIGN .)
    TILDE           reduce using rule 274 (AssignmentOperator -> ASSIGN .)


state 237

    (275) AssignmentOperator -> ADD_ASSIGN .

    SUPER           reduce using rule 275 (AssignmentOperator -> ADD_ASSIGN .)
    IDENTIFIER      reduce using rule 275 (AssignmentOperator -> ADD_ASSIGN .)
    THIS            reduce using rule 275 (AssignmentOperator -> ADD_ASSIGN .)
    LPAREN          reduce using rule 275 (AssignmentOperator -> ADD_ASSIGN .)
    NEW             reduce using rule 275 (AssignmentOperator -> ADD_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 275 (AssignmentOperator -> ADD_ASSIGN .)
    HEX_LITERAL     reduce using rule 275 (AssignmentOperator -> ADD_ASSIGN .)
    BINARY_LITERAL  reduce using rule 275 (AssignmentOperator -> ADD_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 275 (AssignmentOperator -> ADD_ASSIGN .)
    BOOL_LITERAL    reduce using rule 275 (AssignmentOperator -> ADD_ASSIGN .)
    CHAR_LITERAL    reduce using rule 275 (AssignmentOperator -> ADD_ASSIGN .)
    STRING_LITERAL  reduce using rule 275 (AssignmentOperator -> ADD_ASSIGN .)
    ADD             reduce using rule 275 (AssignmentOperator -> ADD_ASSIGN .)
    SUB             reduce using rule 275 (AssignmentOperator -> ADD_ASSIGN .)
    INC             reduce using rule 275 (AssignmentOperator -> ADD_ASSIGN .)
    DEC             reduce using rule 275 (AssignmentOperator -> ADD_ASSIGN .)
    BANG            reduce using rule 275 (AssignmentOperator -> ADD_ASSIGN .)
    TILDE           reduce using rule 275 (AssignmentOperator -> ADD_ASSIGN .)


state 238

    (276) AssignmentOperator -> SUB_ASSIGN .

    SUPER           reduce using rule 276 (AssignmentOperator -> SUB_ASSIGN .)
    IDENTIFIER      reduce using rule 276 (AssignmentOperator -> SUB_ASSIGN .)
    THIS            reduce using rule 276 (AssignmentOperator -> SUB_ASSIGN .)
    LPAREN          reduce using rule 276 (AssignmentOperator -> SUB_ASSIGN .)
    NEW             reduce using rule 276 (AssignmentOperator -> SUB_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 276 (AssignmentOperator -> SUB_ASSIGN .)
    HEX_LITERAL     reduce using rule 276 (AssignmentOperator -> SUB_ASSIGN .)
    BINARY_LITERAL  reduce using rule 276 (AssignmentOperator -> SUB_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 276 (AssignmentOperator -> SUB_ASSIGN .)
    BOOL_LITERAL    reduce using rule 276 (AssignmentOperator -> SUB_ASSIGN .)
    CHAR_LITERAL    reduce using rule 276 (AssignmentOperator -> SUB_ASSIGN .)
    STRING_LITERAL  reduce using rule 276 (AssignmentOperator -> SUB_ASSIGN .)
    ADD             reduce using rule 276 (AssignmentOperator -> SUB_ASSIGN .)
    SUB             reduce using rule 276 (AssignmentOperator -> SUB_ASSIGN .)
    INC             reduce using rule 276 (AssignmentOperator -> SUB_ASSIGN .)
    DEC             reduce using rule 276 (AssignmentOperator -> SUB_ASSIGN .)
    BANG            reduce using rule 276 (AssignmentOperator -> SUB_ASSIGN .)
    TILDE           reduce using rule 276 (AssignmentOperator -> SUB_ASSIGN .)


state 239

    (277) AssignmentOperator -> MUL_ASSIGN .

    SUPER           reduce using rule 277 (AssignmentOperator -> MUL_ASSIGN .)
    IDENTIFIER      reduce using rule 277 (AssignmentOperator -> MUL_ASSIGN .)
    THIS            reduce using rule 277 (AssignmentOperator -> MUL_ASSIGN .)
    LPAREN          reduce using rule 277 (AssignmentOperator -> MUL_ASSIGN .)
    NEW             reduce using rule 277 (AssignmentOperator -> MUL_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 277 (AssignmentOperator -> MUL_ASSIGN .)
    HEX_LITERAL     reduce using rule 277 (AssignmentOperator -> MUL_ASSIGN .)
    BINARY_LITERAL  reduce using rule 277 (AssignmentOperator -> MUL_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 277 (AssignmentOperator -> MUL_ASSIGN .)
    BOOL_LITERAL    reduce using rule 277 (AssignmentOperator -> MUL_ASSIGN .)
    CHAR_LITERAL    reduce using rule 277 (AssignmentOperator -> MUL_ASSIGN .)
    STRING_LITERAL  reduce using rule 277 (AssignmentOperator -> MUL_ASSIGN .)
    ADD             reduce using rule 277 (AssignmentOperator -> MUL_ASSIGN .)
    SUB             reduce using rule 277 (AssignmentOperator -> MUL_ASSIGN .)
    INC             reduce using rule 277 (AssignmentOperator -> MUL_ASSIGN .)
    DEC             reduce using rule 277 (AssignmentOperator -> MUL_ASSIGN .)
    BANG            reduce using rule 277 (AssignmentOperator -> MUL_ASSIGN .)
    TILDE           reduce using rule 277 (AssignmentOperator -> MUL_ASSIGN .)


state 240

    (278) AssignmentOperator -> DIV_ASSIGN .

    SUPER           reduce using rule 278 (AssignmentOperator -> DIV_ASSIGN .)
    IDENTIFIER      reduce using rule 278 (AssignmentOperator -> DIV_ASSIGN .)
    THIS            reduce using rule 278 (AssignmentOperator -> DIV_ASSIGN .)
    LPAREN          reduce using rule 278 (AssignmentOperator -> DIV_ASSIGN .)
    NEW             reduce using rule 278 (AssignmentOperator -> DIV_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 278 (AssignmentOperator -> DIV_ASSIGN .)
    HEX_LITERAL     reduce using rule 278 (AssignmentOperator -> DIV_ASSIGN .)
    BINARY_LITERAL  reduce using rule 278 (AssignmentOperator -> DIV_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 278 (AssignmentOperator -> DIV_ASSIGN .)
    BOOL_LITERAL    reduce using rule 278 (AssignmentOperator -> DIV_ASSIGN .)
    CHAR_LITERAL    reduce using rule 278 (AssignmentOperator -> DIV_ASSIGN .)
    STRING_LITERAL  reduce using rule 278 (AssignmentOperator -> DIV_ASSIGN .)
    ADD             reduce using rule 278 (AssignmentOperator -> DIV_ASSIGN .)
    SUB             reduce using rule 278 (AssignmentOperator -> DIV_ASSIGN .)
    INC             reduce using rule 278 (AssignmentOperator -> DIV_ASSIGN .)
    DEC             reduce using rule 278 (AssignmentOperator -> DIV_ASSIGN .)
    BANG            reduce using rule 278 (AssignmentOperator -> DIV_ASSIGN .)
    TILDE           reduce using rule 278 (AssignmentOperator -> DIV_ASSIGN .)


state 241

    (279) AssignmentOperator -> AND_ASSIGN .

    SUPER           reduce using rule 279 (AssignmentOperator -> AND_ASSIGN .)
    IDENTIFIER      reduce using rule 279 (AssignmentOperator -> AND_ASSIGN .)
    THIS            reduce using rule 279 (AssignmentOperator -> AND_ASSIGN .)
    LPAREN          reduce using rule 279 (AssignmentOperator -> AND_ASSIGN .)
    NEW             reduce using rule 279 (AssignmentOperator -> AND_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 279 (AssignmentOperator -> AND_ASSIGN .)
    HEX_LITERAL     reduce using rule 279 (AssignmentOperator -> AND_ASSIGN .)
    BINARY_LITERAL  reduce using rule 279 (AssignmentOperator -> AND_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 279 (AssignmentOperator -> AND_ASSIGN .)
    BOOL_LITERAL    reduce using rule 279 (AssignmentOperator -> AND_ASSIGN .)
    CHAR_LITERAL    reduce using rule 279 (AssignmentOperator -> AND_ASSIGN .)
    STRING_LITERAL  reduce using rule 279 (AssignmentOperator -> AND_ASSIGN .)
    ADD             reduce using rule 279 (AssignmentOperator -> AND_ASSIGN .)
    SUB             reduce using rule 279 (AssignmentOperator -> AND_ASSIGN .)
    INC             reduce using rule 279 (AssignmentOperator -> AND_ASSIGN .)
    DEC             reduce using rule 279 (AssignmentOperator -> AND_ASSIGN .)
    BANG            reduce using rule 279 (AssignmentOperator -> AND_ASSIGN .)
    TILDE           reduce using rule 279 (AssignmentOperator -> AND_ASSIGN .)


state 242

    (280) AssignmentOperator -> OR_ASSIGN .

    SUPER           reduce using rule 280 (AssignmentOperator -> OR_ASSIGN .)
    IDENTIFIER      reduce using rule 280 (AssignmentOperator -> OR_ASSIGN .)
    THIS            reduce using rule 280 (AssignmentOperator -> OR_ASSIGN .)
    LPAREN          reduce using rule 280 (AssignmentOperator -> OR_ASSIGN .)
    NEW             reduce using rule 280 (AssignmentOperator -> OR_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 280 (AssignmentOperator -> OR_ASSIGN .)
    HEX_LITERAL     reduce using rule 280 (AssignmentOperator -> OR_ASSIGN .)
    BINARY_LITERAL  reduce using rule 280 (AssignmentOperator -> OR_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 280 (AssignmentOperator -> OR_ASSIGN .)
    BOOL_LITERAL    reduce using rule 280 (AssignmentOperator -> OR_ASSIGN .)
    CHAR_LITERAL    reduce using rule 280 (AssignmentOperator -> OR_ASSIGN .)
    STRING_LITERAL  reduce using rule 280 (AssignmentOperator -> OR_ASSIGN .)
    ADD             reduce using rule 280 (AssignmentOperator -> OR_ASSIGN .)
    SUB             reduce using rule 280 (AssignmentOperator -> OR_ASSIGN .)
    INC             reduce using rule 280 (AssignmentOperator -> OR_ASSIGN .)
    DEC             reduce using rule 280 (AssignmentOperator -> OR_ASSIGN .)
    BANG            reduce using rule 280 (AssignmentOperator -> OR_ASSIGN .)
    TILDE           reduce using rule 280 (AssignmentOperator -> OR_ASSIGN .)


state 243

    (281) AssignmentOperator -> XOR_ASSIGN .

    SUPER           reduce using rule 281 (AssignmentOperator -> XOR_ASSIGN .)
    IDENTIFIER      reduce using rule 281 (AssignmentOperator -> XOR_ASSIGN .)
    THIS            reduce using rule 281 (AssignmentOperator -> XOR_ASSIGN .)
    LPAREN          reduce using rule 281 (AssignmentOperator -> XOR_ASSIGN .)
    NEW             reduce using rule 281 (AssignmentOperator -> XOR_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 281 (AssignmentOperator -> XOR_ASSIGN .)
    HEX_LITERAL     reduce using rule 281 (AssignmentOperator -> XOR_ASSIGN .)
    BINARY_LITERAL  reduce using rule 281 (AssignmentOperator -> XOR_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 281 (AssignmentOperator -> XOR_ASSIGN .)
    BOOL_LITERAL    reduce using rule 281 (AssignmentOperator -> XOR_ASSIGN .)
    CHAR_LITERAL    reduce using rule 281 (AssignmentOperator -> XOR_ASSIGN .)
    STRING_LITERAL  reduce using rule 281 (AssignmentOperator -> XOR_ASSIGN .)
    ADD             reduce using rule 281 (AssignmentOperator -> XOR_ASSIGN .)
    SUB             reduce using rule 281 (AssignmentOperator -> XOR_ASSIGN .)
    INC             reduce using rule 281 (AssignmentOperator -> XOR_ASSIGN .)
    DEC             reduce using rule 281 (AssignmentOperator -> XOR_ASSIGN .)
    BANG            reduce using rule 281 (AssignmentOperator -> XOR_ASSIGN .)
    TILDE           reduce using rule 281 (AssignmentOperator -> XOR_ASSIGN .)


state 244

    (282) AssignmentOperator -> MOD_ASSIGN .

    SUPER           reduce using rule 282 (AssignmentOperator -> MOD_ASSIGN .)
    IDENTIFIER      reduce using rule 282 (AssignmentOperator -> MOD_ASSIGN .)
    THIS            reduce using rule 282 (AssignmentOperator -> MOD_ASSIGN .)
    LPAREN          reduce using rule 282 (AssignmentOperator -> MOD_ASSIGN .)
    NEW             reduce using rule 282 (AssignmentOperator -> MOD_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 282 (AssignmentOperator -> MOD_ASSIGN .)
    HEX_LITERAL     reduce using rule 282 (AssignmentOperator -> MOD_ASSIGN .)
    BINARY_LITERAL  reduce using rule 282 (AssignmentOperator -> MOD_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 282 (AssignmentOperator -> MOD_ASSIGN .)
    BOOL_LITERAL    reduce using rule 282 (AssignmentOperator -> MOD_ASSIGN .)
    CHAR_LITERAL    reduce using rule 282 (AssignmentOperator -> MOD_ASSIGN .)
    STRING_LITERAL  reduce using rule 282 (AssignmentOperator -> MOD_ASSIGN .)
    ADD             reduce using rule 282 (AssignmentOperator -> MOD_ASSIGN .)
    SUB             reduce using rule 282 (AssignmentOperator -> MOD_ASSIGN .)
    INC             reduce using rule 282 (AssignmentOperator -> MOD_ASSIGN .)
    DEC             reduce using rule 282 (AssignmentOperator -> MOD_ASSIGN .)
    BANG            reduce using rule 282 (AssignmentOperator -> MOD_ASSIGN .)
    TILDE           reduce using rule 282 (AssignmentOperator -> MOD_ASSIGN .)


state 245

    (283) AssignmentOperator -> LSHIFT_ASSIGN .

    SUPER           reduce using rule 283 (AssignmentOperator -> LSHIFT_ASSIGN .)
    IDENTIFIER      reduce using rule 283 (AssignmentOperator -> LSHIFT_ASSIGN .)
    THIS            reduce using rule 283 (AssignmentOperator -> LSHIFT_ASSIGN .)
    LPAREN          reduce using rule 283 (AssignmentOperator -> LSHIFT_ASSIGN .)
    NEW             reduce using rule 283 (AssignmentOperator -> LSHIFT_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 283 (AssignmentOperator -> LSHIFT_ASSIGN .)
    HEX_LITERAL     reduce using rule 283 (AssignmentOperator -> LSHIFT_ASSIGN .)
    BINARY_LITERAL  reduce using rule 283 (AssignmentOperator -> LSHIFT_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 283 (AssignmentOperator -> LSHIFT_ASSIGN .)
    BOOL_LITERAL    reduce using rule 283 (AssignmentOperator -> LSHIFT_ASSIGN .)
    CHAR_LITERAL    reduce using rule 283 (AssignmentOperator -> LSHIFT_ASSIGN .)
    STRING_LITERAL  reduce using rule 283 (AssignmentOperator -> LSHIFT_ASSIGN .)
    ADD             reduce using rule 283 (AssignmentOperator -> LSHIFT_ASSIGN .)
    SUB             reduce using rule 283 (AssignmentOperator -> LSHIFT_ASSIGN .)
    INC             reduce using rule 283 (AssignmentOperator -> LSHIFT_ASSIGN .)
    DEC             reduce using rule 283 (AssignmentOperator -> LSHIFT_ASSIGN .)
    BANG            reduce using rule 283 (AssignmentOperator -> LSHIFT_ASSIGN .)
    TILDE           reduce using rule 283 (AssignmentOperator -> LSHIFT_ASSIGN .)


state 246

    (284) AssignmentOperator -> RSHIFT_ASSIGN .

    SUPER           reduce using rule 284 (AssignmentOperator -> RSHIFT_ASSIGN .)
    IDENTIFIER      reduce using rule 284 (AssignmentOperator -> RSHIFT_ASSIGN .)
    THIS            reduce using rule 284 (AssignmentOperator -> RSHIFT_ASSIGN .)
    LPAREN          reduce using rule 284 (AssignmentOperator -> RSHIFT_ASSIGN .)
    NEW             reduce using rule 284 (AssignmentOperator -> RSHIFT_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 284 (AssignmentOperator -> RSHIFT_ASSIGN .)
    HEX_LITERAL     reduce using rule 284 (AssignmentOperator -> RSHIFT_ASSIGN .)
    BINARY_LITERAL  reduce using rule 284 (AssignmentOperator -> RSHIFT_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 284 (AssignmentOperator -> RSHIFT_ASSIGN .)
    BOOL_LITERAL    reduce using rule 284 (AssignmentOperator -> RSHIFT_ASSIGN .)
    CHAR_LITERAL    reduce using rule 284 (AssignmentOperator -> RSHIFT_ASSIGN .)
    STRING_LITERAL  reduce using rule 284 (AssignmentOperator -> RSHIFT_ASSIGN .)
    ADD             reduce using rule 284 (AssignmentOperator -> RSHIFT_ASSIGN .)
    SUB             reduce using rule 284 (AssignmentOperator -> RSHIFT_ASSIGN .)
    INC             reduce using rule 284 (AssignmentOperator -> RSHIFT_ASSIGN .)
    DEC             reduce using rule 284 (AssignmentOperator -> RSHIFT_ASSIGN .)
    BANG            reduce using rule 284 (AssignmentOperator -> RSHIFT_ASSIGN .)
    TILDE           reduce using rule 284 (AssignmentOperator -> RSHIFT_ASSIGN .)


state 247

    (285) AssignmentOperator -> URSHIFT_ASSIGN .

    SUPER           reduce using rule 285 (AssignmentOperator -> URSHIFT_ASSIGN .)
    IDENTIFIER      reduce using rule 285 (AssignmentOperator -> URSHIFT_ASSIGN .)
    THIS            reduce using rule 285 (AssignmentOperator -> URSHIFT_ASSIGN .)
    LPAREN          reduce using rule 285 (AssignmentOperator -> URSHIFT_ASSIGN .)
    NEW             reduce using rule 285 (AssignmentOperator -> URSHIFT_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 285 (AssignmentOperator -> URSHIFT_ASSIGN .)
    HEX_LITERAL     reduce using rule 285 (AssignmentOperator -> URSHIFT_ASSIGN .)
    BINARY_LITERAL  reduce using rule 285 (AssignmentOperator -> URSHIFT_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 285 (AssignmentOperator -> URSHIFT_ASSIGN .)
    BOOL_LITERAL    reduce using rule 285 (AssignmentOperator -> URSHIFT_ASSIGN .)
    CHAR_LITERAL    reduce using rule 285 (AssignmentOperator -> URSHIFT_ASSIGN .)
    STRING_LITERAL  reduce using rule 285 (AssignmentOperator -> URSHIFT_ASSIGN .)
    ADD             reduce using rule 285 (AssignmentOperator -> URSHIFT_ASSIGN .)
    SUB             reduce using rule 285 (AssignmentOperator -> URSHIFT_ASSIGN .)
    INC             reduce using rule 285 (AssignmentOperator -> URSHIFT_ASSIGN .)
    DEC             reduce using rule 285 (AssignmentOperator -> URSHIFT_ASSIGN .)
    BANG            reduce using rule 285 (AssignmentOperator -> URSHIFT_ASSIGN .)
    TILDE           reduce using rule 285 (AssignmentOperator -> URSHIFT_ASSIGN .)


state 248

    (227) PreIncrementExpression -> INC UnaryExpression .

    SEMI            reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    MUL             reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    DIV             reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    MOD             reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    ADD             reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    SUB             reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    LSHIFT          reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    RSHIFT          reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    URSHIFT         reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    LT              reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    GT              reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    LE              reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    GE              reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    EQUAL           reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    NOTEQUAL        reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    BITAND          reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    CARET           reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    BITOR           reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    AND             reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    QUESTION        reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    OR              reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    RPAREN          reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    COMMA           reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    RBRACK          reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    RBRACE          reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)
    COLON           reduce using rule 227 (PreIncrementExpression -> INC UnaryExpression .)


state 249

    (216) PostfixExpression -> Primary .
    (208) FieldAccess -> Primary . DOT IDENTIFIER
    (212) MethodInvocation -> Primary . DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> Primary . DOT IDENTIFIER LPAREN RPAREN

    INC             reduce using rule 216 (PostfixExpression -> Primary .)
    DEC             reduce using rule 216 (PostfixExpression -> Primary .)
    SEMI            reduce using rule 216 (PostfixExpression -> Primary .)
    MUL             reduce using rule 216 (PostfixExpression -> Primary .)
    DIV             reduce using rule 216 (PostfixExpression -> Primary .)
    MOD             reduce using rule 216 (PostfixExpression -> Primary .)
    ADD             reduce using rule 216 (PostfixExpression -> Primary .)
    SUB             reduce using rule 216 (PostfixExpression -> Primary .)
    LSHIFT          reduce using rule 216 (PostfixExpression -> Primary .)
    RSHIFT          reduce using rule 216 (PostfixExpression -> Primary .)
    URSHIFT         reduce using rule 216 (PostfixExpression -> Primary .)
    LT              reduce using rule 216 (PostfixExpression -> Primary .)
    GT              reduce using rule 216 (PostfixExpression -> Primary .)
    LE              reduce using rule 216 (PostfixExpression -> Primary .)
    GE              reduce using rule 216 (PostfixExpression -> Primary .)
    EQUAL           reduce using rule 216 (PostfixExpression -> Primary .)
    NOTEQUAL        reduce using rule 216 (PostfixExpression -> Primary .)
    BITAND          reduce using rule 216 (PostfixExpression -> Primary .)
    CARET           reduce using rule 216 (PostfixExpression -> Primary .)
    BITOR           reduce using rule 216 (PostfixExpression -> Primary .)
    AND             reduce using rule 216 (PostfixExpression -> Primary .)
    QUESTION        reduce using rule 216 (PostfixExpression -> Primary .)
    OR              reduce using rule 216 (PostfixExpression -> Primary .)
    RPAREN          reduce using rule 216 (PostfixExpression -> Primary .)
    COMMA           reduce using rule 216 (PostfixExpression -> Primary .)
    RBRACK          reduce using rule 216 (PostfixExpression -> Primary .)
    RBRACE          reduce using rule 216 (PostfixExpression -> Primary .)
    COLON           reduce using rule 216 (PostfixExpression -> Primary .)
    DOT             shift and go to state 288


state 250

    (217) PostfixExpression -> Name .
    (30) QualifiedName -> Name . DOT IDENTIFIER
    (210) MethodInvocation -> Name . LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> Name . LPAREN RPAREN
    (214) ArrayAccess -> Name . LBRACK Expression RBRACK

    INC             reduce using rule 217 (PostfixExpression -> Name .)
    DEC             reduce using rule 217 (PostfixExpression -> Name .)
    SEMI            reduce using rule 217 (PostfixExpression -> Name .)
    MUL             reduce using rule 217 (PostfixExpression -> Name .)
    DIV             reduce using rule 217 (PostfixExpression -> Name .)
    MOD             reduce using rule 217 (PostfixExpression -> Name .)
    ADD             reduce using rule 217 (PostfixExpression -> Name .)
    SUB             reduce using rule 217 (PostfixExpression -> Name .)
    LSHIFT          reduce using rule 217 (PostfixExpression -> Name .)
    RSHIFT          reduce using rule 217 (PostfixExpression -> Name .)
    URSHIFT         reduce using rule 217 (PostfixExpression -> Name .)
    LT              reduce using rule 217 (PostfixExpression -> Name .)
    GT              reduce using rule 217 (PostfixExpression -> Name .)
    LE              reduce using rule 217 (PostfixExpression -> Name .)
    GE              reduce using rule 217 (PostfixExpression -> Name .)
    EQUAL           reduce using rule 217 (PostfixExpression -> Name .)
    NOTEQUAL        reduce using rule 217 (PostfixExpression -> Name .)
    BITAND          reduce using rule 217 (PostfixExpression -> Name .)
    CARET           reduce using rule 217 (PostfixExpression -> Name .)
    BITOR           reduce using rule 217 (PostfixExpression -> Name .)
    AND             reduce using rule 217 (PostfixExpression -> Name .)
    QUESTION        reduce using rule 217 (PostfixExpression -> Name .)
    OR              reduce using rule 217 (PostfixExpression -> Name .)
    RPAREN          reduce using rule 217 (PostfixExpression -> Name .)
    COMMA           reduce using rule 217 (PostfixExpression -> Name .)
    RBRACK          reduce using rule 217 (PostfixExpression -> Name .)
    RBRACE          reduce using rule 217 (PostfixExpression -> Name .)
    COLON           reduce using rule 217 (PostfixExpression -> Name .)
    DOT             shift and go to state 101
    LPAREN          shift and go to state 233
    LBRACK          shift and go to state 286


state 251

    (233) CastExpression -> LPAREN . PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> LPAREN . PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> LPAREN . Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> LPAREN . Name Dims RPAREN UnaryExpressionNotAddSub
    (190) PrimaryNoNewArray -> LPAREN . Expression RPAREN
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (286) Expression -> . AssignmentExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    BOOLEAN         shift and go to state 63
    IDENTIFIER      shift and go to state 61
    BYTE            shift and go to state 69
    SHORT           shift and go to state 70
    INT             shift and go to state 71
    LONG            shift and go to state 72
    CHAR            shift and go to state 73
    FLOAT           shift and go to state 74
    DOUBLE          shift and go to state 75
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    PrimitiveType                  shift and go to state 280
    UnaryExpression                shift and go to state 212
    Expression                     shift and go to state 322
    UnaryExpressionNotAddSub       shift and go to state 215
    Name                           shift and go to state 281
    NumericType                    shift and go to state 62
    AssignmentExpression           shift and go to state 191
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    IntegralType                   shift and go to state 66
    FloatingPointType              shift and go to state 67
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 252

    (192) PrimaryNoNewArray -> FieldAccess .

    LBRACK          reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    DOT             reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    INC             reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    DEC             reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    SEMI            reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    MUL             reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    DIV             reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    MOD             reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    ADD             reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    SUB             reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    LSHIFT          reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    RSHIFT          reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    URSHIFT         reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    LT              reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    GT              reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    LE              reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    GE              reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    EQUAL           reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    NOTEQUAL        reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    BITAND          reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    CARET           reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    BITOR           reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    AND             reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    QUESTION        reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    OR              reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    RPAREN          reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    COMMA           reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    RBRACK          reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    RBRACE          reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)
    COLON           reduce using rule 192 (PrimaryNoNewArray -> FieldAccess .)


state 253

    (194) PrimaryNoNewArray -> ArrayAccess .

    LBRACK          reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    DOT             reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    INC             reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    DEC             reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    SEMI            reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    MUL             reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    DIV             reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    MOD             reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    ADD             reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    SUB             reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    LSHIFT          reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    RSHIFT          reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    URSHIFT         reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    LT              reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    GT              reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    LE              reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    GE              reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    EQUAL           reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    NOTEQUAL        reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    BITAND          reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    CARET           reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    BITOR           reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    AND             reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    QUESTION        reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    OR              reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    RPAREN          reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    COMMA           reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    RBRACK          reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    RBRACE          reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)
    COLON           reduce using rule 194 (PrimaryNoNewArray -> ArrayAccess .)


state 254

    (228) PreDecrementExpression -> DEC UnaryExpression .

    SEMI            reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    MUL             reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    DIV             reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    MOD             reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    ADD             reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    SUB             reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    LSHIFT          reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    RSHIFT          reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    URSHIFT         reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    LT              reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    GT              reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    LE              reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    GE              reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    EQUAL           reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    NOTEQUAL        reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    BITAND          reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    CARET           reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    BITOR           reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    AND             reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    QUESTION        reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    OR              reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    RPAREN          reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    COMMA           reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    RBRACK          reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    RBRACE          reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)
    COLON           reduce using rule 228 (PreDecrementExpression -> DEC UnaryExpression .)


state 255

    (220) PostIncrementExpression -> PostfixExpression INC .

    SEMI            reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    INC             reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    DEC             reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    MUL             reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    DIV             reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    MOD             reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    ADD             reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    SUB             reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    LSHIFT          reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    RSHIFT          reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    URSHIFT         reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    LT              reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    GT              reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    LE              reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    GE              reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    EQUAL           reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    NOTEQUAL        reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    BITAND          reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    CARET           reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    BITOR           reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    AND             reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    QUESTION        reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    OR              reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    RPAREN          reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    COMMA           reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    RBRACK          reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    RBRACE          reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)
    COLON           reduce using rule 220 (PostIncrementExpression -> PostfixExpression INC .)


state 256

    (221) PostDecrementExpression -> PostfixExpression DEC .

    SEMI            reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    INC             reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    DEC             reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    MUL             reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    DIV             reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    MOD             reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    ADD             reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    SUB             reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    LSHIFT          reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    RSHIFT          reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    URSHIFT         reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    LT              reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    GT              reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    LE              reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    GE              reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    EQUAL           reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    NOTEQUAL        reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    BITAND          reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    CARET           reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    BITOR           reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    AND             reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    QUESTION        reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    OR              reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    RPAREN          reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    COMMA           reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    RBRACK          reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    RBRACE          reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)
    COLON           reduce using rule 221 (PostDecrementExpression -> PostfixExpression DEC .)


state 257

    (212) MethodInvocation -> Primary DOT . IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> Primary DOT . IDENTIFIER LPAREN RPAREN
    (208) FieldAccess -> Primary DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 323


state 258

    (195) ClassInstanceCreationExpression -> NEW ClassType . LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> NEW ClassType . LPAREN ArgumentList RPAREN
    (201) ArrayCreationExpression -> NEW ClassType . DimExprs Dims
    (202) ArrayCreationExpression -> NEW ClassType . DimExprs
    (203) DimExprs -> . DimExpr
    (204) DimExprs -> . DimExprs DimExpr
    (205) DimExpr -> . LBRACK Expression RBRACK

    LPAREN          shift and go to state 324
    LBRACK          shift and go to state 327

    DimExprs                       shift and go to state 325
    DimExpr                        shift and go to state 326

state 259

    (199) ArrayCreationExpression -> NEW PrimitiveType . DimExprs Dims
    (200) ArrayCreationExpression -> NEW PrimitiveType . DimExprs
    (203) DimExprs -> . DimExpr
    (204) DimExprs -> . DimExprs DimExpr
    (205) DimExpr -> . LBRACK Expression RBRACK

    LBRACK          shift and go to state 327

    DimExprs                       shift and go to state 328
    DimExpr                        shift and go to state 326

state 260

    (24) ClassType -> Name .
    (30) QualifiedName -> Name . DOT IDENTIFIER

    LPAREN          reduce using rule 24 (ClassType -> Name .)
    LBRACK          reduce using rule 24 (ClassType -> Name .)
    DOT             shift and go to state 101


state 261

    (215) ArrayAccess -> PrimaryNoNewArray LBRACK . Expression RBRACK
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    PrimaryNoNewArray              shift and go to state 199
    Expression                     shift and go to state 329
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 262

    (209) FieldAccess -> SUPER DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 330


state 263

    (89) StaticInitializer -> begin_scope STATIC Block end_scope .

    RBRACE          reduce using rule 89 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    VOID            reduce using rule 89 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    STATIC          reduce using rule 89 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    FINAL           reduce using rule 89 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    PRIVATE         reduce using rule 89 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    PROTECTED       reduce using rule 89 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    PUBLIC          reduce using rule 89 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    IDENTIFIER      reduce using rule 89 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    BOOLEAN         reduce using rule 89 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    BYTE            reduce using rule 89 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    SHORT           reduce using rule 89 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    INT             reduce using rule 89 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    LONG            reduce using rule 89 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    CHAR            reduce using rule 89 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    FLOAT           reduce using rule 89 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    DOUBLE          reduce using rule 89 (StaticInitializer -> begin_scope STATIC Block end_scope .)


state 264

    (70) VariableDeclarators -> VariableDeclarators COMMA VariableDeclarator .

    SEMI            reduce using rule 70 (VariableDeclarators -> VariableDeclarators COMMA VariableDeclarator .)
    COMMA           reduce using rule 70 (VariableDeclarators -> VariableDeclarators COMMA VariableDeclarator .)


state 265

    (82) MethodDeclarator -> IDENTIFIER LPAREN decl_mark . RPAREN
    (83) MethodDeclarator -> IDENTIFIER LPAREN decl_mark . FormalParameterList RPAREN
    (84) FormalParameterList -> . FormalParameter
    (85) FormalParameterList -> . FormalParameterList COMMA FormalParameter
    (86) FormalParameter -> . Type VariableDeclaratorId
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER

    RPAREN          shift and go to state 331
    BOOLEAN         shift and go to state 63
    BYTE            shift and go to state 69
    SHORT           shift and go to state 70
    INT             shift and go to state 71
    LONG            shift and go to state 72
    CHAR            shift and go to state 73
    FLOAT           shift and go to state 74
    DOUBLE          shift and go to state 75
    IDENTIFIER      shift and go to state 61

    FormalParameterList            shift and go to state 332
    FormalParameter                shift and go to state 272
    Type                           shift and go to state 273
    PrimitiveType                  shift and go to state 58
    ReferenceType                  shift and go to state 59
    NumericType                    shift and go to state 62
    ArrayType                      shift and go to state 64
    ClassType                      shift and go to state 65
    IntegralType                   shift and go to state 66
    FloatingPointType              shift and go to state 67
    Name                           shift and go to state 68
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76

state 266

    (72) VariableDeclarator -> VariableDeclaratorId ASSIGN VariableInitializer .

    SEMI            reduce using rule 72 (VariableDeclarator -> VariableDeclaratorId ASSIGN VariableInitializer .)
    COMMA           reduce using rule 72 (VariableDeclarator -> VariableDeclaratorId ASSIGN VariableInitializer .)


state 267

    (75) VariableInitializer -> Expression .

    SEMI            reduce using rule 75 (VariableInitializer -> Expression .)
    COMMA           reduce using rule 75 (VariableInitializer -> Expression .)
    RBRACE          reduce using rule 75 (VariableInitializer -> Expression .)


state 268

    (76) VariableInitializer -> ArrayInitializer .

    SEMI            reduce using rule 76 (VariableInitializer -> ArrayInitializer .)
    COMMA           reduce using rule 76 (VariableInitializer -> ArrayInitializer .)
    RBRACE          reduce using rule 76 (VariableInitializer -> ArrayInitializer .)


state 269

    (99) ArrayInitializer -> LBRACE . VariableInitializers RBRACE
    (100) ArrayInitializer -> LBRACE . RBRACE
    (101) VariableInitializers -> . VariableInitializer
    (102) VariableInitializers -> . VariableInitializers COMMA VariableInitializer
    (75) VariableInitializer -> . Expression
    (76) VariableInitializer -> . ArrayInitializer
    (286) Expression -> . AssignmentExpression
    (99) ArrayInitializer -> . LBRACE VariableInitializers RBRACE
    (100) ArrayInitializer -> . LBRACE RBRACE
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    RBRACE          shift and go to state 334
    LBRACE          shift and go to state 269
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    VariableInitializers           shift and go to state 333
    VariableInitializer            shift and go to state 335
    Expression                     shift and go to state 267
    ArrayInitializer               shift and go to state 268
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 270

    (104) Block -> LBRACE BlockStatements RBRACE .

    RBRACE          reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    VOID            reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    STATIC          reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    FINAL           reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    PRIVATE         reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    PROTECTED       reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    PUBLIC          reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    IDENTIFIER      reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    BOOLEAN         reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    BYTE            reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    SHORT           reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    INT             reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    LONG            reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    CHAR            reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    FLOAT           reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    DOUBLE          reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    IF              reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    WHILE           reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    FOR             reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    LBRACE          reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    SEMI            reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    SWITCH          reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    DO              reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    BREAK           reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    CONTINUE        reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    RETURN          reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    INC             reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    DEC             reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    NEW             reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    SUPER           reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    THIS            reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    LPAREN          reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    DECIMAL_LITERAL reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    HEX_LITERAL     reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    BINARY_LITERAL  reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    FLOAT_LITERAL   reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    BOOL_LITERAL    reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    CHAR_LITERAL    reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    STRING_LITERAL  reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    CASE            reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    DEFAULT         reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)
    ELSE            reduce using rule 104 (Block -> LBRACE BlockStatements RBRACE .)


state 271

    (92) ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList . RPAREN
    (85) FormalParameterList -> FormalParameterList . COMMA FormalParameter

    RPAREN          shift and go to state 336
    COMMA           shift and go to state 337


state 272

    (84) FormalParameterList -> FormalParameter .

    RPAREN          reduce using rule 84 (FormalParameterList -> FormalParameter .)
    COMMA           reduce using rule 84 (FormalParameterList -> FormalParameter .)


state 273

    (86) FormalParameter -> Type . VariableDeclaratorId
    (73) VariableDeclaratorId -> . IDENTIFIER
    (74) VariableDeclaratorId -> . IDENTIFIER Dims

    IDENTIFIER      shift and go to state 186

    VariableDeclaratorId           shift and go to state 338

state 274

    (93) ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .

    LBRACE          reduce using rule 93 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    RBRACE          reduce using rule 93 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    VOID            reduce using rule 93 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    STATIC          reduce using rule 93 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    FINAL           reduce using rule 93 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    PRIVATE         reduce using rule 93 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    PROTECTED       reduce using rule 93 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    PUBLIC          reduce using rule 93 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    IDENTIFIER      reduce using rule 93 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    BOOLEAN         reduce using rule 93 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    BYTE            reduce using rule 93 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    SHORT           reduce using rule 93 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    INT             reduce using rule 93 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    LONG            reduce using rule 93 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    CHAR            reduce using rule 93 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    FLOAT           reduce using rule 93 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    DOUBLE          reduce using rule 93 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)


state 275

    (207) Dims -> Dims LBRACK RBRACK .

    LBRACK          reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    IDENTIFIER      reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    ASSIGN          reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    SEMI            reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    COMMA           reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    RPAREN          reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    DOT             reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    INC             reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    DEC             reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    MUL             reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    DIV             reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    MOD             reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    ADD             reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    SUB             reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    LSHIFT          reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    RSHIFT          reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    URSHIFT         reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    LT              reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    GT              reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    LE              reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    GE              reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    EQUAL           reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    NOTEQUAL        reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    BITAND          reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    CARET           reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    BITOR           reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    AND             reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    QUESTION        reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    OR              reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    RBRACK          reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    RBRACE          reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)
    COLON           reduce using rule 207 (Dims -> Dims LBRACK RBRACK .)


state 276

    (131) LabeledStatement -> IDENTIFIER COLON Statement .

    RBRACE          reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    IDENTIFIER      reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    IF              reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    WHILE           reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    FOR             reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    LBRACE          reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    SEMI            reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    SWITCH          reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    DO              reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    BREAK           reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    CONTINUE        reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    RETURN          reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    BOOLEAN         reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    INC             reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    DEC             reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    NEW             reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    BYTE            reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    SHORT           reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    INT             reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    LONG            reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    CHAR            reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    FLOAT           reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    DOUBLE          reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    SUPER           reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    THIS            reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    LPAREN          reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    DECIMAL_LITERAL reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    HEX_LITERAL     reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    BINARY_LITERAL  reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    FLOAT_LITERAL   reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    BOOL_LITERAL    reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    CHAR_LITERAL    reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    STRING_LITERAL  reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    CASE            reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)
    DEFAULT         reduce using rule 131 (LabeledStatement -> IDENTIFIER COLON Statement .)


state 277

    (210) MethodInvocation -> Name . LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> Name . LPAREN RPAREN
    (271) LeftHandSide -> Name .
    (217) PostfixExpression -> Name .
    (214) ArrayAccess -> Name . LBRACK Expression RBRACK
    (30) QualifiedName -> Name . DOT IDENTIFIER

    LPAREN          shift and go to state 233
    ASSIGN          reduce using rule 271 (LeftHandSide -> Name .)
    ADD_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    SUB_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    MUL_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    DIV_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    AND_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    OR_ASSIGN       reduce using rule 271 (LeftHandSide -> Name .)
    XOR_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    MOD_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    LSHIFT_ASSIGN   reduce using rule 271 (LeftHandSide -> Name .)
    RSHIFT_ASSIGN   reduce using rule 271 (LeftHandSide -> Name .)
    URSHIFT_ASSIGN  reduce using rule 271 (LeftHandSide -> Name .)
    INC             reduce using rule 217 (PostfixExpression -> Name .)
    DEC             reduce using rule 217 (PostfixExpression -> Name .)
    LBRACK          shift and go to state 286
    DOT             shift and go to state 101


state 278

    (141) IfThenStatement -> IF begin_scope LPAREN . Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> IF begin_scope LPAREN . Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    Expression                     shift and go to state 339
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 279

    (190) PrimaryNoNewArray -> LPAREN Expression . RPAREN
    (235) CastExpression -> LPAREN Expression . RPAREN UnaryExpressionNotAddSub

    RPAREN          shift and go to state 340


state 280

    (233) CastExpression -> LPAREN PrimitiveType . Dims RPAREN UnaryExpression
    (234) CastExpression -> LPAREN PrimitiveType . RPAREN UnaryExpression
    (206) Dims -> . LBRACK RBRACK
    (207) Dims -> . Dims LBRACK RBRACK

    RPAREN          shift and go to state 342
    LBRACK          shift and go to state 97

    Dims                           shift and go to state 341

state 281

    (236) CastExpression -> LPAREN Name . Dims RPAREN UnaryExpressionNotAddSub
    (30) QualifiedName -> Name . DOT IDENTIFIER
    (271) LeftHandSide -> Name .
    (214) ArrayAccess -> Name . LBRACK Expression RBRACK
    (210) MethodInvocation -> Name . LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> Name . LPAREN RPAREN
    (217) PostfixExpression -> Name .
    (206) Dims -> . LBRACK RBRACK
    (207) Dims -> . Dims LBRACK RBRACK

    DOT             shift and go to state 101
    ASSIGN          reduce using rule 271 (LeftHandSide -> Name .)
    ADD_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    SUB_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    MUL_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    DIV_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    AND_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    OR_ASSIGN       reduce using rule 271 (LeftHandSide -> Name .)
    XOR_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    MOD_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    LSHIFT_ASSIGN   reduce using rule 271 (LeftHandSide -> Name .)
    RSHIFT_ASSIGN   reduce using rule 271 (LeftHandSide -> Name .)
    URSHIFT_ASSIGN  reduce using rule 271 (LeftHandSide -> Name .)
    LBRACK          shift and go to state 234
    LPAREN          shift and go to state 233
    INC             reduce using rule 217 (PostfixExpression -> Name .)
    DEC             reduce using rule 217 (PostfixExpression -> Name .)
    MUL             reduce using rule 217 (PostfixExpression -> Name .)
    DIV             reduce using rule 217 (PostfixExpression -> Name .)
    MOD             reduce using rule 217 (PostfixExpression -> Name .)
    ADD             reduce using rule 217 (PostfixExpression -> Name .)
    SUB             reduce using rule 217 (PostfixExpression -> Name .)
    LSHIFT          reduce using rule 217 (PostfixExpression -> Name .)
    RSHIFT          reduce using rule 217 (PostfixExpression -> Name .)
    URSHIFT         reduce using rule 217 (PostfixExpression -> Name .)
    LT              reduce using rule 217 (PostfixExpression -> Name .)
    GT              reduce using rule 217 (PostfixExpression -> Name .)
    LE              reduce using rule 217 (PostfixExpression -> Name .)
    GE              reduce using rule 217 (PostfixExpression -> Name .)
    EQUAL           reduce using rule 217 (PostfixExpression -> Name .)
    NOTEQUAL        reduce using rule 217 (PostfixExpression -> Name .)
    BITAND          reduce using rule 217 (PostfixExpression -> Name .)
    CARET           reduce using rule 217 (PostfixExpression -> Name .)
    BITOR           reduce using rule 217 (PostfixExpression -> Name .)
    AND             reduce using rule 217 (PostfixExpression -> Name .)
    QUESTION        reduce using rule 217 (PostfixExpression -> Name .)
    OR              reduce using rule 217 (PostfixExpression -> Name .)
    RPAREN          reduce using rule 217 (PostfixExpression -> Name .)

    Dims                           shift and go to state 343

state 282

    (190) PrimaryNoNewArray -> LPAREN Expression RPAREN .

    LBRACK          reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    DOT             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    INC             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    DEC             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)


state 283

    (267) ConditionalExpression -> ConditionalOrExpression QUESTION . Expression COLON ConditionalExpression
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    ConditionalOrExpression        shift and go to state 194
    Expression                     shift and go to state 344
    ConditionalExpression          shift and go to state 192
    AssignmentExpression           shift and go to state 191
    Assignment                     shift and go to state 193
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 284

    (265) ConditionalOrExpression -> ConditionalOrExpression OR . ConditionalAndExpression
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    ConditionalAndExpression       shift and go to state 345
    InclusiveOrExpression          shift and go to state 197
    ExclusiveOrExpression          shift and go to state 200
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 285

    (263) ConditionalAndExpression -> ConditionalAndExpression AND . InclusiveOrExpression
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    InclusiveOrExpression          shift and go to state 346
    ExclusiveOrExpression          shift and go to state 200
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 286

    (214) ArrayAccess -> Name LBRACK . Expression RBRACK
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    Name                           shift and go to state 196
    Expression                     shift and go to state 320
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 287

    (261) InclusiveOrExpression -> InclusiveOrExpression BITOR . ExclusiveOrExpression
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    ExclusiveOrExpression          shift and go to state 347
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 288

    (208) FieldAccess -> Primary DOT . IDENTIFIER
    (212) MethodInvocation -> Primary DOT . IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> Primary DOT . IDENTIFIER LPAREN RPAREN

    IDENTIFIER      shift and go to state 348


state 289

    (259) ExclusiveOrExpression -> ExclusiveOrExpression CARET . AndExpression
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    AndExpression                  shift and go to state 349
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 290

    (257) AndExpression -> AndExpression BITAND . EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    EqualityExpression             shift and go to state 350
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 291

    (201) ArrayCreationExpression -> NEW ClassType . DimExprs Dims
    (202) ArrayCreationExpression -> NEW ClassType . DimExprs
    (195) ClassInstanceCreationExpression -> NEW ClassType . LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> NEW ClassType . LPAREN ArgumentList RPAREN
    (203) DimExprs -> . DimExpr
    (204) DimExprs -> . DimExprs DimExpr
    (205) DimExpr -> . LBRACK Expression RBRACK

    LPAREN          shift and go to state 324
    LBRACK          shift and go to state 327

    DimExprs                       shift and go to state 325
    DimExpr                        shift and go to state 326

state 292

    (254) EqualityExpression -> EqualityExpression EQUAL . RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    RelationalExpression           shift and go to state 351
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 293

    (255) EqualityExpression -> EqualityExpression NOTEQUAL . RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    RelationalExpression           shift and go to state 352
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 294

    (249) RelationalExpression -> RelationalExpression LT . ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    ShiftExpression                shift and go to state 353
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 295

    (250) RelationalExpression -> RelationalExpression GT . ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    ShiftExpression                shift and go to state 354
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 296

    (251) RelationalExpression -> RelationalExpression LE . ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    ShiftExpression                shift and go to state 355
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 297

    (252) RelationalExpression -> RelationalExpression GE . ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    ShiftExpression                shift and go to state 356
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 298

    (245) ShiftExpression -> ShiftExpression LSHIFT . AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    AdditiveExpression             shift and go to state 357
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 299

    (246) ShiftExpression -> ShiftExpression RSHIFT . AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    AdditiveExpression             shift and go to state 358
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 300

    (247) ShiftExpression -> ShiftExpression URSHIFT . AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    AdditiveExpression             shift and go to state 359
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 301

    (242) AdditiveExpression -> AdditiveExpression ADD . MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    MultiplicativeExpression       shift and go to state 360
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 302

    (243) AdditiveExpression -> AdditiveExpression SUB . MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    MultiplicativeExpression       shift and go to state 361
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 303

    (238) MultiplicativeExpression -> MultiplicativeExpression MUL . UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    UnaryExpression                shift and go to state 362
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 304

    (239) MultiplicativeExpression -> MultiplicativeExpression DIV . UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    UnaryExpression                shift and go to state 363
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 305

    (240) MultiplicativeExpression -> MultiplicativeExpression MOD . UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    UnaryExpression                shift and go to state 364
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 306

    (224) UnaryExpression -> ADD UnaryExpression .

    MUL             reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    DIV             reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    MOD             reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    ADD             reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    SUB             reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    LSHIFT          reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    RSHIFT          reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    URSHIFT         reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    LT              reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    GT              reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    LE              reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    GE              reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    EQUAL           reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    NOTEQUAL        reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    BITAND          reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    CARET           reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    BITOR           reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    AND             reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    QUESTION        reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    OR              reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    RPAREN          reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    SEMI            reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    COMMA           reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    RBRACK          reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    RBRACE          reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)
    COLON           reduce using rule 224 (UnaryExpression -> ADD UnaryExpression .)


state 307

    (225) UnaryExpression -> SUB UnaryExpression .

    MUL             reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    DIV             reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    MOD             reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    ADD             reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    SUB             reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    LSHIFT          reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    RSHIFT          reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    URSHIFT         reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    LT              reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    GT              reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    LE              reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    GE              reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    EQUAL           reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    NOTEQUAL        reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    BITAND          reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    CARET           reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    BITOR           reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    AND             reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    QUESTION        reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    OR              reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    RPAREN          reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    SEMI            reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    COMMA           reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    RBRACK          reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    RBRACE          reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)
    COLON           reduce using rule 225 (UnaryExpression -> SUB UnaryExpression .)


state 308

    (230) UnaryExpressionNotAddSub -> BANG UnaryExpression .

    MUL             reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    DIV             reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    MOD             reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    ADD             reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    SUB             reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    LSHIFT          reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    RSHIFT          reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    URSHIFT         reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    LT              reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    GT              reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    LE              reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    GE              reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    EQUAL           reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    NOTEQUAL        reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    BITAND          reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    CARET           reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    BITOR           reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    AND             reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    QUESTION        reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    OR              reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    RPAREN          reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    SEMI            reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    COMMA           reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    RBRACK          reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    RBRACE          reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    COLON           reduce using rule 230 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)


state 309

    (231) UnaryExpressionNotAddSub -> TILDE UnaryExpression .

    MUL             reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    DIV             reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    MOD             reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    ADD             reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    SUB             reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    LSHIFT          reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    RSHIFT          reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    URSHIFT         reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    LT              reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    GT              reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    LE              reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    GE              reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    EQUAL           reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    NOTEQUAL        reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    BITAND          reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    CARET           reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    BITOR           reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    AND             reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    QUESTION        reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    OR              reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    RPAREN          reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    SEMI            reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    COMMA           reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    RBRACK          reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    RBRACE          reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    COLON           reduce using rule 231 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)


state 310

    (156) WhileStatement -> WHILE begin_scope LPAREN . Expression RPAREN Statement end_scope
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    Expression                     shift and go to state 365
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 311

    (159) ForStatement -> FOR begin_scope LPAREN . ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> FOR begin_scope LPAREN . SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> FOR begin_scope LPAREN . ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> FOR begin_scope LPAREN . ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> FOR begin_scope LPAREN . ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope LPAREN . SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> FOR begin_scope LPAREN . SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> FOR begin_scope LPAREN . SEMI SEMI RPAREN Statement end_scope
    (175) ForInit -> . StatementExpressionList
    (176) ForInit -> . LocalVariableDeclaration
    (178) StatementExpressionList -> . StatementExpression
    (179) StatementExpressionList -> . StatementExpressionList COMMA StatementExpression
    (110) LocalVariableDeclaration -> . Type VariableDeclarators
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    SEMI            shift and go to state 367
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    BOOLEAN         shift and go to state 63
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    BYTE            shift and go to state 69
    SHORT           shift and go to state 70
    INT             shift and go to state 71
    LONG            shift and go to state 72
    CHAR            shift and go to state 73
    FLOAT           shift and go to state 74
    DOUBLE          shift and go to state 75
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    ForInit                        shift and go to state 366
    StatementExpressionList        shift and go to state 368
    LocalVariableDeclaration       shift and go to state 369
    StatementExpression            shift and go to state 370
    Type                           shift and go to state 119
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    PrimitiveType                  shift and go to state 58
    ReferenceType                  shift and go to state 59
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 371
    Primary                        shift and go to state 151
    ClassType                      shift and go to state 65
    NumericType                    shift and go to state 62
    ArrayType                      shift and go to state 64
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    IntegralType                   shift and go to state 66
    FloatingPointType              shift and go to state 67
    Literal                        shift and go to state 159

state 312

    (144) SwitchStatement -> SWITCH LPAREN Expression . RPAREN SwitchBlock

    RPAREN          shift and go to state 372


state 313

    (158) DoStatement -> DO begin_scope Statement . WHILE LPAREN Expression RPAREN end_scope SEMI

    WHILE           shift and go to state 373


state 314

    (180) BreakStatement -> BREAK IDENTIFIER SEMI .

    RBRACE          reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    IDENTIFIER      reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    IF              reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    WHILE           reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    FOR             reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    LBRACE          reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    SEMI            reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    SWITCH          reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    DO              reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    BREAK           reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    CONTINUE        reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    RETURN          reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    BOOLEAN         reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    INC             reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    DEC             reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    NEW             reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    BYTE            reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    SHORT           reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    INT             reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    LONG            reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    CHAR            reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    FLOAT           reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    DOUBLE          reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    SUPER           reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    THIS            reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    LPAREN          reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    DECIMAL_LITERAL reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    HEX_LITERAL     reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    BINARY_LITERAL  reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    FLOAT_LITERAL   reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    BOOL_LITERAL    reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    CHAR_LITERAL    reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    STRING_LITERAL  reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    CASE            reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    DEFAULT         reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    ELSE            reduce using rule 180 (BreakStatement -> BREAK IDENTIFIER SEMI .)


state 315

    (182) ContinueStatement -> CONTINUE IDENTIFIER SEMI .

    RBRACE          reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    IDENTIFIER      reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    IF              reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    WHILE           reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    FOR             reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    LBRACE          reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    SEMI            reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    SWITCH          reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    DO              reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    BREAK           reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    CONTINUE        reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    RETURN          reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    BOOLEAN         reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    INC             reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    DEC             reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    NEW             reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    BYTE            reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    SHORT           reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    INT             reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    LONG            reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    CHAR            reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    FLOAT           reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    DOUBLE          reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    SUPER           reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    THIS            reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    LPAREN          reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    DECIMAL_LITERAL reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    HEX_LITERAL     reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    BINARY_LITERAL  reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    FLOAT_LITERAL   reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    BOOL_LITERAL    reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    CHAR_LITERAL    reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    STRING_LITERAL  reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    CASE            reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    DEFAULT         reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    ELSE            reduce using rule 182 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)


state 316

    (184) ReturnStatement -> RETURN Expression SEMI .

    RBRACE          reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    IDENTIFIER      reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    IF              reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    WHILE           reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    FOR             reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    LBRACE          reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    SEMI            reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    SWITCH          reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    DO              reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    BREAK           reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    CONTINUE        reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    RETURN          reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    BOOLEAN         reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    INC             reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    DEC             reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    NEW             reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    BYTE            reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    SHORT           reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    INT             reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    LONG            reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    CHAR            reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    FLOAT           reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    DOUBLE          reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    SUPER           reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    THIS            reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    LPAREN          reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    DECIMAL_LITERAL reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    HEX_LITERAL     reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    BINARY_LITERAL  reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    FLOAT_LITERAL   reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    BOOL_LITERAL    reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    CHAR_LITERAL    reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    STRING_LITERAL  reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    CASE            reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    DEFAULT         reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)
    ELSE            reduce using rule 184 (ReturnStatement -> RETURN Expression SEMI .)


state 317

    (210) MethodInvocation -> Name LPAREN ArgumentList . RPAREN
    (198) ArgumentList -> ArgumentList . COMMA Expression

    RPAREN          shift and go to state 374
    COMMA           shift and go to state 375


state 318

    (211) MethodInvocation -> Name LPAREN RPAREN .

    SEMI            reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    LBRACK          reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    DOT             reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    INC             reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    DEC             reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    MUL             reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    DIV             reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    MOD             reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    ADD             reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    SUB             reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    LSHIFT          reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    RSHIFT          reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    URSHIFT         reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    LT              reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    GT              reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    LE              reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    GE              reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    EQUAL           reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    BITAND          reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    CARET           reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    BITOR           reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    AND             reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    QUESTION        reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    OR              reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    RPAREN          reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    COMMA           reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    RBRACK          reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    RBRACE          reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)
    COLON           reduce using rule 211 (MethodInvocation -> Name LPAREN RPAREN .)


state 319

    (197) ArgumentList -> Expression .

    RPAREN          reduce using rule 197 (ArgumentList -> Expression .)
    COMMA           reduce using rule 197 (ArgumentList -> Expression .)


state 320

    (214) ArrayAccess -> Name LBRACK Expression . RBRACK

    RBRACK          shift and go to state 376


state 321

    (270) Assignment -> LeftHandSide AssignmentOperator AssignmentExpression .

    SEMI            reduce using rule 270 (Assignment -> LeftHandSide AssignmentOperator AssignmentExpression .)
    RPAREN          reduce using rule 270 (Assignment -> LeftHandSide AssignmentOperator AssignmentExpression .)
    COMMA           reduce using rule 270 (Assignment -> LeftHandSide AssignmentOperator AssignmentExpression .)
    RBRACK          reduce using rule 270 (Assignment -> LeftHandSide AssignmentOperator AssignmentExpression .)
    RBRACE          reduce using rule 270 (Assignment -> LeftHandSide AssignmentOperator AssignmentExpression .)
    COLON           reduce using rule 270 (Assignment -> LeftHandSide AssignmentOperator AssignmentExpression .)


state 322

    (235) CastExpression -> LPAREN Expression . RPAREN UnaryExpressionNotAddSub
    (190) PrimaryNoNewArray -> LPAREN Expression . RPAREN

    RPAREN          shift and go to state 377


state 323

    (212) MethodInvocation -> Primary DOT IDENTIFIER . LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> Primary DOT IDENTIFIER . LPAREN RPAREN
    (208) FieldAccess -> Primary DOT IDENTIFIER .

    LPAREN          shift and go to state 378
    ASSIGN          reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    ADD_ASSIGN      reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    SUB_ASSIGN      reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    MUL_ASSIGN      reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    AND_ASSIGN      reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    OR_ASSIGN       reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    URSHIFT_ASSIGN  reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    LBRACK          reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    DOT             reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    INC             reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    DEC             reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)


state 324

    (195) ClassInstanceCreationExpression -> NEW ClassType LPAREN . RPAREN
    (196) ClassInstanceCreationExpression -> NEW ClassType LPAREN . ArgumentList RPAREN
    (197) ArgumentList -> . Expression
    (198) ArgumentList -> . ArgumentList COMMA Expression
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    RPAREN          shift and go to state 379
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    ArgumentList                   shift and go to state 380
    Expression                     shift and go to state 319
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 325

    (201) ArrayCreationExpression -> NEW ClassType DimExprs . Dims
    (202) ArrayCreationExpression -> NEW ClassType DimExprs .
    (204) DimExprs -> DimExprs . DimExpr
    (206) Dims -> . LBRACK RBRACK
    (207) Dims -> . Dims LBRACK RBRACK
    (205) DimExpr -> . LBRACK Expression RBRACK

    DOT             reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    INC             reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    DEC             reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    MUL             reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    DIV             reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    MOD             reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    ADD             reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    SUB             reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    LSHIFT          reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    RSHIFT          reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    URSHIFT         reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    LT              reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    GT              reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    LE              reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    GE              reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    EQUAL           reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    NOTEQUAL        reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    BITAND          reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    CARET           reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    BITOR           reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    AND             reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    QUESTION        reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    OR              reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    RPAREN          reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    SEMI            reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    COMMA           reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    RBRACK          reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    RBRACE          reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    COLON           reduce using rule 202 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    LBRACK          shift and go to state 383

    Dims                           shift and go to state 381
    DimExpr                        shift and go to state 382

state 326

    (203) DimExprs -> DimExpr .

    LBRACK          reduce using rule 203 (DimExprs -> DimExpr .)
    DOT             reduce using rule 203 (DimExprs -> DimExpr .)
    INC             reduce using rule 203 (DimExprs -> DimExpr .)
    DEC             reduce using rule 203 (DimExprs -> DimExpr .)
    MUL             reduce using rule 203 (DimExprs -> DimExpr .)
    DIV             reduce using rule 203 (DimExprs -> DimExpr .)
    MOD             reduce using rule 203 (DimExprs -> DimExpr .)
    ADD             reduce using rule 203 (DimExprs -> DimExpr .)
    SUB             reduce using rule 203 (DimExprs -> DimExpr .)
    LSHIFT          reduce using rule 203 (DimExprs -> DimExpr .)
    RSHIFT          reduce using rule 203 (DimExprs -> DimExpr .)
    URSHIFT         reduce using rule 203 (DimExprs -> DimExpr .)
    LT              reduce using rule 203 (DimExprs -> DimExpr .)
    GT              reduce using rule 203 (DimExprs -> DimExpr .)
    LE              reduce using rule 203 (DimExprs -> DimExpr .)
    GE              reduce using rule 203 (DimExprs -> DimExpr .)
    EQUAL           reduce using rule 203 (DimExprs -> DimExpr .)
    NOTEQUAL        reduce using rule 203 (DimExprs -> DimExpr .)
    BITAND          reduce using rule 203 (DimExprs -> DimExpr .)
    CARET           reduce using rule 203 (DimExprs -> DimExpr .)
    BITOR           reduce using rule 203 (DimExprs -> DimExpr .)
    AND             reduce using rule 203 (DimExprs -> DimExpr .)
    QUESTION        reduce using rule 203 (DimExprs -> DimExpr .)
    OR              reduce using rule 203 (DimExprs -> DimExpr .)
    RPAREN          reduce using rule 203 (DimExprs -> DimExpr .)
    SEMI            reduce using rule 203 (DimExprs -> DimExpr .)
    COMMA           reduce using rule 203 (DimExprs -> DimExpr .)
    RBRACK          reduce using rule 203 (DimExprs -> DimExpr .)
    RBRACE          reduce using rule 203 (DimExprs -> DimExpr .)
    COLON           reduce using rule 203 (DimExprs -> DimExpr .)


state 327

    (205) DimExpr -> LBRACK . Expression RBRACK
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    Expression                     shift and go to state 384
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 328

    (199) ArrayCreationExpression -> NEW PrimitiveType DimExprs . Dims
    (200) ArrayCreationExpression -> NEW PrimitiveType DimExprs .
    (204) DimExprs -> DimExprs . DimExpr
    (206) Dims -> . LBRACK RBRACK
    (207) Dims -> . Dims LBRACK RBRACK
    (205) DimExpr -> . LBRACK Expression RBRACK

    DOT             reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    INC             reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    DEC             reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    MUL             reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    DIV             reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    MOD             reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    ADD             reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    SUB             reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    LSHIFT          reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    RSHIFT          reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    URSHIFT         reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    LT              reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    GT              reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    LE              reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    GE              reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    EQUAL           reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    NOTEQUAL        reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    BITAND          reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    CARET           reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    BITOR           reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    AND             reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    QUESTION        reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    OR              reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    RPAREN          reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    SEMI            reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    COMMA           reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    RBRACK          reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    RBRACE          reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    COLON           reduce using rule 200 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    LBRACK          shift and go to state 383

    Dims                           shift and go to state 385
    DimExpr                        shift and go to state 382

state 329

    (215) ArrayAccess -> PrimaryNoNewArray LBRACK Expression . RBRACK

    RBRACK          shift and go to state 386


state 330

    (209) FieldAccess -> SUPER DOT IDENTIFIER .

    ASSIGN          reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    ADD_ASSIGN      reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    SUB_ASSIGN      reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    MUL_ASSIGN      reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    AND_ASSIGN      reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    OR_ASSIGN       reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    URSHIFT_ASSIGN  reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    LBRACK          reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    DOT             reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    INC             reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    DEC             reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    MUL             reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    DIV             reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    MOD             reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    ADD             reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    SUB             reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    LSHIFT          reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    RSHIFT          reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    URSHIFT         reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    LT              reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    GT              reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    LE              reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    GE              reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    EQUAL           reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    NOTEQUAL        reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    BITAND          reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    CARET           reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    BITOR           reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    AND             reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    QUESTION        reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    OR              reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    RPAREN          reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    SEMI            reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    COMMA           reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    RBRACK          reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    RBRACE          reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)
    COLON           reduce using rule 209 (FieldAccess -> SUPER DOT IDENTIFIER .)


state 331

    (82) MethodDeclarator -> IDENTIFIER LPAREN decl_mark RPAREN .

    SEMI            reduce using rule 82 (MethodDeclarator -> IDENTIFIER LPAREN decl_mark RPAREN .)
    LBRACE          reduce using rule 82 (MethodDeclarator -> IDENTIFIER LPAREN decl_mark RPAREN .)


state 332

    (83) MethodDeclarator -> IDENTIFIER LPAREN decl_mark FormalParameterList . RPAREN
    (85) FormalParameterList -> FormalParameterList . COMMA FormalParameter

    RPAREN          shift and go to state 387
    COMMA           shift and go to state 337


state 333

    (99) ArrayInitializer -> LBRACE VariableInitializers . RBRACE
    (102) VariableInitializers -> VariableInitializers . COMMA VariableInitializer

    RBRACE          shift and go to state 388
    COMMA           shift and go to state 389


state 334

    (100) ArrayInitializer -> LBRACE RBRACE .

    SEMI            reduce using rule 100 (ArrayInitializer -> LBRACE RBRACE .)
    COMMA           reduce using rule 100 (ArrayInitializer -> LBRACE RBRACE .)
    RBRACE          reduce using rule 100 (ArrayInitializer -> LBRACE RBRACE .)


state 335

    (101) VariableInitializers -> VariableInitializer .

    RBRACE          reduce using rule 101 (VariableInitializers -> VariableInitializer .)
    COMMA           reduce using rule 101 (VariableInitializers -> VariableInitializer .)


state 336

    (92) ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .

    LBRACE          reduce using rule 92 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    RBRACE          reduce using rule 92 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    VOID            reduce using rule 92 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    STATIC          reduce using rule 92 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    FINAL           reduce using rule 92 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    PRIVATE         reduce using rule 92 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    PROTECTED       reduce using rule 92 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    PUBLIC          reduce using rule 92 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    IDENTIFIER      reduce using rule 92 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    BOOLEAN         reduce using rule 92 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    BYTE            reduce using rule 92 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    SHORT           reduce using rule 92 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    INT             reduce using rule 92 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    LONG            reduce using rule 92 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    CHAR            reduce using rule 92 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    FLOAT           reduce using rule 92 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    DOUBLE          reduce using rule 92 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)


state 337

    (85) FormalParameterList -> FormalParameterList COMMA . FormalParameter
    (86) FormalParameter -> . Type VariableDeclaratorId
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER

    BOOLEAN         shift and go to state 63
    BYTE            shift and go to state 69
    SHORT           shift and go to state 70
    INT             shift and go to state 71
    LONG            shift and go to state 72
    CHAR            shift and go to state 73
    FLOAT           shift and go to state 74
    DOUBLE          shift and go to state 75
    IDENTIFIER      shift and go to state 61

    FormalParameter                shift and go to state 390
    Type                           shift and go to state 273
    PrimitiveType                  shift and go to state 58
    ReferenceType                  shift and go to state 59
    NumericType                    shift and go to state 62
    ArrayType                      shift and go to state 64
    ClassType                      shift and go to state 65
    IntegralType                   shift and go to state 66
    FloatingPointType              shift and go to state 67
    Name                           shift and go to state 68
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76

state 338

    (86) FormalParameter -> Type VariableDeclaratorId .

    RPAREN          reduce using rule 86 (FormalParameter -> Type VariableDeclaratorId .)
    COMMA           reduce using rule 86 (FormalParameter -> Type VariableDeclaratorId .)


state 339

    (141) IfThenStatement -> IF begin_scope LPAREN Expression . RPAREN Statement end_scope
    (142) IfThenElseStatement -> IF begin_scope LPAREN Expression . RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope

    RPAREN          shift and go to state 391


state 340

    (190) PrimaryNoNewArray -> LPAREN Expression RPAREN .
    (235) CastExpression -> LPAREN Expression RPAREN . UnaryExpressionNotAddSub
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    LBRACK          reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    DOT             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    INC             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    DEC             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    MUL             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    DIV             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    ADD             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    SUB             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    LSHIFT          reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RSHIFT          reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    URSHIFT         reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    LT              reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    GT              reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    LE              reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    GE              reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    EQUAL           reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    NOTEQUAL        reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    BITAND          reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    CARET           reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    BITOR           reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    AND             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    QUESTION        reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    OR              reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    SEMI            reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RBRACE          reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    UnaryExpressionNotAddSub       shift and go to state 392
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 341

    (233) CastExpression -> LPAREN PrimitiveType Dims . RPAREN UnaryExpression
    (207) Dims -> Dims . LBRACK RBRACK

    RPAREN          shift and go to state 393
    LBRACK          shift and go to state 178


state 342

    (234) CastExpression -> LPAREN PrimitiveType RPAREN . UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    UnaryExpression                shift and go to state 394
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 343

    (236) CastExpression -> LPAREN Name Dims . RPAREN UnaryExpressionNotAddSub
    (207) Dims -> Dims . LBRACK RBRACK

    RPAREN          shift and go to state 395
    LBRACK          shift and go to state 178


state 344

    (267) ConditionalExpression -> ConditionalOrExpression QUESTION Expression . COLON ConditionalExpression

    COLON           shift and go to state 396


state 345

    (265) ConditionalOrExpression -> ConditionalOrExpression OR ConditionalAndExpression .
    (263) ConditionalAndExpression -> ConditionalAndExpression . AND InclusiveOrExpression

    QUESTION        reduce using rule 265 (ConditionalOrExpression -> ConditionalOrExpression OR ConditionalAndExpression .)
    OR              reduce using rule 265 (ConditionalOrExpression -> ConditionalOrExpression OR ConditionalAndExpression .)
    RPAREN          reduce using rule 265 (ConditionalOrExpression -> ConditionalOrExpression OR ConditionalAndExpression .)
    SEMI            reduce using rule 265 (ConditionalOrExpression -> ConditionalOrExpression OR ConditionalAndExpression .)
    COMMA           reduce using rule 265 (ConditionalOrExpression -> ConditionalOrExpression OR ConditionalAndExpression .)
    RBRACK          reduce using rule 265 (ConditionalOrExpression -> ConditionalOrExpression OR ConditionalAndExpression .)
    RBRACE          reduce using rule 265 (ConditionalOrExpression -> ConditionalOrExpression OR ConditionalAndExpression .)
    COLON           reduce using rule 265 (ConditionalOrExpression -> ConditionalOrExpression OR ConditionalAndExpression .)
    AND             shift and go to state 285


state 346

    (263) ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression .
    (261) InclusiveOrExpression -> InclusiveOrExpression . BITOR ExclusiveOrExpression

    AND             reduce using rule 263 (ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression .)
    QUESTION        reduce using rule 263 (ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression .)
    OR              reduce using rule 263 (ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression .)
    RPAREN          reduce using rule 263 (ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression .)
    SEMI            reduce using rule 263 (ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression .)
    COMMA           reduce using rule 263 (ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression .)
    RBRACK          reduce using rule 263 (ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression .)
    RBRACE          reduce using rule 263 (ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression .)
    COLON           reduce using rule 263 (ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression .)
    BITOR           shift and go to state 287


state 347

    (261) InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .
    (259) ExclusiveOrExpression -> ExclusiveOrExpression . CARET AndExpression

    BITOR           reduce using rule 261 (InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .)
    AND             reduce using rule 261 (InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .)
    QUESTION        reduce using rule 261 (InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .)
    OR              reduce using rule 261 (InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .)
    RPAREN          reduce using rule 261 (InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .)
    SEMI            reduce using rule 261 (InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .)
    COMMA           reduce using rule 261 (InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .)
    RBRACK          reduce using rule 261 (InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .)
    RBRACE          reduce using rule 261 (InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .)
    COLON           reduce using rule 261 (InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .)
    CARET           shift and go to state 289


state 348

    (208) FieldAccess -> Primary DOT IDENTIFIER .
    (212) MethodInvocation -> Primary DOT IDENTIFIER . LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> Primary DOT IDENTIFIER . LPAREN RPAREN

    ASSIGN          reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    ADD_ASSIGN      reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    SUB_ASSIGN      reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    MUL_ASSIGN      reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    AND_ASSIGN      reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    OR_ASSIGN       reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    URSHIFT_ASSIGN  reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    LBRACK          reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    DOT             reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    INC             reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    DEC             reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    MUL             reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    DIV             reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    MOD             reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    ADD             reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    SUB             reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    LSHIFT          reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    RSHIFT          reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    URSHIFT         reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    LT              reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    GT              reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    LE              reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    GE              reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    EQUAL           reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    NOTEQUAL        reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    BITAND          reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    CARET           reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    BITOR           reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    AND             reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    QUESTION        reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    OR              reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    RPAREN          reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    SEMI            reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    COMMA           reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    RBRACK          reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    RBRACE          reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    COLON           reduce using rule 208 (FieldAccess -> Primary DOT IDENTIFIER .)
    LPAREN          shift and go to state 378


state 349

    (259) ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .
    (257) AndExpression -> AndExpression . BITAND EqualityExpression

    CARET           reduce using rule 259 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    BITOR           reduce using rule 259 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    AND             reduce using rule 259 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    QUESTION        reduce using rule 259 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    OR              reduce using rule 259 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    RPAREN          reduce using rule 259 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    SEMI            reduce using rule 259 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    COMMA           reduce using rule 259 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    RBRACK          reduce using rule 259 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    RBRACE          reduce using rule 259 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    COLON           reduce using rule 259 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    BITAND          shift and go to state 290


state 350

    (257) AndExpression -> AndExpression BITAND EqualityExpression .
    (254) EqualityExpression -> EqualityExpression . EQUAL RelationalExpression
    (255) EqualityExpression -> EqualityExpression . NOTEQUAL RelationalExpression

    BITAND          reduce using rule 257 (AndExpression -> AndExpression BITAND EqualityExpression .)
    CARET           reduce using rule 257 (AndExpression -> AndExpression BITAND EqualityExpression .)
    BITOR           reduce using rule 257 (AndExpression -> AndExpression BITAND EqualityExpression .)
    AND             reduce using rule 257 (AndExpression -> AndExpression BITAND EqualityExpression .)
    QUESTION        reduce using rule 257 (AndExpression -> AndExpression BITAND EqualityExpression .)
    OR              reduce using rule 257 (AndExpression -> AndExpression BITAND EqualityExpression .)
    RPAREN          reduce using rule 257 (AndExpression -> AndExpression BITAND EqualityExpression .)
    SEMI            reduce using rule 257 (AndExpression -> AndExpression BITAND EqualityExpression .)
    COMMA           reduce using rule 257 (AndExpression -> AndExpression BITAND EqualityExpression .)
    RBRACK          reduce using rule 257 (AndExpression -> AndExpression BITAND EqualityExpression .)
    RBRACE          reduce using rule 257 (AndExpression -> AndExpression BITAND EqualityExpression .)
    COLON           reduce using rule 257 (AndExpression -> AndExpression BITAND EqualityExpression .)
    EQUAL           shift and go to state 292
    NOTEQUAL        shift and go to state 293


state 351

    (254) EqualityExpression -> EqualityExpression EQUAL RelationalExpression .
    (249) RelationalExpression -> RelationalExpression . LT ShiftExpression
    (250) RelationalExpression -> RelationalExpression . GT ShiftExpression
    (251) RelationalExpression -> RelationalExpression . LE ShiftExpression
    (252) RelationalExpression -> RelationalExpression . GE ShiftExpression

    EQUAL           reduce using rule 254 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    NOTEQUAL        reduce using rule 254 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    BITAND          reduce using rule 254 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    CARET           reduce using rule 254 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    BITOR           reduce using rule 254 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    AND             reduce using rule 254 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    QUESTION        reduce using rule 254 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    OR              reduce using rule 254 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    RPAREN          reduce using rule 254 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    SEMI            reduce using rule 254 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    COMMA           reduce using rule 254 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    RBRACK          reduce using rule 254 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    RBRACE          reduce using rule 254 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    COLON           reduce using rule 254 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    LT              shift and go to state 294
    GT              shift and go to state 295
    LE              shift and go to state 296
    GE              shift and go to state 297


state 352

    (255) EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .
    (249) RelationalExpression -> RelationalExpression . LT ShiftExpression
    (250) RelationalExpression -> RelationalExpression . GT ShiftExpression
    (251) RelationalExpression -> RelationalExpression . LE ShiftExpression
    (252) RelationalExpression -> RelationalExpression . GE ShiftExpression

    EQUAL           reduce using rule 255 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    NOTEQUAL        reduce using rule 255 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    BITAND          reduce using rule 255 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    CARET           reduce using rule 255 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    BITOR           reduce using rule 255 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    AND             reduce using rule 255 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    QUESTION        reduce using rule 255 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    OR              reduce using rule 255 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    RPAREN          reduce using rule 255 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    SEMI            reduce using rule 255 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    COMMA           reduce using rule 255 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    RBRACK          reduce using rule 255 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    RBRACE          reduce using rule 255 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    COLON           reduce using rule 255 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    LT              shift and go to state 294
    GT              shift and go to state 295
    LE              shift and go to state 296
    GE              shift and go to state 297


state 353

    (249) RelationalExpression -> RelationalExpression LT ShiftExpression .
    (245) ShiftExpression -> ShiftExpression . LSHIFT AdditiveExpression
    (246) ShiftExpression -> ShiftExpression . RSHIFT AdditiveExpression
    (247) ShiftExpression -> ShiftExpression . URSHIFT AdditiveExpression

    LT              reduce using rule 249 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    GT              reduce using rule 249 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    LE              reduce using rule 249 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    GE              reduce using rule 249 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    EQUAL           reduce using rule 249 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    NOTEQUAL        reduce using rule 249 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    BITAND          reduce using rule 249 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    CARET           reduce using rule 249 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    BITOR           reduce using rule 249 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    AND             reduce using rule 249 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    QUESTION        reduce using rule 249 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    OR              reduce using rule 249 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    RPAREN          reduce using rule 249 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    SEMI            reduce using rule 249 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    COMMA           reduce using rule 249 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    RBRACK          reduce using rule 249 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    RBRACE          reduce using rule 249 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    COLON           reduce using rule 249 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    LSHIFT          shift and go to state 298
    RSHIFT          shift and go to state 299
    URSHIFT         shift and go to state 300


state 354

    (250) RelationalExpression -> RelationalExpression GT ShiftExpression .
    (245) ShiftExpression -> ShiftExpression . LSHIFT AdditiveExpression
    (246) ShiftExpression -> ShiftExpression . RSHIFT AdditiveExpression
    (247) ShiftExpression -> ShiftExpression . URSHIFT AdditiveExpression

    LT              reduce using rule 250 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    GT              reduce using rule 250 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    LE              reduce using rule 250 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    GE              reduce using rule 250 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    EQUAL           reduce using rule 250 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    NOTEQUAL        reduce using rule 250 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    BITAND          reduce using rule 250 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    CARET           reduce using rule 250 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    BITOR           reduce using rule 250 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    AND             reduce using rule 250 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    QUESTION        reduce using rule 250 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    OR              reduce using rule 250 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    RPAREN          reduce using rule 250 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    SEMI            reduce using rule 250 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    COMMA           reduce using rule 250 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    RBRACK          reduce using rule 250 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    RBRACE          reduce using rule 250 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    COLON           reduce using rule 250 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    LSHIFT          shift and go to state 298
    RSHIFT          shift and go to state 299
    URSHIFT         shift and go to state 300


state 355

    (251) RelationalExpression -> RelationalExpression LE ShiftExpression .
    (245) ShiftExpression -> ShiftExpression . LSHIFT AdditiveExpression
    (246) ShiftExpression -> ShiftExpression . RSHIFT AdditiveExpression
    (247) ShiftExpression -> ShiftExpression . URSHIFT AdditiveExpression

    LT              reduce using rule 251 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    GT              reduce using rule 251 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    LE              reduce using rule 251 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    GE              reduce using rule 251 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    EQUAL           reduce using rule 251 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    NOTEQUAL        reduce using rule 251 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    BITAND          reduce using rule 251 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    CARET           reduce using rule 251 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    BITOR           reduce using rule 251 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    AND             reduce using rule 251 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    QUESTION        reduce using rule 251 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    OR              reduce using rule 251 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    RPAREN          reduce using rule 251 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    SEMI            reduce using rule 251 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    COMMA           reduce using rule 251 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    RBRACK          reduce using rule 251 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    RBRACE          reduce using rule 251 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    COLON           reduce using rule 251 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    LSHIFT          shift and go to state 298
    RSHIFT          shift and go to state 299
    URSHIFT         shift and go to state 300


state 356

    (252) RelationalExpression -> RelationalExpression GE ShiftExpression .
    (245) ShiftExpression -> ShiftExpression . LSHIFT AdditiveExpression
    (246) ShiftExpression -> ShiftExpression . RSHIFT AdditiveExpression
    (247) ShiftExpression -> ShiftExpression . URSHIFT AdditiveExpression

    LT              reduce using rule 252 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    GT              reduce using rule 252 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    LE              reduce using rule 252 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    GE              reduce using rule 252 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    EQUAL           reduce using rule 252 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    NOTEQUAL        reduce using rule 252 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    BITAND          reduce using rule 252 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    CARET           reduce using rule 252 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    BITOR           reduce using rule 252 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    AND             reduce using rule 252 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    QUESTION        reduce using rule 252 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    OR              reduce using rule 252 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    RPAREN          reduce using rule 252 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    SEMI            reduce using rule 252 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    COMMA           reduce using rule 252 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    RBRACK          reduce using rule 252 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    RBRACE          reduce using rule 252 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    COLON           reduce using rule 252 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    LSHIFT          shift and go to state 298
    RSHIFT          shift and go to state 299
    URSHIFT         shift and go to state 300


state 357

    (245) ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .
    (242) AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression
    (243) AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression

    LSHIFT          reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    RSHIFT          reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    URSHIFT         reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    LT              reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    GT              reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    LE              reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    GE              reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    EQUAL           reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    NOTEQUAL        reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    BITAND          reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    CARET           reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    BITOR           reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    AND             reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    QUESTION        reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    OR              reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    RPAREN          reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    SEMI            reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    COMMA           reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    RBRACK          reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    RBRACE          reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    COLON           reduce using rule 245 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    ADD             shift and go to state 301
    SUB             shift and go to state 302


state 358

    (246) ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .
    (242) AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression
    (243) AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression

    LSHIFT          reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    RSHIFT          reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    URSHIFT         reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    LT              reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    GT              reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    LE              reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    GE              reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    EQUAL           reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    NOTEQUAL        reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    BITAND          reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    CARET           reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    BITOR           reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    AND             reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    QUESTION        reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    OR              reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    RPAREN          reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    SEMI            reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    COMMA           reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    RBRACK          reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    RBRACE          reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    COLON           reduce using rule 246 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    ADD             shift and go to state 301
    SUB             shift and go to state 302


state 359

    (247) ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .
    (242) AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression
    (243) AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression

    LSHIFT          reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    RSHIFT          reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    URSHIFT         reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    LT              reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    GT              reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    LE              reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    GE              reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    EQUAL           reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    NOTEQUAL        reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    BITAND          reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    CARET           reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    BITOR           reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    AND             reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    QUESTION        reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    OR              reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    RPAREN          reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    SEMI            reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    COMMA           reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    RBRACK          reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    RBRACE          reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    COLON           reduce using rule 247 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    ADD             shift and go to state 301
    SUB             shift and go to state 302


state 360

    (242) AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .
    (238) MultiplicativeExpression -> MultiplicativeExpression . MUL UnaryExpression
    (239) MultiplicativeExpression -> MultiplicativeExpression . DIV UnaryExpression
    (240) MultiplicativeExpression -> MultiplicativeExpression . MOD UnaryExpression

    ADD             reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    SUB             reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    LSHIFT          reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    RSHIFT          reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    URSHIFT         reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    LT              reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    GT              reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    LE              reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    GE              reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    EQUAL           reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    NOTEQUAL        reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    BITAND          reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    CARET           reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    BITOR           reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    AND             reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    QUESTION        reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    OR              reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    RPAREN          reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    SEMI            reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    COMMA           reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    RBRACK          reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    RBRACE          reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    COLON           reduce using rule 242 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    MUL             shift and go to state 303
    DIV             shift and go to state 304
    MOD             shift and go to state 305


state 361

    (243) AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .
    (238) MultiplicativeExpression -> MultiplicativeExpression . MUL UnaryExpression
    (239) MultiplicativeExpression -> MultiplicativeExpression . DIV UnaryExpression
    (240) MultiplicativeExpression -> MultiplicativeExpression . MOD UnaryExpression

    ADD             reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    SUB             reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    LSHIFT          reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    RSHIFT          reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    URSHIFT         reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    LT              reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    GT              reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    LE              reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    GE              reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    EQUAL           reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    NOTEQUAL        reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    BITAND          reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    CARET           reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    BITOR           reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    AND             reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    QUESTION        reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    OR              reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    RPAREN          reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    SEMI            reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    COMMA           reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    RBRACK          reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    RBRACE          reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    COLON           reduce using rule 243 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    MUL             shift and go to state 303
    DIV             shift and go to state 304
    MOD             shift and go to state 305


state 362

    (238) MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .

    MUL             reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    DIV             reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    MOD             reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    ADD             reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    SUB             reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    LSHIFT          reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    RSHIFT          reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    URSHIFT         reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    LT              reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    GT              reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    LE              reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    GE              reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    EQUAL           reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    NOTEQUAL        reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    BITAND          reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    CARET           reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    BITOR           reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    AND             reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    QUESTION        reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    OR              reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    RPAREN          reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    SEMI            reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    COMMA           reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    RBRACK          reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    RBRACE          reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    COLON           reduce using rule 238 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)


state 363

    (239) MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .

    MUL             reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    DIV             reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    MOD             reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    ADD             reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    SUB             reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    LSHIFT          reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    RSHIFT          reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    URSHIFT         reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    LT              reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    GT              reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    LE              reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    GE              reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    EQUAL           reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    NOTEQUAL        reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    BITAND          reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    CARET           reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    BITOR           reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    AND             reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    QUESTION        reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    OR              reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    RPAREN          reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    SEMI            reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    COMMA           reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    RBRACK          reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    RBRACE          reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    COLON           reduce using rule 239 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)


state 364

    (240) MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .

    MUL             reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    DIV             reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    MOD             reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    ADD             reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    SUB             reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    LSHIFT          reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    RSHIFT          reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    URSHIFT         reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    LT              reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    GT              reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    LE              reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    GE              reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    EQUAL           reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    NOTEQUAL        reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    BITAND          reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    CARET           reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    BITOR           reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    AND             reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    QUESTION        reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    OR              reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    RPAREN          reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    SEMI            reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    COMMA           reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    RBRACK          reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    RBRACE          reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    COLON           reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)


state 365

    (156) WhileStatement -> WHILE begin_scope LPAREN Expression . RPAREN Statement end_scope

    RPAREN          shift and go to state 397


state 366

    (159) ForStatement -> FOR begin_scope LPAREN ForInit . SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> FOR begin_scope LPAREN ForInit . SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> FOR begin_scope LPAREN ForInit . SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> FOR begin_scope LPAREN ForInit . SEMI SEMI RPAREN Statement end_scope

    SEMI            shift and go to state 398


state 367

    (160) ForStatement -> FOR begin_scope LPAREN SEMI . Expression SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope LPAREN SEMI . Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> FOR begin_scope LPAREN SEMI . SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> FOR begin_scope LPAREN SEMI . SEMI RPAREN Statement end_scope
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    SEMI            shift and go to state 399
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    Expression                     shift and go to state 400
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 368

    (175) ForInit -> StatementExpressionList .
    (179) StatementExpressionList -> StatementExpressionList . COMMA StatementExpression

    SEMI            reduce using rule 175 (ForInit -> StatementExpressionList .)
    COMMA           shift and go to state 401


state 369

    (176) ForInit -> LocalVariableDeclaration .

    SEMI            reduce using rule 176 (ForInit -> LocalVariableDeclaration .)


state 370

    (178) StatementExpressionList -> StatementExpression .

    COMMA           reduce using rule 178 (StatementExpressionList -> StatementExpression .)
    SEMI            reduce using rule 178 (StatementExpressionList -> StatementExpression .)
    RPAREN          reduce using rule 178 (StatementExpressionList -> StatementExpression .)


state 371

    (210) MethodInvocation -> Name . LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> Name . LPAREN RPAREN
    (271) LeftHandSide -> Name .
    (217) PostfixExpression -> Name .
    (26) ArrayType -> Name . Dims
    (24) ClassType -> Name .
    (214) ArrayAccess -> Name . LBRACK Expression RBRACK
    (30) QualifiedName -> Name . DOT IDENTIFIER
    (206) Dims -> . LBRACK RBRACK
    (207) Dims -> . Dims LBRACK RBRACK

    LPAREN          shift and go to state 233
    ASSIGN          reduce using rule 271 (LeftHandSide -> Name .)
    ADD_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    SUB_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    MUL_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    DIV_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    AND_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    OR_ASSIGN       reduce using rule 271 (LeftHandSide -> Name .)
    XOR_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    MOD_ASSIGN      reduce using rule 271 (LeftHandSide -> Name .)
    LSHIFT_ASSIGN   reduce using rule 271 (LeftHandSide -> Name .)
    RSHIFT_ASSIGN   reduce using rule 271 (LeftHandSide -> Name .)
    URSHIFT_ASSIGN  reduce using rule 271 (LeftHandSide -> Name .)
    INC             reduce using rule 217 (PostfixExpression -> Name .)
    DEC             reduce using rule 217 (PostfixExpression -> Name .)
    IDENTIFIER      reduce using rule 24 (ClassType -> Name .)
    LBRACK          shift and go to state 234
    DOT             shift and go to state 101

    Dims                           shift and go to state 100

state 372

    (144) SwitchStatement -> SWITCH LPAREN Expression RPAREN . SwitchBlock
    (145) SwitchBlock -> . LBRACE RBRACE
    (146) SwitchBlock -> . LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE
    (147) SwitchBlock -> . LBRACE SwitchBlockStatementGroups RBRACE
    (148) SwitchBlock -> . LBRACE begin_scope SwitchLabels end_scope RBRACE

    LBRACE          shift and go to state 403

    SwitchBlock                    shift and go to state 402

state 373

    (158) DoStatement -> DO begin_scope Statement WHILE . LPAREN Expression RPAREN end_scope SEMI

    LPAREN          shift and go to state 404


state 374

    (210) MethodInvocation -> Name LPAREN ArgumentList RPAREN .

    SEMI            reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    LBRACK          reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    DOT             reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    INC             reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    DEC             reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    MUL             reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    DIV             reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    MOD             reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    ADD             reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    SUB             reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    LSHIFT          reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    RSHIFT          reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    URSHIFT         reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    LT              reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    GT              reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    LE              reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    GE              reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    EQUAL           reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    NOTEQUAL        reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    BITAND          reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    CARET           reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    BITOR           reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    AND             reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    QUESTION        reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    OR              reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    RPAREN          reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    COMMA           reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    RBRACK          reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    RBRACE          reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    COLON           reduce using rule 210 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)


state 375

    (198) ArgumentList -> ArgumentList COMMA . Expression
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    Expression                     shift and go to state 405
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 376

    (214) ArrayAccess -> Name LBRACK Expression RBRACK .

    ASSIGN          reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    DIV_ASSIGN      reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    AND_ASSIGN      reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    OR_ASSIGN       reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    MOD_ASSIGN      reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    LSHIFT_ASSIGN   reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    RSHIFT_ASSIGN   reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    URSHIFT_ASSIGN  reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    LBRACK          reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    DOT             reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    INC             reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    DEC             reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    MUL             reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    DIV             reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    MOD             reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    ADD             reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    SUB             reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    LSHIFT          reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    RSHIFT          reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    URSHIFT         reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    LT              reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    GT              reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    LE              reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    GE              reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    EQUAL           reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    NOTEQUAL        reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    BITAND          reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    CARET           reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    BITOR           reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    AND             reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    QUESTION        reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    OR              reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    SEMI            reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    COMMA           reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    RBRACE          reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    COLON           reduce using rule 214 (ArrayAccess -> Name LBRACK Expression RBRACK .)


state 377

    (235) CastExpression -> LPAREN Expression RPAREN . UnaryExpressionNotAddSub
    (190) PrimaryNoNewArray -> LPAREN Expression RPAREN .
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    LBRACK          reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    DOT             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    INC             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    DEC             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    SEMI            reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    MUL             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    DIV             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    ADD             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    SUB             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    LSHIFT          reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RSHIFT          reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    URSHIFT         reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    LT              reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    GT              reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    LE              reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    GE              reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    EQUAL           reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    NOTEQUAL        reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    BITAND          reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    CARET           reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    BITOR           reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    AND             reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    QUESTION        reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    OR              reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RBRACE          reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 190 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    UnaryExpressionNotAddSub       shift and go to state 392
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 378

    (212) MethodInvocation -> Primary DOT IDENTIFIER LPAREN . ArgumentList RPAREN
    (213) MethodInvocation -> Primary DOT IDENTIFIER LPAREN . RPAREN
    (197) ArgumentList -> . Expression
    (198) ArgumentList -> . ArgumentList COMMA Expression
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    RPAREN          shift and go to state 407
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    Primary                        shift and go to state 198
    ArgumentList                   shift and go to state 406
    Expression                     shift and go to state 319
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 379

    (195) ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .

    SEMI            reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    LBRACK          reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    DOT             reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    INC             reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    DEC             reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    MUL             reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    DIV             reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    MOD             reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    ADD             reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    SUB             reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    LSHIFT          reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    RSHIFT          reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    URSHIFT         reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    LT              reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    GT              reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    LE              reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    GE              reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    EQUAL           reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    BITAND          reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    CARET           reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    BITOR           reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    AND             reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    QUESTION        reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    OR              reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    RPAREN          reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    COMMA           reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    RBRACK          reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    RBRACE          reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    COLON           reduce using rule 195 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)


state 380

    (196) ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList . RPAREN
    (198) ArgumentList -> ArgumentList . COMMA Expression

    RPAREN          shift and go to state 408
    COMMA           shift and go to state 375


state 381

    (201) ArrayCreationExpression -> NEW ClassType DimExprs Dims .
    (207) Dims -> Dims . LBRACK RBRACK

    DOT             reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    INC             reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    DEC             reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    MUL             reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    DIV             reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    MOD             reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    ADD             reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    SUB             reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    LSHIFT          reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    RSHIFT          reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    URSHIFT         reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    LT              reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    GT              reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    LE              reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    GE              reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    EQUAL           reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    NOTEQUAL        reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    BITAND          reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    CARET           reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    BITOR           reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    AND             reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    QUESTION        reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    OR              reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    RPAREN          reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    SEMI            reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    COMMA           reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    RBRACK          reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    RBRACE          reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    COLON           reduce using rule 201 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    LBRACK          shift and go to state 178


state 382

    (204) DimExprs -> DimExprs DimExpr .

    LBRACK          reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    DOT             reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    INC             reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    DEC             reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    MUL             reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    DIV             reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    MOD             reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    ADD             reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    SUB             reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    LSHIFT          reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    RSHIFT          reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    URSHIFT         reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    LT              reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    GT              reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    LE              reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    GE              reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    EQUAL           reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    NOTEQUAL        reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    BITAND          reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    CARET           reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    BITOR           reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    AND             reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    QUESTION        reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    OR              reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    RPAREN          reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    SEMI            reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    COMMA           reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    RBRACK          reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    RBRACE          reduce using rule 204 (DimExprs -> DimExprs DimExpr .)
    COLON           reduce using rule 204 (DimExprs -> DimExprs DimExpr .)


state 383

    (206) Dims -> LBRACK . RBRACK
    (205) DimExpr -> LBRACK . Expression RBRACK
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    RBRACK          shift and go to state 179
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    Expression                     shift and go to state 384
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 384

    (205) DimExpr -> LBRACK Expression . RBRACK

    RBRACK          shift and go to state 409


state 385

    (199) ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .
    (207) Dims -> Dims . LBRACK RBRACK

    DOT             reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    INC             reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    DEC             reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    MUL             reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    DIV             reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    MOD             reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    ADD             reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    SUB             reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    LSHIFT          reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    RSHIFT          reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    URSHIFT         reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    LT              reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    GT              reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    LE              reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    GE              reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    EQUAL           reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    NOTEQUAL        reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    BITAND          reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    CARET           reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    BITOR           reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    AND             reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    QUESTION        reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    OR              reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    RPAREN          reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    SEMI            reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    COMMA           reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    RBRACK          reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    RBRACE          reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    COLON           reduce using rule 199 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    LBRACK          shift and go to state 178


state 386

    (215) ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .

    ASSIGN          reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    DIV_ASSIGN      reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    AND_ASSIGN      reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    OR_ASSIGN       reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    MOD_ASSIGN      reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    LSHIFT_ASSIGN   reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    RSHIFT_ASSIGN   reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    URSHIFT_ASSIGN  reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    LBRACK          reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    DOT             reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    INC             reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    DEC             reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    MUL             reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    DIV             reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    MOD             reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    ADD             reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SUB             reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    LSHIFT          reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    RSHIFT          reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    URSHIFT         reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    LT              reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    GT              reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    LE              reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    GE              reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    EQUAL           reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    NOTEQUAL        reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    BITAND          reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    CARET           reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    BITOR           reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    AND             reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    QUESTION        reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    OR              reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SEMI            reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    COMMA           reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    RBRACE          reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    COLON           reduce using rule 215 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)


state 387

    (83) MethodDeclarator -> IDENTIFIER LPAREN decl_mark FormalParameterList RPAREN .

    SEMI            reduce using rule 83 (MethodDeclarator -> IDENTIFIER LPAREN decl_mark FormalParameterList RPAREN .)
    LBRACE          reduce using rule 83 (MethodDeclarator -> IDENTIFIER LPAREN decl_mark FormalParameterList RPAREN .)


state 388

    (99) ArrayInitializer -> LBRACE VariableInitializers RBRACE .

    SEMI            reduce using rule 99 (ArrayInitializer -> LBRACE VariableInitializers RBRACE .)
    COMMA           reduce using rule 99 (ArrayInitializer -> LBRACE VariableInitializers RBRACE .)
    RBRACE          reduce using rule 99 (ArrayInitializer -> LBRACE VariableInitializers RBRACE .)


state 389

    (102) VariableInitializers -> VariableInitializers COMMA . VariableInitializer
    (75) VariableInitializer -> . Expression
    (76) VariableInitializer -> . ArrayInitializer
    (286) Expression -> . AssignmentExpression
    (99) ArrayInitializer -> . LBRACE VariableInitializers RBRACE
    (100) ArrayInitializer -> . LBRACE RBRACE
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    LBRACE          shift and go to state 269
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    VariableInitializer            shift and go to state 410
    Expression                     shift and go to state 267
    ArrayInitializer               shift and go to state 268
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 390

    (85) FormalParameterList -> FormalParameterList COMMA FormalParameter .

    RPAREN          reduce using rule 85 (FormalParameterList -> FormalParameterList COMMA FormalParameter .)
    COMMA           reduce using rule 85 (FormalParameterList -> FormalParameterList COMMA FormalParameter .)


state 391

    (141) IfThenStatement -> IF begin_scope LPAREN Expression RPAREN . Statement end_scope
    (142) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN . StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (117) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (118) StatementNoShortIf -> . LabeledStatementNoShortIf
    (119) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (120) StatementNoShortIf -> . WhileStatementNoShortIf
    (121) StatementNoShortIf -> . ForStatementNoShortIf
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (132) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (143) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (157) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (167) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (168) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 419
    IF              shift and go to state 411
    WHILE           shift and go to state 420
    FOR             shift and go to state 421
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 412
    StatementNoShortIf             shift and go to state 413
    StatementWithoutTrailingSubstatement shift and go to state 414
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    LabeledStatementNoShortIf      shift and go to state 415
    IfThenElseStatementNoShortIf   shift and go to state 416
    WhileStatementNoShortIf        shift and go to state 417
    ForStatementNoShortIf          shift and go to state 418
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 392

    (235) CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .

    MUL             reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    DIV             reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    MOD             reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    ADD             reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    SUB             reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    LSHIFT          reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    RSHIFT          reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    URSHIFT         reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    LT              reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    GT              reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    LE              reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    GE              reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    EQUAL           reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    NOTEQUAL        reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    BITAND          reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    CARET           reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    BITOR           reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    AND             reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    QUESTION        reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    OR              reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    RPAREN          reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    SEMI            reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    COMMA           reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    RBRACK          reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    RBRACE          reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    COLON           reduce using rule 235 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)


state 393

    (233) CastExpression -> LPAREN PrimitiveType Dims RPAREN . UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    UnaryExpression                shift and go to state 422
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 394

    (234) CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .

    MUL             reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    DIV             reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    MOD             reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    ADD             reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    SUB             reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    LSHIFT          reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    RSHIFT          reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    URSHIFT         reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    LT              reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    GT              reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    LE              reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    GE              reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    EQUAL           reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    NOTEQUAL        reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    BITAND          reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    CARET           reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    BITOR           reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    AND             reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    QUESTION        reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    OR              reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    RPAREN          reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    SEMI            reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    COMMA           reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    RBRACK          reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    RBRACE          reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    COLON           reduce using rule 234 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)


state 395

    (236) CastExpression -> LPAREN Name Dims RPAREN . UnaryExpressionNotAddSub
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    Name                           shift and go to state 250
    UnaryExpressionNotAddSub       shift and go to state 423
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 396

    (267) ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON . ConditionalExpression
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218
    LPAREN          shift and go to state 251
    THIS            shift and go to state 160
    NEW             shift and go to state 204
    IDENTIFIER      shift and go to state 61
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    SUPER           shift and go to state 158

    ConditionalOrExpression        shift and go to state 194
    ConditionalExpression          shift and go to state 424
    ConditionalAndExpression       shift and go to state 195
    InclusiveOrExpression          shift and go to state 197
    ExclusiveOrExpression          shift and go to state 200
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    Primary                        shift and go to state 249
    Name                           shift and go to state 250
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    FieldAccess                    shift and go to state 252
    MethodInvocation               shift and go to state 202
    ArrayAccess                    shift and go to state 253

state 397

    (156) WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN . Statement end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 128
    IF              shift and go to state 129
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 425
    StatementWithoutTrailingSubstatement shift and go to state 113
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 398

    (159) ForStatement -> FOR begin_scope LPAREN ForInit SEMI . Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI . SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> FOR begin_scope LPAREN ForInit SEMI . Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> FOR begin_scope LPAREN ForInit SEMI . SEMI RPAREN Statement end_scope
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    SEMI            shift and go to state 426
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    Expression                     shift and go to state 427
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 399

    (165) ForStatement -> FOR begin_scope LPAREN SEMI SEMI . ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> FOR begin_scope LPAREN SEMI SEMI . RPAREN Statement end_scope
    (177) ForUpdate -> . StatementExpressionList
    (178) StatementExpressionList -> . StatementExpression
    (179) StatementExpressionList -> . StatementExpressionList COMMA StatementExpression
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RPAREN          shift and go to state 429
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    ForUpdate                      shift and go to state 428
    StatementExpressionList        shift and go to state 430
    StatementExpression            shift and go to state 370
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 400

    (160) ForStatement -> FOR begin_scope LPAREN SEMI Expression . SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope LPAREN SEMI Expression . SEMI RPAREN Statement end_scope

    SEMI            shift and go to state 431


state 401

    (179) StatementExpressionList -> StatementExpressionList COMMA . StatementExpression
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    StatementExpression            shift and go to state 432
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 402

    (144) SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .

    RBRACE          reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    IDENTIFIER      reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    IF              reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    WHILE           reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    FOR             reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    LBRACE          reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    SEMI            reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    SWITCH          reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    DO              reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    BREAK           reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    CONTINUE        reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    RETURN          reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    BOOLEAN         reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    INC             reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    DEC             reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    NEW             reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    BYTE            reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    SHORT           reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    INT             reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    LONG            reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    CHAR            reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    FLOAT           reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    DOUBLE          reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    SUPER           reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    THIS            reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    LPAREN          reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    DECIMAL_LITERAL reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    HEX_LITERAL     reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    BINARY_LITERAL  reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    FLOAT_LITERAL   reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    BOOL_LITERAL    reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    CHAR_LITERAL    reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    STRING_LITERAL  reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    CASE            reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    DEFAULT         reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    ELSE            reduce using rule 144 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)


state 403

    (145) SwitchBlock -> LBRACE . RBRACE
    (146) SwitchBlock -> LBRACE . SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE
    (147) SwitchBlock -> LBRACE . SwitchBlockStatementGroups RBRACE
    (148) SwitchBlock -> LBRACE . begin_scope SwitchLabels end_scope RBRACE
    (149) SwitchBlockStatementGroups -> . SwitchBlockStatementGroup
    (150) SwitchBlockStatementGroups -> . SwitchBlockStatementGroups SwitchBlockStatementGroup
    (290) begin_scope -> .
    (151) SwitchBlockStatementGroup -> . begin_scope SwitchLabels BlockStatements end_scope

    RBRACE          shift and go to state 433
    CASE            reduce using rule 290 (begin_scope -> .)
    DEFAULT         reduce using rule 290 (begin_scope -> .)

    SwitchBlockStatementGroups     shift and go to state 434
    begin_scope                    shift and go to state 435
    SwitchBlockStatementGroup      shift and go to state 436

state 404

    (158) DoStatement -> DO begin_scope Statement WHILE LPAREN . Expression RPAREN end_scope SEMI
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    Expression                     shift and go to state 437
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 405

    (198) ArgumentList -> ArgumentList COMMA Expression .

    RPAREN          reduce using rule 198 (ArgumentList -> ArgumentList COMMA Expression .)
    COMMA           reduce using rule 198 (ArgumentList -> ArgumentList COMMA Expression .)


state 406

    (212) MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList . RPAREN
    (198) ArgumentList -> ArgumentList . COMMA Expression

    RPAREN          shift and go to state 438
    COMMA           shift and go to state 375


state 407

    (213) MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .

    SEMI            reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    LBRACK          reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    DOT             reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    INC             reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    DEC             reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    MUL             reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    DIV             reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    MOD             reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    ADD             reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    SUB             reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    LSHIFT          reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    RSHIFT          reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    URSHIFT         reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    LT              reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    GT              reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    LE              reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    GE              reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    EQUAL           reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    BITAND          reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    CARET           reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    BITOR           reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    QUESTION        reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    RBRACK          reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    RBRACE          reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    COLON           reduce using rule 213 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)


state 408

    (196) ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .

    SEMI            reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    LBRACK          reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    DOT             reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    INC             reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    DEC             reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    MUL             reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    DIV             reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    MOD             reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    ADD             reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    SUB             reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    LSHIFT          reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    RSHIFT          reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    URSHIFT         reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    LT              reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    GT              reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    LE              reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    GE              reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    EQUAL           reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    NOTEQUAL        reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    BITAND          reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    CARET           reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    BITOR           reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    AND             reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    QUESTION        reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    OR              reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    RPAREN          reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    COMMA           reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    RBRACK          reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    RBRACE          reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    COLON           reduce using rule 196 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)


state 409

    (205) DimExpr -> LBRACK Expression RBRACK .

    LBRACK          reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    DOT             reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    INC             reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    DEC             reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    MUL             reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    DIV             reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    MOD             reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    ADD             reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    SUB             reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    LSHIFT          reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    RSHIFT          reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    URSHIFT         reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    LT              reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    GT              reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    LE              reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    GE              reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    EQUAL           reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    NOTEQUAL        reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    BITAND          reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    CARET           reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    BITOR           reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    AND             reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    QUESTION        reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    OR              reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    SEMI            reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    COMMA           reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    RBRACE          reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)
    COLON           reduce using rule 205 (DimExpr -> LBRACK Expression RBRACK .)


state 410

    (102) VariableInitializers -> VariableInitializers COMMA VariableInitializer .

    RBRACE          reduce using rule 102 (VariableInitializers -> VariableInitializers COMMA VariableInitializer .)
    COMMA           reduce using rule 102 (VariableInitializers -> VariableInitializers COMMA VariableInitializer .)


state 411

    (141) IfThenStatement -> IF . begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> IF . begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (143) IfThenElseStatementNoShortIf -> IF . begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (290) begin_scope -> .

    LPAREN          reduce using rule 290 (begin_scope -> .)

    begin_scope                    shift and go to state 439

state 412

    (141) IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement . end_scope
    (291) end_scope -> .

    RBRACE          reduce using rule 291 (end_scope -> .)
    IDENTIFIER      reduce using rule 291 (end_scope -> .)
    IF              reduce using rule 291 (end_scope -> .)
    WHILE           reduce using rule 291 (end_scope -> .)
    FOR             reduce using rule 291 (end_scope -> .)
    LBRACE          reduce using rule 291 (end_scope -> .)
    SEMI            reduce using rule 291 (end_scope -> .)
    SWITCH          reduce using rule 291 (end_scope -> .)
    DO              reduce using rule 291 (end_scope -> .)
    BREAK           reduce using rule 291 (end_scope -> .)
    CONTINUE        reduce using rule 291 (end_scope -> .)
    RETURN          reduce using rule 291 (end_scope -> .)
    BOOLEAN         reduce using rule 291 (end_scope -> .)
    INC             reduce using rule 291 (end_scope -> .)
    DEC             reduce using rule 291 (end_scope -> .)
    NEW             reduce using rule 291 (end_scope -> .)
    BYTE            reduce using rule 291 (end_scope -> .)
    SHORT           reduce using rule 291 (end_scope -> .)
    INT             reduce using rule 291 (end_scope -> .)
    LONG            reduce using rule 291 (end_scope -> .)
    CHAR            reduce using rule 291 (end_scope -> .)
    FLOAT           reduce using rule 291 (end_scope -> .)
    DOUBLE          reduce using rule 291 (end_scope -> .)
    SUPER           reduce using rule 291 (end_scope -> .)
    THIS            reduce using rule 291 (end_scope -> .)
    LPAREN          reduce using rule 291 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 291 (end_scope -> .)
    HEX_LITERAL     reduce using rule 291 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 291 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 291 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 291 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 291 (end_scope -> .)
    STRING_LITERAL  reduce using rule 291 (end_scope -> .)
    CASE            reduce using rule 291 (end_scope -> .)
    DEFAULT         reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 440

state 413

    (142) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf . end_scope ELSE begin_scope Statement end_scope
    (291) end_scope -> .

    ELSE            reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 441

state 414

    (111) Statement -> StatementWithoutTrailingSubstatement .
    (117) StatementNoShortIf -> StatementWithoutTrailingSubstatement .

    RBRACE          reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    IDENTIFIER      reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    IF              reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    WHILE           reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    FOR             reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    LBRACE          reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    SEMI            reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    SWITCH          reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    DO              reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    BREAK           reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    CONTINUE        reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    RETURN          reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    BOOLEAN         reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    INC             reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    DEC             reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    NEW             reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    BYTE            reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    SHORT           reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    INT             reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    LONG            reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    CHAR            reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    FLOAT           reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    DOUBLE          reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    SUPER           reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    THIS            reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    LPAREN          reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    DECIMAL_LITERAL reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    HEX_LITERAL     reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    BINARY_LITERAL  reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    FLOAT_LITERAL   reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    BOOL_LITERAL    reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    CHAR_LITERAL    reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    STRING_LITERAL  reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    CASE            reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    DEFAULT         reduce using rule 111 (Statement -> StatementWithoutTrailingSubstatement .)
    ELSE            reduce using rule 117 (StatementNoShortIf -> StatementWithoutTrailingSubstatement .)


state 415

    (118) StatementNoShortIf -> LabeledStatementNoShortIf .

    ELSE            reduce using rule 118 (StatementNoShortIf -> LabeledStatementNoShortIf .)


state 416

    (119) StatementNoShortIf -> IfThenElseStatementNoShortIf .

    ELSE            reduce using rule 119 (StatementNoShortIf -> IfThenElseStatementNoShortIf .)


state 417

    (120) StatementNoShortIf -> WhileStatementNoShortIf .

    ELSE            reduce using rule 120 (StatementNoShortIf -> WhileStatementNoShortIf .)


state 418

    (121) StatementNoShortIf -> ForStatementNoShortIf .

    ELSE            reduce using rule 121 (StatementNoShortIf -> ForStatementNoShortIf .)


state 419

    (131) LabeledStatement -> IDENTIFIER . COLON Statement
    (132) LabeledStatementNoShortIf -> IDENTIFIER . COLON StatementNoShortIf
    (29) SimpleName -> IDENTIFIER .

    COLON           shift and go to state 442
    LPAREN          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LBRACK          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DOT             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    ASSIGN          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    ADD_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    SUB_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    MUL_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    AND_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    OR_ASSIGN       reduce using rule 29 (SimpleName -> IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 29 (SimpleName -> IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 29 (SimpleName -> IDENTIFIER .)
    URSHIFT_ASSIGN  reduce using rule 29 (SimpleName -> IDENTIFIER .)
    INC             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DEC             reduce using rule 29 (SimpleName -> IDENTIFIER .)


state 420

    (156) WhileStatement -> WHILE . begin_scope LPAREN Expression RPAREN Statement end_scope
    (157) WhileStatementNoShortIf -> WHILE . begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (290) begin_scope -> .

    LPAREN          reduce using rule 290 (begin_scope -> .)

    begin_scope                    shift and go to state 443

state 421

    (159) ForStatement -> FOR . begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> FOR . begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> FOR . begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> FOR . begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> FOR . begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> FOR . begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> FOR . begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> FOR . begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (167) ForStatementNoShortIf -> FOR . begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (168) ForStatementNoShortIf -> FOR . begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> FOR . begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> FOR . begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> FOR . begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> FOR . begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> FOR . begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> FOR . begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (290) begin_scope -> .

    LPAREN          reduce using rule 290 (begin_scope -> .)

    begin_scope                    shift and go to state 444

state 422

    (233) CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .

    MUL             reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    DIV             reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    MOD             reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    ADD             reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    SUB             reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    LSHIFT          reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    RSHIFT          reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    URSHIFT         reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    LT              reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    GT              reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    LE              reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    GE              reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    EQUAL           reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    NOTEQUAL        reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    BITAND          reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    CARET           reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    BITOR           reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    AND             reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    QUESTION        reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    OR              reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    RPAREN          reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    SEMI            reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    COMMA           reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    RBRACK          reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    RBRACE          reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    COLON           reduce using rule 233 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)


state 423

    (236) CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .

    MUL             reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    DIV             reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    MOD             reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    ADD             reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    SUB             reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    LSHIFT          reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    RSHIFT          reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    URSHIFT         reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    LT              reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    GT              reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    LE              reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    GE              reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    EQUAL           reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    NOTEQUAL        reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    BITAND          reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    CARET           reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    BITOR           reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    AND             reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    QUESTION        reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    OR              reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    RPAREN          reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    SEMI            reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    COMMA           reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    RBRACK          reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    RBRACE          reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    COLON           reduce using rule 236 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)


state 424

    (267) ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON ConditionalExpression .

    RPAREN          reduce using rule 267 (ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON ConditionalExpression .)
    SEMI            reduce using rule 267 (ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON ConditionalExpression .)
    COMMA           reduce using rule 267 (ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON ConditionalExpression .)
    RBRACK          reduce using rule 267 (ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON ConditionalExpression .)
    RBRACE          reduce using rule 267 (ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON ConditionalExpression .)
    COLON           reduce using rule 267 (ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON ConditionalExpression .)


state 425

    (156) WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement . end_scope
    (291) end_scope -> .

    RBRACE          reduce using rule 291 (end_scope -> .)
    IDENTIFIER      reduce using rule 291 (end_scope -> .)
    IF              reduce using rule 291 (end_scope -> .)
    WHILE           reduce using rule 291 (end_scope -> .)
    FOR             reduce using rule 291 (end_scope -> .)
    LBRACE          reduce using rule 291 (end_scope -> .)
    SEMI            reduce using rule 291 (end_scope -> .)
    SWITCH          reduce using rule 291 (end_scope -> .)
    DO              reduce using rule 291 (end_scope -> .)
    BREAK           reduce using rule 291 (end_scope -> .)
    CONTINUE        reduce using rule 291 (end_scope -> .)
    RETURN          reduce using rule 291 (end_scope -> .)
    BOOLEAN         reduce using rule 291 (end_scope -> .)
    INC             reduce using rule 291 (end_scope -> .)
    DEC             reduce using rule 291 (end_scope -> .)
    NEW             reduce using rule 291 (end_scope -> .)
    BYTE            reduce using rule 291 (end_scope -> .)
    SHORT           reduce using rule 291 (end_scope -> .)
    INT             reduce using rule 291 (end_scope -> .)
    LONG            reduce using rule 291 (end_scope -> .)
    CHAR            reduce using rule 291 (end_scope -> .)
    FLOAT           reduce using rule 291 (end_scope -> .)
    DOUBLE          reduce using rule 291 (end_scope -> .)
    SUPER           reduce using rule 291 (end_scope -> .)
    THIS            reduce using rule 291 (end_scope -> .)
    LPAREN          reduce using rule 291 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 291 (end_scope -> .)
    HEX_LITERAL     reduce using rule 291 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 291 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 291 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 291 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 291 (end_scope -> .)
    STRING_LITERAL  reduce using rule 291 (end_scope -> .)
    CASE            reduce using rule 291 (end_scope -> .)
    DEFAULT         reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 445

state 426

    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI . ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI . RPAREN Statement end_scope
    (177) ForUpdate -> . StatementExpressionList
    (178) StatementExpressionList -> . StatementExpression
    (179) StatementExpressionList -> . StatementExpressionList COMMA StatementExpression
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RPAREN          shift and go to state 447
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    ForUpdate                      shift and go to state 446
    StatementExpressionList        shift and go to state 430
    StatementExpression            shift and go to state 370
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 427

    (159) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression . SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression . SEMI RPAREN Statement end_scope

    SEMI            shift and go to state 448


state 428

    (165) ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate . RPAREN Statement end_scope

    RPAREN          shift and go to state 449


state 429

    (166) ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN . Statement end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 128
    IF              shift and go to state 129
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 450
    StatementWithoutTrailingSubstatement shift and go to state 113
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 430

    (177) ForUpdate -> StatementExpressionList .
    (179) StatementExpressionList -> StatementExpressionList . COMMA StatementExpression

    RPAREN          reduce using rule 177 (ForUpdate -> StatementExpressionList .)
    COMMA           shift and go to state 401


state 431

    (160) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI . ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI . RPAREN Statement end_scope
    (177) ForUpdate -> . StatementExpressionList
    (178) StatementExpressionList -> . StatementExpression
    (179) StatementExpressionList -> . StatementExpressionList COMMA StatementExpression
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RPAREN          shift and go to state 452
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    ForUpdate                      shift and go to state 451
    StatementExpressionList        shift and go to state 430
    StatementExpression            shift and go to state 370
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 432

    (179) StatementExpressionList -> StatementExpressionList COMMA StatementExpression .

    COMMA           reduce using rule 179 (StatementExpressionList -> StatementExpressionList COMMA StatementExpression .)
    SEMI            reduce using rule 179 (StatementExpressionList -> StatementExpressionList COMMA StatementExpression .)
    RPAREN          reduce using rule 179 (StatementExpressionList -> StatementExpressionList COMMA StatementExpression .)


state 433

    (145) SwitchBlock -> LBRACE RBRACE .

    RBRACE          reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    IF              reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    WHILE           reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    FOR             reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    LBRACE          reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    SEMI            reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    SWITCH          reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    DO              reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    BREAK           reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    CONTINUE        reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    RETURN          reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    BOOLEAN         reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    INC             reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    DEC             reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    NEW             reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    BYTE            reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    SHORT           reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    INT             reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    LONG            reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    CHAR            reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    FLOAT           reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    DOUBLE          reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    SUPER           reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    THIS            reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    LPAREN          reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    DECIMAL_LITERAL reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    HEX_LITERAL     reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    BINARY_LITERAL  reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    FLOAT_LITERAL   reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    BOOL_LITERAL    reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    CHAR_LITERAL    reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    STRING_LITERAL  reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    CASE            reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    DEFAULT         reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)
    ELSE            reduce using rule 145 (SwitchBlock -> LBRACE RBRACE .)


state 434

    (146) SwitchBlock -> LBRACE SwitchBlockStatementGroups . begin_scope SwitchLabels end_scope RBRACE
    (147) SwitchBlock -> LBRACE SwitchBlockStatementGroups . RBRACE
    (150) SwitchBlockStatementGroups -> SwitchBlockStatementGroups . SwitchBlockStatementGroup
    (290) begin_scope -> .
    (151) SwitchBlockStatementGroup -> . begin_scope SwitchLabels BlockStatements end_scope

    RBRACE          shift and go to state 454
    CASE            reduce using rule 290 (begin_scope -> .)
    DEFAULT         reduce using rule 290 (begin_scope -> .)

    begin_scope                    shift and go to state 453
    SwitchBlockStatementGroup      shift and go to state 455

state 435

    (148) SwitchBlock -> LBRACE begin_scope . SwitchLabels end_scope RBRACE
    (151) SwitchBlockStatementGroup -> begin_scope . SwitchLabels BlockStatements end_scope
    (152) SwitchLabels -> . SwitchLabel
    (153) SwitchLabels -> . SwitchLabels SwitchLabel
    (154) SwitchLabel -> . CASE ConstantExpression COLON
    (155) SwitchLabel -> . DEFAULT COLON

    CASE            shift and go to state 458
    DEFAULT         shift and go to state 459

    SwitchLabels                   shift and go to state 456
    SwitchLabel                    shift and go to state 457

state 436

    (149) SwitchBlockStatementGroups -> SwitchBlockStatementGroup .

    RBRACE          reduce using rule 149 (SwitchBlockStatementGroups -> SwitchBlockStatementGroup .)
    CASE            reduce using rule 149 (SwitchBlockStatementGroups -> SwitchBlockStatementGroup .)
    DEFAULT         reduce using rule 149 (SwitchBlockStatementGroups -> SwitchBlockStatementGroup .)


state 437

    (158) DoStatement -> DO begin_scope Statement WHILE LPAREN Expression . RPAREN end_scope SEMI

    RPAREN          shift and go to state 460


state 438

    (212) MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .

    SEMI            reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    LBRACK          reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    DOT             reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    INC             reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    DEC             reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    MUL             reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    DIV             reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    MOD             reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    ADD             reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    SUB             reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    LSHIFT          reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    RSHIFT          reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    URSHIFT         reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    LT              reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    GT              reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    LE              reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    GE              reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    EQUAL           reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    NOTEQUAL        reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    BITAND          reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    CARET           reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    BITOR           reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    AND             reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    QUESTION        reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    OR              reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    RPAREN          reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    COMMA           reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    RBRACK          reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    RBRACE          reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    COLON           reduce using rule 212 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)


state 439

    (141) IfThenStatement -> IF begin_scope . LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> IF begin_scope . LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (143) IfThenElseStatementNoShortIf -> IF begin_scope . LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope

    LPAREN          shift and go to state 461


state 440

    (141) IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .

    RBRACE          reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    IDENTIFIER      reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    IF              reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    WHILE           reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    FOR             reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    LBRACE          reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    SEMI            reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    SWITCH          reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    DO              reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    BREAK           reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    CONTINUE        reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    RETURN          reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    BOOLEAN         reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    INC             reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    DEC             reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    NEW             reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    BYTE            reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    SHORT           reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    INT             reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    LONG            reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    CHAR            reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    FLOAT           reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    DOUBLE          reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    SUPER           reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    THIS            reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    LPAREN          reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    HEX_LITERAL     reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    BINARY_LITERAL  reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    BOOL_LITERAL    reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    CHAR_LITERAL    reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    STRING_LITERAL  reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    CASE            reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    DEFAULT         reduce using rule 141 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)


state 441

    (142) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope . ELSE begin_scope Statement end_scope

    ELSE            shift and go to state 462


state 442

    (131) LabeledStatement -> IDENTIFIER COLON . Statement
    (132) LabeledStatementNoShortIf -> IDENTIFIER COLON . StatementNoShortIf
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (117) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (118) StatementNoShortIf -> . LabeledStatementNoShortIf
    (119) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (120) StatementNoShortIf -> . WhileStatementNoShortIf
    (121) StatementNoShortIf -> . ForStatementNoShortIf
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (132) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (143) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (157) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (167) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (168) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 419
    IF              shift and go to state 411
    WHILE           shift and go to state 420
    FOR             shift and go to state 421
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 276
    StatementNoShortIf             shift and go to state 463
    StatementWithoutTrailingSubstatement shift and go to state 414
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    LabeledStatementNoShortIf      shift and go to state 415
    IfThenElseStatementNoShortIf   shift and go to state 416
    WhileStatementNoShortIf        shift and go to state 417
    ForStatementNoShortIf          shift and go to state 418
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 443

    (156) WhileStatement -> WHILE begin_scope . LPAREN Expression RPAREN Statement end_scope
    (157) WhileStatementNoShortIf -> WHILE begin_scope . LPAREN Expression RPAREN StatementNoShortIf end_scope

    LPAREN          shift and go to state 464


state 444

    (159) ForStatement -> FOR begin_scope . LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> FOR begin_scope . LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> FOR begin_scope . LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> FOR begin_scope . LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> FOR begin_scope . LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope . LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> FOR begin_scope . LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> FOR begin_scope . LPAREN SEMI SEMI RPAREN Statement end_scope
    (167) ForStatementNoShortIf -> FOR begin_scope . LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (168) ForStatementNoShortIf -> FOR begin_scope . LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> FOR begin_scope . LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> FOR begin_scope . LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> FOR begin_scope . LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> FOR begin_scope . LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> FOR begin_scope . LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> FOR begin_scope . LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope

    LPAREN          shift and go to state 465


state 445

    (156) WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .

    RBRACE          reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    IDENTIFIER      reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    IF              reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    WHILE           reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    FOR             reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    LBRACE          reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    SEMI            reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    SWITCH          reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    DO              reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    BREAK           reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    CONTINUE        reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    RETURN          reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    BOOLEAN         reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    INC             reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    DEC             reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    NEW             reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    BYTE            reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    SHORT           reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    INT             reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    LONG            reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    CHAR            reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    FLOAT           reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    DOUBLE          reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    SUPER           reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    THIS            reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    LPAREN          reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    HEX_LITERAL     reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    BINARY_LITERAL  reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    BOOL_LITERAL    reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    CHAR_LITERAL    reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    STRING_LITERAL  reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    CASE            reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    DEFAULT         reduce using rule 156 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)


state 446

    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate . RPAREN Statement end_scope

    RPAREN          shift and go to state 466


state 447

    (163) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN . Statement end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 128
    IF              shift and go to state 129
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 467
    StatementWithoutTrailingSubstatement shift and go to state 113
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 448

    (159) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI . ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI . RPAREN Statement end_scope
    (177) ForUpdate -> . StatementExpressionList
    (178) StatementExpressionList -> . StatementExpression
    (179) StatementExpressionList -> . StatementExpressionList COMMA StatementExpression
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RPAREN          shift and go to state 469
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    ForUpdate                      shift and go to state 468
    StatementExpressionList        shift and go to state 430
    StatementExpression            shift and go to state 370
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 449

    (165) ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN . Statement end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 128
    IF              shift and go to state 129
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 470
    StatementWithoutTrailingSubstatement shift and go to state 113
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 450

    (166) ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement . end_scope
    (291) end_scope -> .

    RBRACE          reduce using rule 291 (end_scope -> .)
    IDENTIFIER      reduce using rule 291 (end_scope -> .)
    IF              reduce using rule 291 (end_scope -> .)
    WHILE           reduce using rule 291 (end_scope -> .)
    FOR             reduce using rule 291 (end_scope -> .)
    LBRACE          reduce using rule 291 (end_scope -> .)
    SEMI            reduce using rule 291 (end_scope -> .)
    SWITCH          reduce using rule 291 (end_scope -> .)
    DO              reduce using rule 291 (end_scope -> .)
    BREAK           reduce using rule 291 (end_scope -> .)
    CONTINUE        reduce using rule 291 (end_scope -> .)
    RETURN          reduce using rule 291 (end_scope -> .)
    BOOLEAN         reduce using rule 291 (end_scope -> .)
    INC             reduce using rule 291 (end_scope -> .)
    DEC             reduce using rule 291 (end_scope -> .)
    NEW             reduce using rule 291 (end_scope -> .)
    BYTE            reduce using rule 291 (end_scope -> .)
    SHORT           reduce using rule 291 (end_scope -> .)
    INT             reduce using rule 291 (end_scope -> .)
    LONG            reduce using rule 291 (end_scope -> .)
    CHAR            reduce using rule 291 (end_scope -> .)
    FLOAT           reduce using rule 291 (end_scope -> .)
    DOUBLE          reduce using rule 291 (end_scope -> .)
    SUPER           reduce using rule 291 (end_scope -> .)
    THIS            reduce using rule 291 (end_scope -> .)
    LPAREN          reduce using rule 291 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 291 (end_scope -> .)
    HEX_LITERAL     reduce using rule 291 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 291 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 291 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 291 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 291 (end_scope -> .)
    STRING_LITERAL  reduce using rule 291 (end_scope -> .)
    CASE            reduce using rule 291 (end_scope -> .)
    DEFAULT         reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 471

state 451

    (160) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate . RPAREN Statement end_scope

    RPAREN          shift and go to state 472


state 452

    (164) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN . Statement end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 128
    IF              shift and go to state 129
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 473
    StatementWithoutTrailingSubstatement shift and go to state 113
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 453

    (146) SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope . SwitchLabels end_scope RBRACE
    (151) SwitchBlockStatementGroup -> begin_scope . SwitchLabels BlockStatements end_scope
    (152) SwitchLabels -> . SwitchLabel
    (153) SwitchLabels -> . SwitchLabels SwitchLabel
    (154) SwitchLabel -> . CASE ConstantExpression COLON
    (155) SwitchLabel -> . DEFAULT COLON

    CASE            shift and go to state 458
    DEFAULT         shift and go to state 459

    SwitchLabels                   shift and go to state 474
    SwitchLabel                    shift and go to state 457

state 454

    (147) SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .

    RBRACE          reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    IDENTIFIER      reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    IF              reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    WHILE           reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    FOR             reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    LBRACE          reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    SEMI            reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    SWITCH          reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    DO              reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    BREAK           reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    CONTINUE        reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    RETURN          reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    BOOLEAN         reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    INC             reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    DEC             reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    NEW             reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    BYTE            reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    SHORT           reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    INT             reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    LONG            reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    CHAR            reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    FLOAT           reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    DOUBLE          reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    SUPER           reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    THIS            reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    LPAREN          reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    DECIMAL_LITERAL reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    HEX_LITERAL     reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    BINARY_LITERAL  reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    FLOAT_LITERAL   reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    BOOL_LITERAL    reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    CHAR_LITERAL    reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    STRING_LITERAL  reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    CASE            reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    DEFAULT         reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    ELSE            reduce using rule 147 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)


state 455

    (150) SwitchBlockStatementGroups -> SwitchBlockStatementGroups SwitchBlockStatementGroup .

    RBRACE          reduce using rule 150 (SwitchBlockStatementGroups -> SwitchBlockStatementGroups SwitchBlockStatementGroup .)
    CASE            reduce using rule 150 (SwitchBlockStatementGroups -> SwitchBlockStatementGroups SwitchBlockStatementGroup .)
    DEFAULT         reduce using rule 150 (SwitchBlockStatementGroups -> SwitchBlockStatementGroups SwitchBlockStatementGroup .)


state 456

    (148) SwitchBlock -> LBRACE begin_scope SwitchLabels . end_scope RBRACE
    (151) SwitchBlockStatementGroup -> begin_scope SwitchLabels . BlockStatements end_scope
    (153) SwitchLabels -> SwitchLabels . SwitchLabel
    (291) end_scope -> .
    (105) BlockStatements -> . BlockStatement
    (106) BlockStatements -> . BlockStatements BlockStatement
    (154) SwitchLabel -> . CASE ConstantExpression COLON
    (155) SwitchLabel -> . DEFAULT COLON
    (107) BlockStatement -> . LocalVariableDeclarationStatement
    (108) BlockStatement -> . Statement
    (109) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMI
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (110) LocalVariableDeclaration -> . Type VariableDeclarators
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RBRACE          reduce using rule 291 (end_scope -> .)
    CASE            shift and go to state 458
    DEFAULT         shift and go to state 459
    IDENTIFIER      shift and go to state 128
    IF              shift and go to state 129
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    BOOLEAN         shift and go to state 63
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    BYTE            shift and go to state 69
    SHORT           shift and go to state 70
    INT             shift and go to state 71
    LONG            shift and go to state 72
    CHAR            shift and go to state 73
    FLOAT           shift and go to state 74
    DOUBLE          shift and go to state 75
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    end_scope                      shift and go to state 475
    BlockStatements                shift and go to state 476
    SwitchLabel                    shift and go to state 477
    BlockStatement                 shift and go to state 108
    LocalVariableDeclarationStatement shift and go to state 109
    Statement                      shift and go to state 110
    LocalVariableDeclaration       shift and go to state 111
    StatementWithoutTrailingSubstatement shift and go to state 113
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    Type                           shift and go to state 119
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    PrimitiveType                  shift and go to state 58
    ReferenceType                  shift and go to state 59
    StatementExpression            shift and go to state 133
    NumericType                    shift and go to state 62
    ArrayType                      shift and go to state 64
    ClassType                      shift and go to state 65
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    IntegralType                   shift and go to state 66
    FloatingPointType              shift and go to state 67
    Name                           shift and go to state 146
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Primary                        shift and go to state 151
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 457

    (152) SwitchLabels -> SwitchLabel .

    CASE            reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    DEFAULT         reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    IDENTIFIER      reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    IF              reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    WHILE           reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    FOR             reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    LBRACE          reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    SEMI            reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    SWITCH          reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    DO              reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    BREAK           reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    CONTINUE        reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    RETURN          reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    BOOLEAN         reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    INC             reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    DEC             reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    NEW             reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    BYTE            reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    SHORT           reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    INT             reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    LONG            reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    CHAR            reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    FLOAT           reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    DOUBLE          reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    SUPER           reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    THIS            reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    LPAREN          reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    DECIMAL_LITERAL reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    HEX_LITERAL     reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    BINARY_LITERAL  reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    FLOAT_LITERAL   reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    BOOL_LITERAL    reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    CHAR_LITERAL    reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    STRING_LITERAL  reduce using rule 152 (SwitchLabels -> SwitchLabel .)
    RBRACE          reduce using rule 152 (SwitchLabels -> SwitchLabel .)


state 458

    (154) SwitchLabel -> CASE . ConstantExpression COLON
    (287) ConstantExpression -> . Expression
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    ConstantExpression             shift and go to state 478
    Expression                     shift and go to state 479
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 459

    (155) SwitchLabel -> DEFAULT . COLON

    COLON           shift and go to state 480


state 460

    (158) DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN . end_scope SEMI
    (291) end_scope -> .

    SEMI            reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 481

state 461

    (141) IfThenStatement -> IF begin_scope LPAREN . Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> IF begin_scope LPAREN . Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (143) IfThenElseStatementNoShortIf -> IF begin_scope LPAREN . Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    Expression                     shift and go to state 482
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 462

    (142) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE . begin_scope Statement end_scope
    (290) begin_scope -> .

    IDENTIFIER      reduce using rule 290 (begin_scope -> .)
    IF              reduce using rule 290 (begin_scope -> .)
    WHILE           reduce using rule 290 (begin_scope -> .)
    FOR             reduce using rule 290 (begin_scope -> .)
    LBRACE          reduce using rule 290 (begin_scope -> .)
    SEMI            reduce using rule 290 (begin_scope -> .)
    SWITCH          reduce using rule 290 (begin_scope -> .)
    DO              reduce using rule 290 (begin_scope -> .)
    BREAK           reduce using rule 290 (begin_scope -> .)
    CONTINUE        reduce using rule 290 (begin_scope -> .)
    RETURN          reduce using rule 290 (begin_scope -> .)
    INC             reduce using rule 290 (begin_scope -> .)
    DEC             reduce using rule 290 (begin_scope -> .)
    NEW             reduce using rule 290 (begin_scope -> .)
    SUPER           reduce using rule 290 (begin_scope -> .)
    THIS            reduce using rule 290 (begin_scope -> .)
    LPAREN          reduce using rule 290 (begin_scope -> .)
    DECIMAL_LITERAL reduce using rule 290 (begin_scope -> .)
    HEX_LITERAL     reduce using rule 290 (begin_scope -> .)
    BINARY_LITERAL  reduce using rule 290 (begin_scope -> .)
    FLOAT_LITERAL   reduce using rule 290 (begin_scope -> .)
    BOOL_LITERAL    reduce using rule 290 (begin_scope -> .)
    CHAR_LITERAL    reduce using rule 290 (begin_scope -> .)
    STRING_LITERAL  reduce using rule 290 (begin_scope -> .)

    begin_scope                    shift and go to state 483

state 463

    (132) LabeledStatementNoShortIf -> IDENTIFIER COLON StatementNoShortIf .

    ELSE            reduce using rule 132 (LabeledStatementNoShortIf -> IDENTIFIER COLON StatementNoShortIf .)


state 464

    (156) WhileStatement -> WHILE begin_scope LPAREN . Expression RPAREN Statement end_scope
    (157) WhileStatementNoShortIf -> WHILE begin_scope LPAREN . Expression RPAREN StatementNoShortIf end_scope
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    Expression                     shift and go to state 484
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 465

    (159) ForStatement -> FOR begin_scope LPAREN . ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> FOR begin_scope LPAREN . SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> FOR begin_scope LPAREN . ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> FOR begin_scope LPAREN . ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> FOR begin_scope LPAREN . ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope LPAREN . SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> FOR begin_scope LPAREN . SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> FOR begin_scope LPAREN . SEMI SEMI RPAREN Statement end_scope
    (167) ForStatementNoShortIf -> FOR begin_scope LPAREN . ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (168) ForStatementNoShortIf -> FOR begin_scope LPAREN . SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> FOR begin_scope LPAREN . ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> FOR begin_scope LPAREN . ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> FOR begin_scope LPAREN . ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> FOR begin_scope LPAREN . SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> FOR begin_scope LPAREN . SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> FOR begin_scope LPAREN . SEMI SEMI RPAREN StatementNoShortIf end_scope
    (175) ForInit -> . StatementExpressionList
    (176) ForInit -> . LocalVariableDeclaration
    (178) StatementExpressionList -> . StatementExpression
    (179) StatementExpressionList -> . StatementExpressionList COMMA StatementExpression
    (110) LocalVariableDeclaration -> . Type VariableDeclarators
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    SEMI            shift and go to state 486
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    BOOLEAN         shift and go to state 63
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    BYTE            shift and go to state 69
    SHORT           shift and go to state 70
    INT             shift and go to state 71
    LONG            shift and go to state 72
    CHAR            shift and go to state 73
    FLOAT           shift and go to state 74
    DOUBLE          shift and go to state 75
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    ForInit                        shift and go to state 485
    StatementExpressionList        shift and go to state 368
    LocalVariableDeclaration       shift and go to state 369
    StatementExpression            shift and go to state 370
    Type                           shift and go to state 119
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    PrimitiveType                  shift and go to state 58
    ReferenceType                  shift and go to state 59
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 371
    Primary                        shift and go to state 151
    ClassType                      shift and go to state 65
    NumericType                    shift and go to state 62
    ArrayType                      shift and go to state 64
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    IntegralType                   shift and go to state 66
    FloatingPointType              shift and go to state 67
    Literal                        shift and go to state 159

state 466

    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN . Statement end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 128
    IF              shift and go to state 129
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 487
    StatementWithoutTrailingSubstatement shift and go to state 113
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 467

    (163) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement . end_scope
    (291) end_scope -> .

    RBRACE          reduce using rule 291 (end_scope -> .)
    IDENTIFIER      reduce using rule 291 (end_scope -> .)
    IF              reduce using rule 291 (end_scope -> .)
    WHILE           reduce using rule 291 (end_scope -> .)
    FOR             reduce using rule 291 (end_scope -> .)
    LBRACE          reduce using rule 291 (end_scope -> .)
    SEMI            reduce using rule 291 (end_scope -> .)
    SWITCH          reduce using rule 291 (end_scope -> .)
    DO              reduce using rule 291 (end_scope -> .)
    BREAK           reduce using rule 291 (end_scope -> .)
    CONTINUE        reduce using rule 291 (end_scope -> .)
    RETURN          reduce using rule 291 (end_scope -> .)
    BOOLEAN         reduce using rule 291 (end_scope -> .)
    INC             reduce using rule 291 (end_scope -> .)
    DEC             reduce using rule 291 (end_scope -> .)
    NEW             reduce using rule 291 (end_scope -> .)
    BYTE            reduce using rule 291 (end_scope -> .)
    SHORT           reduce using rule 291 (end_scope -> .)
    INT             reduce using rule 291 (end_scope -> .)
    LONG            reduce using rule 291 (end_scope -> .)
    CHAR            reduce using rule 291 (end_scope -> .)
    FLOAT           reduce using rule 291 (end_scope -> .)
    DOUBLE          reduce using rule 291 (end_scope -> .)
    SUPER           reduce using rule 291 (end_scope -> .)
    THIS            reduce using rule 291 (end_scope -> .)
    LPAREN          reduce using rule 291 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 291 (end_scope -> .)
    HEX_LITERAL     reduce using rule 291 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 291 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 291 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 291 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 291 (end_scope -> .)
    STRING_LITERAL  reduce using rule 291 (end_scope -> .)
    CASE            reduce using rule 291 (end_scope -> .)
    DEFAULT         reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 488

state 468

    (159) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate . RPAREN Statement end_scope

    RPAREN          shift and go to state 489


state 469

    (162) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN . Statement end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 128
    IF              shift and go to state 129
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 490
    StatementWithoutTrailingSubstatement shift and go to state 113
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 470

    (165) ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement . end_scope
    (291) end_scope -> .

    RBRACE          reduce using rule 291 (end_scope -> .)
    IDENTIFIER      reduce using rule 291 (end_scope -> .)
    IF              reduce using rule 291 (end_scope -> .)
    WHILE           reduce using rule 291 (end_scope -> .)
    FOR             reduce using rule 291 (end_scope -> .)
    LBRACE          reduce using rule 291 (end_scope -> .)
    SEMI            reduce using rule 291 (end_scope -> .)
    SWITCH          reduce using rule 291 (end_scope -> .)
    DO              reduce using rule 291 (end_scope -> .)
    BREAK           reduce using rule 291 (end_scope -> .)
    CONTINUE        reduce using rule 291 (end_scope -> .)
    RETURN          reduce using rule 291 (end_scope -> .)
    BOOLEAN         reduce using rule 291 (end_scope -> .)
    INC             reduce using rule 291 (end_scope -> .)
    DEC             reduce using rule 291 (end_scope -> .)
    NEW             reduce using rule 291 (end_scope -> .)
    BYTE            reduce using rule 291 (end_scope -> .)
    SHORT           reduce using rule 291 (end_scope -> .)
    INT             reduce using rule 291 (end_scope -> .)
    LONG            reduce using rule 291 (end_scope -> .)
    CHAR            reduce using rule 291 (end_scope -> .)
    FLOAT           reduce using rule 291 (end_scope -> .)
    DOUBLE          reduce using rule 291 (end_scope -> .)
    SUPER           reduce using rule 291 (end_scope -> .)
    THIS            reduce using rule 291 (end_scope -> .)
    LPAREN          reduce using rule 291 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 291 (end_scope -> .)
    HEX_LITERAL     reduce using rule 291 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 291 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 291 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 291 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 291 (end_scope -> .)
    STRING_LITERAL  reduce using rule 291 (end_scope -> .)
    CASE            reduce using rule 291 (end_scope -> .)
    DEFAULT         reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 491

state 471

    (166) ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .

    RBRACE          reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    IDENTIFIER      reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    IF              reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    WHILE           reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    FOR             reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    LBRACE          reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    SEMI            reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    SWITCH          reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    DO              reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    BREAK           reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    CONTINUE        reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    RETURN          reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    BOOLEAN         reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    INC             reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    DEC             reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    NEW             reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    BYTE            reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    SHORT           reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    INT             reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    LONG            reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    CHAR            reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    FLOAT           reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    DOUBLE          reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    SUPER           reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    THIS            reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    LPAREN          reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    HEX_LITERAL     reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    BINARY_LITERAL  reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    BOOL_LITERAL    reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    CHAR_LITERAL    reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    STRING_LITERAL  reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    CASE            reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    DEFAULT         reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)


state 472

    (160) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN . Statement end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 128
    IF              shift and go to state 129
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 492
    StatementWithoutTrailingSubstatement shift and go to state 113
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 473

    (164) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement . end_scope
    (291) end_scope -> .

    RBRACE          reduce using rule 291 (end_scope -> .)
    IDENTIFIER      reduce using rule 291 (end_scope -> .)
    IF              reduce using rule 291 (end_scope -> .)
    WHILE           reduce using rule 291 (end_scope -> .)
    FOR             reduce using rule 291 (end_scope -> .)
    LBRACE          reduce using rule 291 (end_scope -> .)
    SEMI            reduce using rule 291 (end_scope -> .)
    SWITCH          reduce using rule 291 (end_scope -> .)
    DO              reduce using rule 291 (end_scope -> .)
    BREAK           reduce using rule 291 (end_scope -> .)
    CONTINUE        reduce using rule 291 (end_scope -> .)
    RETURN          reduce using rule 291 (end_scope -> .)
    BOOLEAN         reduce using rule 291 (end_scope -> .)
    INC             reduce using rule 291 (end_scope -> .)
    DEC             reduce using rule 291 (end_scope -> .)
    NEW             reduce using rule 291 (end_scope -> .)
    BYTE            reduce using rule 291 (end_scope -> .)
    SHORT           reduce using rule 291 (end_scope -> .)
    INT             reduce using rule 291 (end_scope -> .)
    LONG            reduce using rule 291 (end_scope -> .)
    CHAR            reduce using rule 291 (end_scope -> .)
    FLOAT           reduce using rule 291 (end_scope -> .)
    DOUBLE          reduce using rule 291 (end_scope -> .)
    SUPER           reduce using rule 291 (end_scope -> .)
    THIS            reduce using rule 291 (end_scope -> .)
    LPAREN          reduce using rule 291 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 291 (end_scope -> .)
    HEX_LITERAL     reduce using rule 291 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 291 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 291 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 291 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 291 (end_scope -> .)
    STRING_LITERAL  reduce using rule 291 (end_scope -> .)
    CASE            reduce using rule 291 (end_scope -> .)
    DEFAULT         reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 493

state 474

    (146) SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels . end_scope RBRACE
    (151) SwitchBlockStatementGroup -> begin_scope SwitchLabels . BlockStatements end_scope
    (153) SwitchLabels -> SwitchLabels . SwitchLabel
    (291) end_scope -> .
    (105) BlockStatements -> . BlockStatement
    (106) BlockStatements -> . BlockStatements BlockStatement
    (154) SwitchLabel -> . CASE ConstantExpression COLON
    (155) SwitchLabel -> . DEFAULT COLON
    (107) BlockStatement -> . LocalVariableDeclarationStatement
    (108) BlockStatement -> . Statement
    (109) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMI
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (110) LocalVariableDeclaration -> . Type VariableDeclarators
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RBRACE          reduce using rule 291 (end_scope -> .)
    CASE            shift and go to state 458
    DEFAULT         shift and go to state 459
    IDENTIFIER      shift and go to state 128
    IF              shift and go to state 129
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    BOOLEAN         shift and go to state 63
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    BYTE            shift and go to state 69
    SHORT           shift and go to state 70
    INT             shift and go to state 71
    LONG            shift and go to state 72
    CHAR            shift and go to state 73
    FLOAT           shift and go to state 74
    DOUBLE          shift and go to state 75
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    end_scope                      shift and go to state 494
    BlockStatements                shift and go to state 476
    SwitchLabel                    shift and go to state 477
    BlockStatement                 shift and go to state 108
    LocalVariableDeclarationStatement shift and go to state 109
    Statement                      shift and go to state 110
    LocalVariableDeclaration       shift and go to state 111
    StatementWithoutTrailingSubstatement shift and go to state 113
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    Type                           shift and go to state 119
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    PrimitiveType                  shift and go to state 58
    ReferenceType                  shift and go to state 59
    StatementExpression            shift and go to state 133
    NumericType                    shift and go to state 62
    ArrayType                      shift and go to state 64
    ClassType                      shift and go to state 65
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    IntegralType                   shift and go to state 66
    FloatingPointType              shift and go to state 67
    Name                           shift and go to state 146
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Primary                        shift and go to state 151
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 475

    (148) SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope . RBRACE

    RBRACE          shift and go to state 495


state 476

    (151) SwitchBlockStatementGroup -> begin_scope SwitchLabels BlockStatements . end_scope
    (106) BlockStatements -> BlockStatements . BlockStatement
    (291) end_scope -> .
    (107) BlockStatement -> . LocalVariableDeclarationStatement
    (108) BlockStatement -> . Statement
    (109) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMI
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (110) LocalVariableDeclaration -> . Type VariableDeclarators
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RBRACE          reduce using rule 291 (end_scope -> .)
    CASE            reduce using rule 291 (end_scope -> .)
    DEFAULT         reduce using rule 291 (end_scope -> .)
    IDENTIFIER      shift and go to state 128
    IF              shift and go to state 129
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    BOOLEAN         shift and go to state 63
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    BYTE            shift and go to state 69
    SHORT           shift and go to state 70
    INT             shift and go to state 71
    LONG            shift and go to state 72
    CHAR            shift and go to state 73
    FLOAT           shift and go to state 74
    DOUBLE          shift and go to state 75
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    end_scope                      shift and go to state 496
    BlockStatement                 shift and go to state 183
    LocalVariableDeclarationStatement shift and go to state 109
    Statement                      shift and go to state 110
    LocalVariableDeclaration       shift and go to state 111
    StatementWithoutTrailingSubstatement shift and go to state 113
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    Type                           shift and go to state 119
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    PrimitiveType                  shift and go to state 58
    ReferenceType                  shift and go to state 59
    StatementExpression            shift and go to state 133
    NumericType                    shift and go to state 62
    ArrayType                      shift and go to state 64
    ClassType                      shift and go to state 65
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    IntegralType                   shift and go to state 66
    FloatingPointType              shift and go to state 67
    Name                           shift and go to state 146
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Primary                        shift and go to state 151
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 477

    (153) SwitchLabels -> SwitchLabels SwitchLabel .

    CASE            reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    DEFAULT         reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    IDENTIFIER      reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    IF              reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    WHILE           reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    FOR             reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    LBRACE          reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    SEMI            reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    SWITCH          reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    DO              reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    BREAK           reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    CONTINUE        reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    RETURN          reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    BOOLEAN         reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    INC             reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    DEC             reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    NEW             reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    BYTE            reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    SHORT           reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    INT             reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    LONG            reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    CHAR            reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    FLOAT           reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    DOUBLE          reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    SUPER           reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    THIS            reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    LPAREN          reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    DECIMAL_LITERAL reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    HEX_LITERAL     reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    BINARY_LITERAL  reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    FLOAT_LITERAL   reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    BOOL_LITERAL    reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    CHAR_LITERAL    reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    STRING_LITERAL  reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)
    RBRACE          reduce using rule 153 (SwitchLabels -> SwitchLabels SwitchLabel .)


state 478

    (154) SwitchLabel -> CASE ConstantExpression . COLON

    COLON           shift and go to state 497


state 479

    (287) ConstantExpression -> Expression .

    COLON           reduce using rule 287 (ConstantExpression -> Expression .)


state 480

    (155) SwitchLabel -> DEFAULT COLON .

    CASE            reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    DEFAULT         reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    IDENTIFIER      reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    IF              reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    WHILE           reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    FOR             reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    LBRACE          reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    SEMI            reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    SWITCH          reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    DO              reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    BREAK           reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    CONTINUE        reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    RETURN          reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    BOOLEAN         reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    INC             reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    DEC             reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    NEW             reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    BYTE            reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    SHORT           reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    INT             reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    LONG            reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    CHAR            reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    FLOAT           reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    DOUBLE          reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    SUPER           reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    THIS            reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    LPAREN          reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    DECIMAL_LITERAL reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    HEX_LITERAL     reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    BINARY_LITERAL  reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    FLOAT_LITERAL   reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    BOOL_LITERAL    reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    CHAR_LITERAL    reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    STRING_LITERAL  reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)
    RBRACE          reduce using rule 155 (SwitchLabel -> DEFAULT COLON .)


state 481

    (158) DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope . SEMI

    SEMI            shift and go to state 498


state 482

    (141) IfThenStatement -> IF begin_scope LPAREN Expression . RPAREN Statement end_scope
    (142) IfThenElseStatement -> IF begin_scope LPAREN Expression . RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (143) IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression . RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope

    RPAREN          shift and go to state 499


state 483

    (142) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope . Statement end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 128
    IF              shift and go to state 129
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 500
    StatementWithoutTrailingSubstatement shift and go to state 113
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 484

    (156) WhileStatement -> WHILE begin_scope LPAREN Expression . RPAREN Statement end_scope
    (157) WhileStatementNoShortIf -> WHILE begin_scope LPAREN Expression . RPAREN StatementNoShortIf end_scope

    RPAREN          shift and go to state 501


state 485

    (159) ForStatement -> FOR begin_scope LPAREN ForInit . SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> FOR begin_scope LPAREN ForInit . SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> FOR begin_scope LPAREN ForInit . SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> FOR begin_scope LPAREN ForInit . SEMI SEMI RPAREN Statement end_scope
    (167) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit . SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit . SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit . SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit . SEMI SEMI RPAREN StatementNoShortIf end_scope

    SEMI            shift and go to state 502


state 486

    (160) ForStatement -> FOR begin_scope LPAREN SEMI . Expression SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope LPAREN SEMI . Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> FOR begin_scope LPAREN SEMI . SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> FOR begin_scope LPAREN SEMI . SEMI RPAREN Statement end_scope
    (168) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI . Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI . Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI . SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI . SEMI RPAREN StatementNoShortIf end_scope
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    SEMI            shift and go to state 503
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    Expression                     shift and go to state 504
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 487

    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement . end_scope
    (291) end_scope -> .

    RBRACE          reduce using rule 291 (end_scope -> .)
    IDENTIFIER      reduce using rule 291 (end_scope -> .)
    IF              reduce using rule 291 (end_scope -> .)
    WHILE           reduce using rule 291 (end_scope -> .)
    FOR             reduce using rule 291 (end_scope -> .)
    LBRACE          reduce using rule 291 (end_scope -> .)
    SEMI            reduce using rule 291 (end_scope -> .)
    SWITCH          reduce using rule 291 (end_scope -> .)
    DO              reduce using rule 291 (end_scope -> .)
    BREAK           reduce using rule 291 (end_scope -> .)
    CONTINUE        reduce using rule 291 (end_scope -> .)
    RETURN          reduce using rule 291 (end_scope -> .)
    BOOLEAN         reduce using rule 291 (end_scope -> .)
    INC             reduce using rule 291 (end_scope -> .)
    DEC             reduce using rule 291 (end_scope -> .)
    NEW             reduce using rule 291 (end_scope -> .)
    BYTE            reduce using rule 291 (end_scope -> .)
    SHORT           reduce using rule 291 (end_scope -> .)
    INT             reduce using rule 291 (end_scope -> .)
    LONG            reduce using rule 291 (end_scope -> .)
    CHAR            reduce using rule 291 (end_scope -> .)
    FLOAT           reduce using rule 291 (end_scope -> .)
    DOUBLE          reduce using rule 291 (end_scope -> .)
    SUPER           reduce using rule 291 (end_scope -> .)
    THIS            reduce using rule 291 (end_scope -> .)
    LPAREN          reduce using rule 291 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 291 (end_scope -> .)
    HEX_LITERAL     reduce using rule 291 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 291 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 291 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 291 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 291 (end_scope -> .)
    STRING_LITERAL  reduce using rule 291 (end_scope -> .)
    CASE            reduce using rule 291 (end_scope -> .)
    DEFAULT         reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 505

state 488

    (163) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .

    RBRACE          reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    IDENTIFIER      reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    IF              reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    WHILE           reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    FOR             reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    LBRACE          reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    SEMI            reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    SWITCH          reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    DO              reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    BREAK           reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    CONTINUE        reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    RETURN          reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    BOOLEAN         reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    INC             reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    DEC             reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    NEW             reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    BYTE            reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    SHORT           reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    INT             reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    LONG            reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    CHAR            reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    FLOAT           reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    DOUBLE          reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    SUPER           reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    THIS            reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    LPAREN          reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    HEX_LITERAL     reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    BINARY_LITERAL  reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    BOOL_LITERAL    reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    CHAR_LITERAL    reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    STRING_LITERAL  reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    CASE            reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    DEFAULT         reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)


state 489

    (159) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN . Statement end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 128
    IF              shift and go to state 129
    WHILE           shift and go to state 131
    FOR             shift and go to state 132
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 506
    StatementWithoutTrailingSubstatement shift and go to state 113
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 490

    (162) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement . end_scope
    (291) end_scope -> .

    RBRACE          reduce using rule 291 (end_scope -> .)
    IDENTIFIER      reduce using rule 291 (end_scope -> .)
    IF              reduce using rule 291 (end_scope -> .)
    WHILE           reduce using rule 291 (end_scope -> .)
    FOR             reduce using rule 291 (end_scope -> .)
    LBRACE          reduce using rule 291 (end_scope -> .)
    SEMI            reduce using rule 291 (end_scope -> .)
    SWITCH          reduce using rule 291 (end_scope -> .)
    DO              reduce using rule 291 (end_scope -> .)
    BREAK           reduce using rule 291 (end_scope -> .)
    CONTINUE        reduce using rule 291 (end_scope -> .)
    RETURN          reduce using rule 291 (end_scope -> .)
    BOOLEAN         reduce using rule 291 (end_scope -> .)
    INC             reduce using rule 291 (end_scope -> .)
    DEC             reduce using rule 291 (end_scope -> .)
    NEW             reduce using rule 291 (end_scope -> .)
    BYTE            reduce using rule 291 (end_scope -> .)
    SHORT           reduce using rule 291 (end_scope -> .)
    INT             reduce using rule 291 (end_scope -> .)
    LONG            reduce using rule 291 (end_scope -> .)
    CHAR            reduce using rule 291 (end_scope -> .)
    FLOAT           reduce using rule 291 (end_scope -> .)
    DOUBLE          reduce using rule 291 (end_scope -> .)
    SUPER           reduce using rule 291 (end_scope -> .)
    THIS            reduce using rule 291 (end_scope -> .)
    LPAREN          reduce using rule 291 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 291 (end_scope -> .)
    HEX_LITERAL     reduce using rule 291 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 291 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 291 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 291 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 291 (end_scope -> .)
    STRING_LITERAL  reduce using rule 291 (end_scope -> .)
    CASE            reduce using rule 291 (end_scope -> .)
    DEFAULT         reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 507

state 491

    (165) ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .

    RBRACE          reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    IDENTIFIER      reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    IF              reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    WHILE           reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    FOR             reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    LBRACE          reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    SEMI            reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    SWITCH          reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    DO              reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    BREAK           reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    CONTINUE        reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    RETURN          reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    BOOLEAN         reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    INC             reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    DEC             reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    NEW             reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    BYTE            reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    SHORT           reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    INT             reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    LONG            reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    CHAR            reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    FLOAT           reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    DOUBLE          reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    SUPER           reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    THIS            reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    LPAREN          reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    HEX_LITERAL     reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    BINARY_LITERAL  reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    BOOL_LITERAL    reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    CHAR_LITERAL    reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    STRING_LITERAL  reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    CASE            reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    DEFAULT         reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)


state 492

    (160) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement . end_scope
    (291) end_scope -> .

    RBRACE          reduce using rule 291 (end_scope -> .)
    IDENTIFIER      reduce using rule 291 (end_scope -> .)
    IF              reduce using rule 291 (end_scope -> .)
    WHILE           reduce using rule 291 (end_scope -> .)
    FOR             reduce using rule 291 (end_scope -> .)
    LBRACE          reduce using rule 291 (end_scope -> .)
    SEMI            reduce using rule 291 (end_scope -> .)
    SWITCH          reduce using rule 291 (end_scope -> .)
    DO              reduce using rule 291 (end_scope -> .)
    BREAK           reduce using rule 291 (end_scope -> .)
    CONTINUE        reduce using rule 291 (end_scope -> .)
    RETURN          reduce using rule 291 (end_scope -> .)
    BOOLEAN         reduce using rule 291 (end_scope -> .)
    INC             reduce using rule 291 (end_scope -> .)
    DEC             reduce using rule 291 (end_scope -> .)
    NEW             reduce using rule 291 (end_scope -> .)
    BYTE            reduce using rule 291 (end_scope -> .)
    SHORT           reduce using rule 291 (end_scope -> .)
    INT             reduce using rule 291 (end_scope -> .)
    LONG            reduce using rule 291 (end_scope -> .)
    CHAR            reduce using rule 291 (end_scope -> .)
    FLOAT           reduce using rule 291 (end_scope -> .)
    DOUBLE          reduce using rule 291 (end_scope -> .)
    SUPER           reduce using rule 291 (end_scope -> .)
    THIS            reduce using rule 291 (end_scope -> .)
    LPAREN          reduce using rule 291 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 291 (end_scope -> .)
    HEX_LITERAL     reduce using rule 291 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 291 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 291 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 291 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 291 (end_scope -> .)
    STRING_LITERAL  reduce using rule 291 (end_scope -> .)
    CASE            reduce using rule 291 (end_scope -> .)
    DEFAULT         reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 508

state 493

    (164) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .

    RBRACE          reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    IDENTIFIER      reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    IF              reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    WHILE           reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    FOR             reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    LBRACE          reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    SEMI            reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    SWITCH          reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    DO              reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    BREAK           reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    CONTINUE        reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    RETURN          reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    BOOLEAN         reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    INC             reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    DEC             reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    NEW             reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    BYTE            reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    SHORT           reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    INT             reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    LONG            reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    CHAR            reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    FLOAT           reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    DOUBLE          reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    SUPER           reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    THIS            reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    LPAREN          reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    HEX_LITERAL     reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    BINARY_LITERAL  reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    BOOL_LITERAL    reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    CHAR_LITERAL    reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    STRING_LITERAL  reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    CASE            reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    DEFAULT         reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)


state 494

    (146) SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope . RBRACE

    RBRACE          shift and go to state 509


state 495

    (148) SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .

    RBRACE          reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    IDENTIFIER      reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    IF              reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    WHILE           reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    FOR             reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    LBRACE          reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    SEMI            reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    SWITCH          reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    DO              reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    BREAK           reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    CONTINUE        reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    RETURN          reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    BOOLEAN         reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    INC             reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    DEC             reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    NEW             reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    BYTE            reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    SHORT           reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    INT             reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    LONG            reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    CHAR            reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    FLOAT           reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    DOUBLE          reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    SUPER           reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    THIS            reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    LPAREN          reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    DECIMAL_LITERAL reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    HEX_LITERAL     reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    BINARY_LITERAL  reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    FLOAT_LITERAL   reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    BOOL_LITERAL    reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    CHAR_LITERAL    reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    STRING_LITERAL  reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    CASE            reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    DEFAULT         reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    ELSE            reduce using rule 148 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)


state 496

    (151) SwitchBlockStatementGroup -> begin_scope SwitchLabels BlockStatements end_scope .

    RBRACE          reduce using rule 151 (SwitchBlockStatementGroup -> begin_scope SwitchLabels BlockStatements end_scope .)
    CASE            reduce using rule 151 (SwitchBlockStatementGroup -> begin_scope SwitchLabels BlockStatements end_scope .)
    DEFAULT         reduce using rule 151 (SwitchBlockStatementGroup -> begin_scope SwitchLabels BlockStatements end_scope .)


state 497

    (154) SwitchLabel -> CASE ConstantExpression COLON .

    CASE            reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    DEFAULT         reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    IDENTIFIER      reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    IF              reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    WHILE           reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    FOR             reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    LBRACE          reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    SEMI            reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    SWITCH          reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    DO              reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    BREAK           reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    CONTINUE        reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    RETURN          reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    BOOLEAN         reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    INC             reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    DEC             reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    NEW             reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    BYTE            reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    SHORT           reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    INT             reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    LONG            reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    CHAR            reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    FLOAT           reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    DOUBLE          reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    SUPER           reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    THIS            reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    LPAREN          reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    DECIMAL_LITERAL reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    HEX_LITERAL     reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    BINARY_LITERAL  reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    FLOAT_LITERAL   reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    BOOL_LITERAL    reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    CHAR_LITERAL    reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    STRING_LITERAL  reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)
    RBRACE          reduce using rule 154 (SwitchLabel -> CASE ConstantExpression COLON .)


state 498

    (158) DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .

    RBRACE          reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    IDENTIFIER      reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    IF              reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    WHILE           reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    FOR             reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    LBRACE          reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    SEMI            reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    SWITCH          reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    DO              reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    BREAK           reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    CONTINUE        reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    RETURN          reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    BOOLEAN         reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    INC             reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    DEC             reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    NEW             reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    BYTE            reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    SHORT           reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    INT             reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    LONG            reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    CHAR            reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    FLOAT           reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    DOUBLE          reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    SUPER           reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    THIS            reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    LPAREN          reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    DECIMAL_LITERAL reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    HEX_LITERAL     reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    BINARY_LITERAL  reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    FLOAT_LITERAL   reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    BOOL_LITERAL    reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    CHAR_LITERAL    reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    STRING_LITERAL  reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    CASE            reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    DEFAULT         reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    ELSE            reduce using rule 158 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)


state 499

    (141) IfThenStatement -> IF begin_scope LPAREN Expression RPAREN . Statement end_scope
    (142) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN . StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (143) IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression RPAREN . StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (117) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (118) StatementNoShortIf -> . LabeledStatementNoShortIf
    (119) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (120) StatementNoShortIf -> . WhileStatementNoShortIf
    (121) StatementNoShortIf -> . ForStatementNoShortIf
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (132) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (143) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (157) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (167) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (168) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 419
    IF              shift and go to state 411
    WHILE           shift and go to state 420
    FOR             shift and go to state 421
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 412
    StatementNoShortIf             shift and go to state 510
    StatementWithoutTrailingSubstatement shift and go to state 414
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    LabeledStatementNoShortIf      shift and go to state 415
    IfThenElseStatementNoShortIf   shift and go to state 416
    WhileStatementNoShortIf        shift and go to state 417
    ForStatementNoShortIf          shift and go to state 418
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 500

    (142) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement . end_scope
    (291) end_scope -> .

    RBRACE          reduce using rule 291 (end_scope -> .)
    IDENTIFIER      reduce using rule 291 (end_scope -> .)
    IF              reduce using rule 291 (end_scope -> .)
    WHILE           reduce using rule 291 (end_scope -> .)
    FOR             reduce using rule 291 (end_scope -> .)
    LBRACE          reduce using rule 291 (end_scope -> .)
    SEMI            reduce using rule 291 (end_scope -> .)
    SWITCH          reduce using rule 291 (end_scope -> .)
    DO              reduce using rule 291 (end_scope -> .)
    BREAK           reduce using rule 291 (end_scope -> .)
    CONTINUE        reduce using rule 291 (end_scope -> .)
    RETURN          reduce using rule 291 (end_scope -> .)
    BOOLEAN         reduce using rule 291 (end_scope -> .)
    INC             reduce using rule 291 (end_scope -> .)
    DEC             reduce using rule 291 (end_scope -> .)
    NEW             reduce using rule 291 (end_scope -> .)
    BYTE            reduce using rule 291 (end_scope -> .)
    SHORT           reduce using rule 291 (end_scope -> .)
    INT             reduce using rule 291 (end_scope -> .)
    LONG            reduce using rule 291 (end_scope -> .)
    CHAR            reduce using rule 291 (end_scope -> .)
    FLOAT           reduce using rule 291 (end_scope -> .)
    DOUBLE          reduce using rule 291 (end_scope -> .)
    SUPER           reduce using rule 291 (end_scope -> .)
    THIS            reduce using rule 291 (end_scope -> .)
    LPAREN          reduce using rule 291 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 291 (end_scope -> .)
    HEX_LITERAL     reduce using rule 291 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 291 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 291 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 291 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 291 (end_scope -> .)
    STRING_LITERAL  reduce using rule 291 (end_scope -> .)
    CASE            reduce using rule 291 (end_scope -> .)
    DEFAULT         reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 511

state 501

    (156) WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN . Statement end_scope
    (157) WhileStatementNoShortIf -> WHILE begin_scope LPAREN Expression RPAREN . StatementNoShortIf end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (117) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (118) StatementNoShortIf -> . LabeledStatementNoShortIf
    (119) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (120) StatementNoShortIf -> . WhileStatementNoShortIf
    (121) StatementNoShortIf -> . ForStatementNoShortIf
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (132) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (143) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (157) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (167) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (168) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 419
    IF              shift and go to state 411
    WHILE           shift and go to state 420
    FOR             shift and go to state 421
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 425
    StatementNoShortIf             shift and go to state 512
    StatementWithoutTrailingSubstatement shift and go to state 414
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    LabeledStatementNoShortIf      shift and go to state 415
    IfThenElseStatementNoShortIf   shift and go to state 416
    WhileStatementNoShortIf        shift and go to state 417
    ForStatementNoShortIf          shift and go to state 418
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 502

    (159) ForStatement -> FOR begin_scope LPAREN ForInit SEMI . Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI . SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> FOR begin_scope LPAREN ForInit SEMI . Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> FOR begin_scope LPAREN ForInit SEMI . SEMI RPAREN Statement end_scope
    (167) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI . Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI . SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI . Expression SEMI RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI . SEMI RPAREN StatementNoShortIf end_scope
    (286) Expression -> . AssignmentExpression
    (268) AssignmentExpression -> . ConditionalExpression
    (269) AssignmentExpression -> . Assignment
    (266) ConditionalExpression -> . ConditionalOrExpression
    (267) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (264) ConditionalOrExpression -> . ConditionalAndExpression
    (265) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (262) ConditionalAndExpression -> . InclusiveOrExpression
    (263) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (260) InclusiveOrExpression -> . ExclusiveOrExpression
    (261) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (258) ExclusiveOrExpression -> . AndExpression
    (259) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (256) AndExpression -> . EqualityExpression
    (257) AndExpression -> . AndExpression BITAND EqualityExpression
    (253) EqualityExpression -> . RelationalExpression
    (254) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (255) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (248) RelationalExpression -> . ShiftExpression
    (249) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (250) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (244) ShiftExpression -> . AdditiveExpression
    (245) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (246) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (241) AdditiveExpression -> . MultiplicativeExpression
    (242) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (243) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (237) MultiplicativeExpression -> . UnaryExpression
    (238) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (239) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (222) UnaryExpression -> . PreIncrementExpression
    (223) UnaryExpression -> . PreDecrementExpression
    (224) UnaryExpression -> . ADD UnaryExpression
    (225) UnaryExpression -> . SUB UnaryExpression
    (226) UnaryExpression -> . UnaryExpressionNotAddSub
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (229) UnaryExpressionNotAddSub -> . PostfixExpression
    (230) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (231) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (232) UnaryExpressionNotAddSub -> . CastExpression
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (233) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (234) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (235) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (236) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC

    SEMI            shift and go to state 513
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 189
    NEW             shift and go to state 204
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167
    ADD             shift and go to state 210
    SUB             shift and go to state 211
    INC             shift and go to state 148
    DEC             shift and go to state 149
    BANG            shift and go to state 217
    TILDE           shift and go to state 218

    Expression                     shift and go to state 514
    AssignmentExpression           shift and go to state 191
    ConditionalExpression          shift and go to state 192
    Assignment                     shift and go to state 193
    ConditionalOrExpression        shift and go to state 194
    LeftHandSide                   shift and go to state 147
    ConditionalAndExpression       shift and go to state 195
    Name                           shift and go to state 196
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    InclusiveOrExpression          shift and go to state 197
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    Primary                        shift and go to state 198
    PrimaryNoNewArray              shift and go to state 199
    ExclusiveOrExpression          shift and go to state 200
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159
    ClassInstanceCreationExpression shift and go to state 201
    MethodInvocation               shift and go to state 202
    AndExpression                  shift and go to state 203
    EqualityExpression             shift and go to state 205
    RelationalExpression           shift and go to state 206
    ShiftExpression                shift and go to state 207
    AdditiveExpression             shift and go to state 208
    MultiplicativeExpression       shift and go to state 209
    UnaryExpression                shift and go to state 212
    PreIncrementExpression         shift and go to state 213
    PreDecrementExpression         shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 215
    PostfixExpression              shift and go to state 216
    CastExpression                 shift and go to state 219
    PostIncrementExpression        shift and go to state 220
    PostDecrementExpression        shift and go to state 221

state 503

    (165) ForStatement -> FOR begin_scope LPAREN SEMI SEMI . ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> FOR begin_scope LPAREN SEMI SEMI . RPAREN Statement end_scope
    (173) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI . ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI . RPAREN StatementNoShortIf end_scope
    (177) ForUpdate -> . StatementExpressionList
    (178) StatementExpressionList -> . StatementExpression
    (179) StatementExpressionList -> . StatementExpressionList COMMA StatementExpression
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RPAREN          shift and go to state 516
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    ForUpdate                      shift and go to state 515
    StatementExpressionList        shift and go to state 430
    StatementExpression            shift and go to state 370
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 504

    (160) ForStatement -> FOR begin_scope LPAREN SEMI Expression . SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope LPAREN SEMI Expression . SEMI RPAREN Statement end_scope
    (168) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression . SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression . SEMI RPAREN StatementNoShortIf end_scope

    SEMI            shift and go to state 517


state 505

    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .

    RBRACE          reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    IDENTIFIER      reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    IF              reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    WHILE           reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    FOR             reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    LBRACE          reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    SEMI            reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    SWITCH          reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    DO              reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    BREAK           reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    CONTINUE        reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    RETURN          reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    BOOLEAN         reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    INC             reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    DEC             reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    NEW             reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    BYTE            reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    SHORT           reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    INT             reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    LONG            reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    CHAR            reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    FLOAT           reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    DOUBLE          reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    SUPER           reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    THIS            reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    LPAREN          reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    HEX_LITERAL     reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    BINARY_LITERAL  reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    BOOL_LITERAL    reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    CHAR_LITERAL    reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    STRING_LITERAL  reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    CASE            reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    DEFAULT         reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)


state 506

    (159) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement . end_scope
    (291) end_scope -> .

    RBRACE          reduce using rule 291 (end_scope -> .)
    IDENTIFIER      reduce using rule 291 (end_scope -> .)
    IF              reduce using rule 291 (end_scope -> .)
    WHILE           reduce using rule 291 (end_scope -> .)
    FOR             reduce using rule 291 (end_scope -> .)
    LBRACE          reduce using rule 291 (end_scope -> .)
    SEMI            reduce using rule 291 (end_scope -> .)
    SWITCH          reduce using rule 291 (end_scope -> .)
    DO              reduce using rule 291 (end_scope -> .)
    BREAK           reduce using rule 291 (end_scope -> .)
    CONTINUE        reduce using rule 291 (end_scope -> .)
    RETURN          reduce using rule 291 (end_scope -> .)
    BOOLEAN         reduce using rule 291 (end_scope -> .)
    INC             reduce using rule 291 (end_scope -> .)
    DEC             reduce using rule 291 (end_scope -> .)
    NEW             reduce using rule 291 (end_scope -> .)
    BYTE            reduce using rule 291 (end_scope -> .)
    SHORT           reduce using rule 291 (end_scope -> .)
    INT             reduce using rule 291 (end_scope -> .)
    LONG            reduce using rule 291 (end_scope -> .)
    CHAR            reduce using rule 291 (end_scope -> .)
    FLOAT           reduce using rule 291 (end_scope -> .)
    DOUBLE          reduce using rule 291 (end_scope -> .)
    SUPER           reduce using rule 291 (end_scope -> .)
    THIS            reduce using rule 291 (end_scope -> .)
    LPAREN          reduce using rule 291 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 291 (end_scope -> .)
    HEX_LITERAL     reduce using rule 291 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 291 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 291 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 291 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 291 (end_scope -> .)
    STRING_LITERAL  reduce using rule 291 (end_scope -> .)
    CASE            reduce using rule 291 (end_scope -> .)
    DEFAULT         reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 518

state 507

    (162) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .

    RBRACE          reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    IDENTIFIER      reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    IF              reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    WHILE           reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    FOR             reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    LBRACE          reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    SEMI            reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    SWITCH          reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    DO              reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    BREAK           reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    CONTINUE        reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    RETURN          reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    BOOLEAN         reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    INC             reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    DEC             reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    NEW             reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    BYTE            reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    SHORT           reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    INT             reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    LONG            reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    CHAR            reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    FLOAT           reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    DOUBLE          reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    SUPER           reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    THIS            reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    LPAREN          reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    HEX_LITERAL     reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    BINARY_LITERAL  reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    BOOL_LITERAL    reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    CHAR_LITERAL    reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    STRING_LITERAL  reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    CASE            reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    DEFAULT         reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)


state 508

    (160) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .

    RBRACE          reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    IDENTIFIER      reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    IF              reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    WHILE           reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    FOR             reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    LBRACE          reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    SEMI            reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    SWITCH          reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    DO              reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    BREAK           reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    CONTINUE        reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    RETURN          reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    BOOLEAN         reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    INC             reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    DEC             reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    NEW             reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    BYTE            reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    SHORT           reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    INT             reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    LONG            reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    CHAR            reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    FLOAT           reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    DOUBLE          reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    SUPER           reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    THIS            reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    LPAREN          reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    HEX_LITERAL     reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    BINARY_LITERAL  reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    BOOL_LITERAL    reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    CHAR_LITERAL    reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    STRING_LITERAL  reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    CASE            reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    DEFAULT         reduce using rule 160 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)


state 509

    (146) SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .

    RBRACE          reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    IDENTIFIER      reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    IF              reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    WHILE           reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    FOR             reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    LBRACE          reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    SEMI            reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    SWITCH          reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    DO              reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    BREAK           reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    CONTINUE        reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    RETURN          reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    BOOLEAN         reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    INC             reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    DEC             reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    NEW             reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    BYTE            reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    SHORT           reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    INT             reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    LONG            reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    CHAR            reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    FLOAT           reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    DOUBLE          reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    SUPER           reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    THIS            reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    LPAREN          reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    DECIMAL_LITERAL reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    HEX_LITERAL     reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    BINARY_LITERAL  reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    FLOAT_LITERAL   reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    BOOL_LITERAL    reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    CHAR_LITERAL    reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    STRING_LITERAL  reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    CASE            reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    DEFAULT         reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    ELSE            reduce using rule 146 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)


state 510

    (142) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf . end_scope ELSE begin_scope Statement end_scope
    (143) IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf . end_scope ELSE begin_scope StatementNoShortIf end_scope
    (291) end_scope -> .

    ELSE            reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 519

state 511

    (142) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .

    RBRACE          reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    IDENTIFIER      reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    IF              reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    WHILE           reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    FOR             reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    LBRACE          reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    SEMI            reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    SWITCH          reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    DO              reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    BREAK           reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    CONTINUE        reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    RETURN          reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    BOOLEAN         reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    INC             reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    DEC             reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    NEW             reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    BYTE            reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    SHORT           reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    INT             reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    LONG            reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    CHAR            reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    FLOAT           reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    DOUBLE          reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    SUPER           reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    THIS            reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    LPAREN          reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    HEX_LITERAL     reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    BINARY_LITERAL  reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    BOOL_LITERAL    reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    CHAR_LITERAL    reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    STRING_LITERAL  reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    CASE            reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    DEFAULT         reduce using rule 142 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)


state 512

    (157) WhileStatementNoShortIf -> WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf . end_scope
    (291) end_scope -> .

    ELSE            reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 520

state 513

    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI . ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI . RPAREN Statement end_scope
    (169) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI . ForUpdate RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI . RPAREN StatementNoShortIf end_scope
    (177) ForUpdate -> . StatementExpressionList
    (178) StatementExpressionList -> . StatementExpression
    (179) StatementExpressionList -> . StatementExpressionList COMMA StatementExpression
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RPAREN          shift and go to state 522
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    ForUpdate                      shift and go to state 521
    StatementExpressionList        shift and go to state 430
    StatementExpression            shift and go to state 370
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 514

    (159) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression . SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression . SEMI RPAREN Statement end_scope
    (167) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression . SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression . SEMI RPAREN StatementNoShortIf end_scope

    SEMI            shift and go to state 523


state 515

    (165) ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate . RPAREN Statement end_scope
    (173) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI ForUpdate . RPAREN StatementNoShortIf end_scope

    RPAREN          shift and go to state 524


state 516

    (166) ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN . Statement end_scope
    (174) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI RPAREN . StatementNoShortIf end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (117) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (118) StatementNoShortIf -> . LabeledStatementNoShortIf
    (119) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (120) StatementNoShortIf -> . WhileStatementNoShortIf
    (121) StatementNoShortIf -> . ForStatementNoShortIf
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (132) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (143) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (157) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (167) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (168) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 419
    IF              shift and go to state 411
    WHILE           shift and go to state 420
    FOR             shift and go to state 421
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 450
    StatementNoShortIf             shift and go to state 525
    StatementWithoutTrailingSubstatement shift and go to state 414
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    LabeledStatementNoShortIf      shift and go to state 415
    IfThenElseStatementNoShortIf   shift and go to state 416
    WhileStatementNoShortIf        shift and go to state 417
    ForStatementNoShortIf          shift and go to state 418
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 517

    (160) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI . ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI . RPAREN Statement end_scope
    (168) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI . ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI . RPAREN StatementNoShortIf end_scope
    (177) ForUpdate -> . StatementExpressionList
    (178) StatementExpressionList -> . StatementExpression
    (179) StatementExpressionList -> . StatementExpressionList COMMA StatementExpression
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RPAREN          shift and go to state 527
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    ForUpdate                      shift and go to state 526
    StatementExpressionList        shift and go to state 430
    StatementExpression            shift and go to state 370
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 518

    (159) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .

    RBRACE          reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    IDENTIFIER      reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    IF              reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    WHILE           reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    FOR             reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    LBRACE          reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    SEMI            reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    SWITCH          reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    DO              reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    BREAK           reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    CONTINUE        reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    RETURN          reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    BOOLEAN         reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    INC             reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    DEC             reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    NEW             reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    BYTE            reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    SHORT           reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    INT             reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    LONG            reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    CHAR            reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    FLOAT           reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    DOUBLE          reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    SUPER           reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    THIS            reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    LPAREN          reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    HEX_LITERAL     reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    BINARY_LITERAL  reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    BOOL_LITERAL    reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    CHAR_LITERAL    reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    STRING_LITERAL  reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    CASE            reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    DEFAULT         reduce using rule 159 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)


state 519

    (142) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope . ELSE begin_scope Statement end_scope
    (143) IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope . ELSE begin_scope StatementNoShortIf end_scope

    ELSE            shift and go to state 528


state 520

    (157) WhileStatementNoShortIf -> WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope .

    ELSE            reduce using rule 157 (WhileStatementNoShortIf -> WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope .)


state 521

    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate . RPAREN Statement end_scope
    (169) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate . RPAREN StatementNoShortIf end_scope

    RPAREN          shift and go to state 529


state 522

    (163) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN . Statement end_scope
    (171) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN . StatementNoShortIf end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (117) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (118) StatementNoShortIf -> . LabeledStatementNoShortIf
    (119) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (120) StatementNoShortIf -> . WhileStatementNoShortIf
    (121) StatementNoShortIf -> . ForStatementNoShortIf
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (132) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (143) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (157) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (167) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (168) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 419
    IF              shift and go to state 411
    WHILE           shift and go to state 420
    FOR             shift and go to state 421
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 467
    StatementNoShortIf             shift and go to state 530
    StatementWithoutTrailingSubstatement shift and go to state 414
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    LabeledStatementNoShortIf      shift and go to state 415
    IfThenElseStatementNoShortIf   shift and go to state 416
    WhileStatementNoShortIf        shift and go to state 417
    ForStatementNoShortIf          shift and go to state 418
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 523

    (159) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI . ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI . RPAREN Statement end_scope
    (167) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI . ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI . RPAREN StatementNoShortIf end_scope
    (177) ForUpdate -> . StatementExpressionList
    (178) StatementExpressionList -> . StatementExpression
    (179) StatementExpressionList -> . StatementExpressionList COMMA StatementExpression
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RPAREN          shift and go to state 532
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    IDENTIFIER      shift and go to state 61
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    ForUpdate                      shift and go to state 531
    StatementExpressionList        shift and go to state 430
    StatementExpression            shift and go to state 370
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 524

    (165) ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN . Statement end_scope
    (173) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN . StatementNoShortIf end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (117) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (118) StatementNoShortIf -> . LabeledStatementNoShortIf
    (119) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (120) StatementNoShortIf -> . WhileStatementNoShortIf
    (121) StatementNoShortIf -> . ForStatementNoShortIf
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (132) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (143) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (157) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (167) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (168) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 419
    IF              shift and go to state 411
    WHILE           shift and go to state 420
    FOR             shift and go to state 421
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 470
    StatementNoShortIf             shift and go to state 533
    StatementWithoutTrailingSubstatement shift and go to state 414
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    LabeledStatementNoShortIf      shift and go to state 415
    IfThenElseStatementNoShortIf   shift and go to state 416
    WhileStatementNoShortIf        shift and go to state 417
    ForStatementNoShortIf          shift and go to state 418
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 525

    (174) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf . end_scope
    (291) end_scope -> .

    ELSE            reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 534

state 526

    (160) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate . RPAREN Statement end_scope
    (168) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate . RPAREN StatementNoShortIf end_scope

    RPAREN          shift and go to state 535


state 527

    (164) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN . Statement end_scope
    (172) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN . StatementNoShortIf end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (117) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (118) StatementNoShortIf -> . LabeledStatementNoShortIf
    (119) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (120) StatementNoShortIf -> . WhileStatementNoShortIf
    (121) StatementNoShortIf -> . ForStatementNoShortIf
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (132) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (143) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (157) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (167) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (168) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 419
    IF              shift and go to state 411
    WHILE           shift and go to state 420
    FOR             shift and go to state 421
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 473
    StatementNoShortIf             shift and go to state 536
    StatementWithoutTrailingSubstatement shift and go to state 414
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    LabeledStatementNoShortIf      shift and go to state 415
    IfThenElseStatementNoShortIf   shift and go to state 416
    WhileStatementNoShortIf        shift and go to state 417
    ForStatementNoShortIf          shift and go to state 418
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 528

    (142) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE . begin_scope Statement end_scope
    (143) IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE . begin_scope StatementNoShortIf end_scope
    (290) begin_scope -> .

    IDENTIFIER      reduce using rule 290 (begin_scope -> .)
    IF              reduce using rule 290 (begin_scope -> .)
    WHILE           reduce using rule 290 (begin_scope -> .)
    FOR             reduce using rule 290 (begin_scope -> .)
    LBRACE          reduce using rule 290 (begin_scope -> .)
    SEMI            reduce using rule 290 (begin_scope -> .)
    SWITCH          reduce using rule 290 (begin_scope -> .)
    DO              reduce using rule 290 (begin_scope -> .)
    BREAK           reduce using rule 290 (begin_scope -> .)
    CONTINUE        reduce using rule 290 (begin_scope -> .)
    RETURN          reduce using rule 290 (begin_scope -> .)
    INC             reduce using rule 290 (begin_scope -> .)
    DEC             reduce using rule 290 (begin_scope -> .)
    NEW             reduce using rule 290 (begin_scope -> .)
    SUPER           reduce using rule 290 (begin_scope -> .)
    THIS            reduce using rule 290 (begin_scope -> .)
    LPAREN          reduce using rule 290 (begin_scope -> .)
    DECIMAL_LITERAL reduce using rule 290 (begin_scope -> .)
    HEX_LITERAL     reduce using rule 290 (begin_scope -> .)
    BINARY_LITERAL  reduce using rule 290 (begin_scope -> .)
    FLOAT_LITERAL   reduce using rule 290 (begin_scope -> .)
    BOOL_LITERAL    reduce using rule 290 (begin_scope -> .)
    CHAR_LITERAL    reduce using rule 290 (begin_scope -> .)
    STRING_LITERAL  reduce using rule 290 (begin_scope -> .)

    begin_scope                    shift and go to state 537

state 529

    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN . Statement end_scope
    (169) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN . StatementNoShortIf end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (117) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (118) StatementNoShortIf -> . LabeledStatementNoShortIf
    (119) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (120) StatementNoShortIf -> . WhileStatementNoShortIf
    (121) StatementNoShortIf -> . ForStatementNoShortIf
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (132) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (143) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (157) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (167) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (168) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 419
    IF              shift and go to state 411
    WHILE           shift and go to state 420
    FOR             shift and go to state 421
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 487
    StatementNoShortIf             shift and go to state 538
    StatementWithoutTrailingSubstatement shift and go to state 414
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    LabeledStatementNoShortIf      shift and go to state 415
    IfThenElseStatementNoShortIf   shift and go to state 416
    WhileStatementNoShortIf        shift and go to state 417
    ForStatementNoShortIf          shift and go to state 418
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 530

    (171) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf . end_scope
    (291) end_scope -> .

    ELSE            reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 539

state 531

    (159) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate . RPAREN Statement end_scope
    (167) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate . RPAREN StatementNoShortIf end_scope

    RPAREN          shift and go to state 540


state 532

    (162) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN . Statement end_scope
    (170) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN . StatementNoShortIf end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (117) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (118) StatementNoShortIf -> . LabeledStatementNoShortIf
    (119) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (120) StatementNoShortIf -> . WhileStatementNoShortIf
    (121) StatementNoShortIf -> . ForStatementNoShortIf
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (132) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (143) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (157) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (167) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (168) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 419
    IF              shift and go to state 411
    WHILE           shift and go to state 420
    FOR             shift and go to state 421
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 490
    StatementNoShortIf             shift and go to state 541
    StatementWithoutTrailingSubstatement shift and go to state 414
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    LabeledStatementNoShortIf      shift and go to state 415
    IfThenElseStatementNoShortIf   shift and go to state 416
    WhileStatementNoShortIf        shift and go to state 417
    ForStatementNoShortIf          shift and go to state 418
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 533

    (173) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf . end_scope
    (291) end_scope -> .

    ELSE            reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 542

state 534

    (174) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope .

    ELSE            reduce using rule 174 (ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope .)


state 535

    (160) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN . Statement end_scope
    (168) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN . StatementNoShortIf end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (117) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (118) StatementNoShortIf -> . LabeledStatementNoShortIf
    (119) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (120) StatementNoShortIf -> . WhileStatementNoShortIf
    (121) StatementNoShortIf -> . ForStatementNoShortIf
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (132) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (143) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (157) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (167) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (168) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 419
    IF              shift and go to state 411
    WHILE           shift and go to state 420
    FOR             shift and go to state 421
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 492
    StatementNoShortIf             shift and go to state 543
    StatementWithoutTrailingSubstatement shift and go to state 414
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    LabeledStatementNoShortIf      shift and go to state 415
    IfThenElseStatementNoShortIf   shift and go to state 416
    WhileStatementNoShortIf        shift and go to state 417
    ForStatementNoShortIf          shift and go to state 418
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 536

    (172) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf . end_scope
    (291) end_scope -> .

    ELSE            reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 544

state 537

    (142) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope . Statement end_scope
    (143) IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope . StatementNoShortIf end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (117) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (118) StatementNoShortIf -> . LabeledStatementNoShortIf
    (119) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (120) StatementNoShortIf -> . WhileStatementNoShortIf
    (121) StatementNoShortIf -> . ForStatementNoShortIf
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (132) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (143) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (157) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (167) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (168) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 419
    IF              shift and go to state 411
    WHILE           shift and go to state 420
    FOR             shift and go to state 421
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    StatementNoShortIf             shift and go to state 545
    Statement                      shift and go to state 500
    StatementWithoutTrailingSubstatement shift and go to state 414
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    LabeledStatementNoShortIf      shift and go to state 415
    IfThenElseStatementNoShortIf   shift and go to state 416
    WhileStatementNoShortIf        shift and go to state 417
    ForStatementNoShortIf          shift and go to state 418
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 538

    (169) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf . end_scope
    (291) end_scope -> .

    ELSE            reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 546

state 539

    (171) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope .

    ELSE            reduce using rule 171 (ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope .)


state 540

    (159) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN . Statement end_scope
    (167) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN . StatementNoShortIf end_scope
    (111) Statement -> . StatementWithoutTrailingSubstatement
    (112) Statement -> . LabeledStatement
    (113) Statement -> . IfThenStatement
    (114) Statement -> . IfThenElseStatement
    (115) Statement -> . WhileStatement
    (116) Statement -> . ForStatement
    (117) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (118) StatementNoShortIf -> . LabeledStatementNoShortIf
    (119) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (120) StatementNoShortIf -> . WhileStatementNoShortIf
    (121) StatementNoShortIf -> . ForStatementNoShortIf
    (122) StatementWithoutTrailingSubstatement -> . Block
    (123) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (124) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (125) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (126) StatementWithoutTrailingSubstatement -> . DoStatement
    (127) StatementWithoutTrailingSubstatement -> . BreakStatement
    (128) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (129) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (131) LabeledStatement -> . IDENTIFIER COLON Statement
    (141) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (142) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (156) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (160) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (132) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (143) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (157) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (167) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (168) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (103) Block -> . LBRACE RBRACE
    (104) Block -> . LBRACE BlockStatements RBRACE
    (130) EmptyStatement -> . SEMI
    (133) ExpressionStatement -> . StatementExpression SEMI
    (144) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (158) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (180) BreakStatement -> . BREAK IDENTIFIER SEMI
    (181) BreakStatement -> . BREAK SEMI
    (182) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (183) ContinueStatement -> . CONTINUE SEMI
    (184) ReturnStatement -> . RETURN Expression SEMI
    (185) ReturnStatement -> . RETURN SEMI
    (134) StatementExpression -> . Assignment
    (135) StatementExpression -> . PreIncrementExpression
    (136) StatementExpression -> . PreDecrementExpression
    (137) StatementExpression -> . PostIncrementExpression
    (138) StatementExpression -> . PostDecrementExpression
    (139) StatementExpression -> . MethodInvocation
    (140) StatementExpression -> . ClassInstanceCreationExpression
    (270) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (227) PreIncrementExpression -> . INC UnaryExpression
    (228) PreDecrementExpression -> . DEC UnaryExpression
    (220) PostIncrementExpression -> . PostfixExpression INC
    (221) PostDecrementExpression -> . PostfixExpression DEC
    (210) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (211) MethodInvocation -> . Name LPAREN RPAREN
    (212) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (195) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (196) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (271) LeftHandSide -> . Name
    (272) LeftHandSide -> . FieldAccess
    (273) LeftHandSide -> . ArrayAccess
    (216) PostfixExpression -> . Primary
    (217) PostfixExpression -> . Name
    (218) PostfixExpression -> . PostIncrementExpression
    (219) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (186) Primary -> . PrimaryNoNewArray
    (187) Primary -> . ArrayCreationExpression
    (208) FieldAccess -> . Primary DOT IDENTIFIER
    (209) FieldAccess -> . SUPER DOT IDENTIFIER
    (214) ArrayAccess -> . Name LBRACK Expression RBRACK
    (215) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) PrimaryNoNewArray -> . Literal
    (189) PrimaryNoNewArray -> . THIS
    (190) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (191) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (192) PrimaryNoNewArray -> . FieldAccess
    (193) PrimaryNoNewArray -> . MethodInvocation
    (194) PrimaryNoNewArray -> . ArrayAccess
    (199) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (200) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (201) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 419
    IF              shift and go to state 411
    WHILE           shift and go to state 420
    FOR             shift and go to state 421
    LBRACE          shift and go to state 93
    SEMI            shift and go to state 112
    SWITCH          shift and go to state 134
    DO              shift and go to state 135
    BREAK           shift and go to state 136
    CONTINUE        shift and go to state 137
    RETURN          shift and go to state 138
    INC             shift and go to state 148
    DEC             shift and go to state 149
    NEW             shift and go to state 152
    SUPER           shift and go to state 158
    THIS            shift and go to state 160
    LPAREN          shift and go to state 130
    DECIMAL_LITERAL shift and go to state 161
    HEX_LITERAL     shift and go to state 162
    BINARY_LITERAL  shift and go to state 163
    FLOAT_LITERAL   shift and go to state 164
    BOOL_LITERAL    shift and go to state 165
    CHAR_LITERAL    shift and go to state 166
    STRING_LITERAL  shift and go to state 167

    Statement                      shift and go to state 506
    StatementNoShortIf             shift and go to state 547
    StatementWithoutTrailingSubstatement shift and go to state 414
    LabeledStatement               shift and go to state 114
    IfThenStatement                shift and go to state 115
    IfThenElseStatement            shift and go to state 116
    WhileStatement                 shift and go to state 117
    ForStatement                   shift and go to state 118
    LabeledStatementNoShortIf      shift and go to state 415
    IfThenElseStatementNoShortIf   shift and go to state 416
    WhileStatementNoShortIf        shift and go to state 417
    ForStatementNoShortIf          shift and go to state 418
    Block                          shift and go to state 120
    EmptyStatement                 shift and go to state 121
    ExpressionStatement            shift and go to state 122
    SwitchStatement                shift and go to state 123
    DoStatement                    shift and go to state 124
    BreakStatement                 shift and go to state 125
    ContinueStatement              shift and go to state 126
    ReturnStatement                shift and go to state 127
    StatementExpression            shift and go to state 133
    Assignment                     shift and go to state 139
    PreIncrementExpression         shift and go to state 140
    PreDecrementExpression         shift and go to state 141
    PostIncrementExpression        shift and go to state 142
    PostDecrementExpression        shift and go to state 143
    MethodInvocation               shift and go to state 144
    ClassInstanceCreationExpression shift and go to state 145
    LeftHandSide                   shift and go to state 147
    PostfixExpression              shift and go to state 150
    Name                           shift and go to state 277
    Primary                        shift and go to state 151
    FieldAccess                    shift and go to state 154
    ArrayAccess                    shift and go to state 155
    SimpleName                     shift and go to state 153
    QualifiedName                  shift and go to state 76
    PrimaryNoNewArray              shift and go to state 156
    ArrayCreationExpression        shift and go to state 157
    Literal                        shift and go to state 159

state 541

    (170) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf . end_scope
    (291) end_scope -> .

    ELSE            reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 548

state 542

    (173) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope .

    ELSE            reduce using rule 173 (ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope .)


state 543

    (168) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf . end_scope
    (291) end_scope -> .

    ELSE            reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 549

state 544

    (172) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope .

    ELSE            reduce using rule 172 (ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope .)


state 545

    (143) IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf . end_scope
    (291) end_scope -> .

    ELSE            reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 550

state 546

    (169) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope .

    ELSE            reduce using rule 169 (ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope .)


state 547

    (167) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf . end_scope
    (291) end_scope -> .

    ELSE            reduce using rule 291 (end_scope -> .)

    end_scope                      shift and go to state 551

state 548

    (170) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope .

    ELSE            reduce using rule 170 (ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope .)


state 549

    (168) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope .

    ELSE            reduce using rule 168 (ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope .)


state 550

    (143) IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope .

    ELSE            reduce using rule 143 (IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope .)


state 551

    (167) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope .

    ELSE            reduce using rule 167 (ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for STATIC in state 41 resolved as shift
WARNING: shift/reduce conflict for STATIC in state 45 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 57 resolved as shift
