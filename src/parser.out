Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Goal
Rule 1     Goal -> CompilationUnit
Rule 2     Literal -> DECIMAL_LITERAL
Rule 3     Literal -> HEX_LITERAL
Rule 4     Literal -> BINARY_LITERAL
Rule 5     Literal -> FLOAT_LITERAL
Rule 6     Literal -> BOOL_LITERAL
Rule 7     Literal -> CHAR_LITERAL
Rule 8     Literal -> STRING_LITERAL
Rule 9     Type -> PrimitiveType
Rule 10    Type -> ReferenceType
Rule 11    PrimitiveType -> NumericType
Rule 12    PrimitiveType -> BOOLEAN
Rule 13    NumericType -> IntegralType
Rule 14    NumericType -> FloatingPointType
Rule 15    IntegralType -> BYTE
Rule 16    IntegralType -> SHORT
Rule 17    IntegralType -> INT
Rule 18    IntegralType -> LONG
Rule 19    IntegralType -> CHAR
Rule 20    FloatingPointType -> FLOAT
Rule 21    FloatingPointType -> DOUBLE
Rule 22    ReferenceType -> ArrayType
Rule 23    ReferenceType -> ClassType
Rule 24    ClassType -> Name
Rule 25    ArrayType -> PrimitiveType Dims
Rule 26    ArrayType -> Name Dims
Rule 27    Name -> SimpleName
Rule 28    Name -> QualifiedName
Rule 29    SimpleName -> IDENTIFIER
Rule 30    QualifiedName -> Name DOT IDENTIFIER
Rule 31    CompilationUnit -> PackageDeclaration ImportDeclarations TypeDeclarations
Rule 32    CompilationUnit -> PackageDeclaration ImportDeclarations
Rule 33    CompilationUnit -> PackageDeclaration
Rule 34    CompilationUnit -> PackageDeclaration TypeDeclarations
Rule 35    CompilationUnit -> ImportDeclarations
Rule 36    CompilationUnit -> ImportDeclarations TypeDeclarations
Rule 37    CompilationUnit -> TypeDeclarations
Rule 38    ImportDeclarations -> ImportDeclaration
Rule 39    ImportDeclarations -> ImportDeclarations ImportDeclaration
Rule 40    TypeDeclarations -> TypeDeclaration
Rule 41    TypeDeclarations -> TypeDeclarations TypeDeclaration
Rule 42    PackageDeclaration -> PACKAGE IDENTIFIER SEMI
Rule 43    ImportDeclaration -> SingleTypeImportDeclaration
Rule 44    ImportDeclaration -> TypeImportOnDemandDeclaration
Rule 45    SingleTypeImportDeclaration -> IMPORT import_identifier SEMI
Rule 46    TypeImportOnDemandDeclaration -> IMPORT import_identifier DOT MUL SEMI
Rule 47    import_identifier -> import_identifier DOT IDENTIFIER
Rule 48    import_identifier -> IDENTIFIER
Rule 49    TypeDeclaration -> ClassDeclaration
Rule 50    TypeDeclaration -> SEMI
Rule 51    Modifiers -> Modifier
Rule 52    Modifiers -> Modifiers Modifier
Rule 53    Modifier -> STATIC
Rule 54    Modifier -> FINAL
Rule 55    Modifier -> PRIVATE
Rule 56    Modifier -> PROTECTED
Rule 57    Modifier -> PUBLIC
Rule 58    ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody
Rule 59    ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody
Rule 60    ClassBody -> LBRACE RBRACE
Rule 61    ClassBody -> LBRACE ClassBodyDeclarations RBRACE
Rule 62    ClassBodyDeclarations -> ClassBodyDeclaration
Rule 63    ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration
Rule 64    ClassBodyDeclaration -> ClassMemberDeclaration
Rule 65    ClassBodyDeclaration -> ConstructorDeclaration
Rule 66    ClassBodyDeclaration -> StaticInitializer
Rule 67    ClassMemberDeclaration -> FieldDeclaration
Rule 68    ClassMemberDeclaration -> MethodDeclaration
Rule 69    FieldDeclaration -> Modifiers Type VariableDeclarators SEMI
Rule 70    FieldDeclaration -> Type VariableDeclarators SEMI
Rule 71    VariableDeclarators -> VariableDeclarator
Rule 72    VariableDeclarators -> VariableDeclarators COMMA VariableDeclarator
Rule 73    VariableDeclarator -> VariableDeclaratorId
Rule 74    VariableDeclarator -> VariableDeclaratorId ASSIGN VariableInitializer
Rule 75    VariableDeclaratorId -> IDENTIFIER
Rule 76    VariableDeclaratorId -> IDENTIFIER Dims
Rule 77    VariableInitializer -> Expression
Rule 78    VariableInitializer -> ArrayInitializer
Rule 79    MethodDeclaration -> MethodHeader MethodBody
Rule 80    MethodHeader -> Modifiers Type MethodDeclarator
Rule 81    MethodHeader -> Type MethodDeclarator
Rule 82    MethodHeader -> Modifiers VOID MethodDeclarator
Rule 83    MethodHeader -> VOID MethodDeclarator
Rule 84    MethodDeclarator -> IDENTIFIER LPAREN RPAREN
Rule 85    MethodDeclarator -> IDENTIFIER LPAREN FormalParameterList RPAREN
Rule 86    FormalParameterList -> FormalParameter
Rule 87    FormalParameterList -> FormalParameterList COMMA FormalParameter
Rule 88    FormalParameter -> Type VariableDeclaratorId
Rule 89    MethodBody -> Block
Rule 90    MethodBody -> SEMI
Rule 91    StaticInitializer -> begin_scope STATIC Block end_scope
Rule 92    ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody
Rule 93    ConstructorDeclaration -> ConstructorDeclarator ConstructorBody
Rule 94    ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN
Rule 95    ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN
Rule 96    ConstructorBody -> <empty>
Rule 97    ConstructorBody -> LBRACE BlockStatements RBRACE
Rule 98    ConstructorBody -> LBRACE RBRACE
Rule 99    ExplicitConstructorInvocation -> THIS LPAREN ArgumentList RPAREN SEMI
Rule 100   ExplicitConstructorInvocation -> THIS LPAREN RPAREN SEMI
Rule 101   ArrayInitializer -> LBRACE VariableInitializers RBRACE
Rule 102   ArrayInitializer -> LBRACE RBRACE
Rule 103   VariableInitializers -> VariableInitializer
Rule 104   VariableInitializers -> VariableInitializers COMMA VariableInitializer
Rule 105   Block -> LBRACE RBRACE
Rule 106   Block -> LBRACE BlockStatements RBRACE
Rule 107   BlockStatements -> BlockStatement
Rule 108   BlockStatements -> BlockStatements BlockStatement
Rule 109   BlockStatement -> LocalVariableDeclarationStatement
Rule 110   BlockStatement -> Statement
Rule 111   LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI
Rule 112   LocalVariableDeclaration -> Type VariableDeclarators
Rule 113   Statement -> StatementWithoutTrailingSubstatement
Rule 114   Statement -> LabeledStatement
Rule 115   Statement -> IfThenStatement
Rule 116   Statement -> IfThenElseStatement
Rule 117   Statement -> WhileStatement
Rule 118   Statement -> ForStatement
Rule 119   StatementNoShortIf -> StatementWithoutTrailingSubstatement
Rule 120   StatementNoShortIf -> LabeledStatementNoShortIf
Rule 121   StatementNoShortIf -> IfThenElseStatementNoShortIf
Rule 122   StatementNoShortIf -> WhileStatementNoShortIf
Rule 123   StatementNoShortIf -> ForStatementNoShortIf
Rule 124   StatementWithoutTrailingSubstatement -> Block
Rule 125   StatementWithoutTrailingSubstatement -> EmptyStatement
Rule 126   StatementWithoutTrailingSubstatement -> ExpressionStatement
Rule 127   StatementWithoutTrailingSubstatement -> SwitchStatement
Rule 128   StatementWithoutTrailingSubstatement -> DoStatement
Rule 129   StatementWithoutTrailingSubstatement -> BreakStatement
Rule 130   StatementWithoutTrailingSubstatement -> ContinueStatement
Rule 131   StatementWithoutTrailingSubstatement -> ReturnStatement
Rule 132   EmptyStatement -> SEMI
Rule 133   LabeledStatement -> IDENTIFIER COLON Statement
Rule 134   LabeledStatementNoShortIf -> IDENTIFIER COLON StatementNoShortIf
Rule 135   ExpressionStatement -> StatementExpression SEMI
Rule 136   StatementExpression -> Assignment
Rule 137   StatementExpression -> PreIncrementExpression
Rule 138   StatementExpression -> PreDecrementExpression
Rule 139   StatementExpression -> PostIncrementExpression
Rule 140   StatementExpression -> PostDecrementExpression
Rule 141   StatementExpression -> MethodInvocation
Rule 142   StatementExpression -> ClassInstanceCreationExpression
Rule 143   IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope
Rule 144   IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
Rule 145   IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
Rule 146   SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock
Rule 147   SwitchBlock -> LBRACE RBRACE
Rule 148   SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE
Rule 149   SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE
Rule 150   SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE
Rule 151   SwitchBlockStatementGroups -> SwitchBlockStatementGroup
Rule 152   SwitchBlockStatementGroups -> SwitchBlockStatementGroups SwitchBlockStatementGroup
Rule 153   SwitchBlockStatementGroup -> begin_scope SwitchLabels BlockStatements end_scope
Rule 154   SwitchLabels -> SwitchLabel
Rule 155   SwitchLabels -> SwitchLabels SwitchLabel
Rule 156   SwitchLabel -> CASE ConstantExpression COLON
Rule 157   SwitchLabel -> DEFAULT COLON
Rule 158   WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
Rule 159   WhileStatementNoShortIf -> WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
Rule 160   DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
Rule 161   ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
Rule 162   ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
Rule 163   ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
Rule 164   ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
Rule 165   ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
Rule 166   ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
Rule 167   ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
Rule 168   ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
Rule 169   ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
Rule 170   ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
Rule 171   ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
Rule 172   ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
Rule 173   ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
Rule 174   ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
Rule 175   ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
Rule 176   ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
Rule 177   ForInit -> StatementExpressionList
Rule 178   ForInit -> LocalVariableDeclaration
Rule 179   ForUpdate -> StatementExpressionList
Rule 180   StatementExpressionList -> StatementExpression
Rule 181   StatementExpressionList -> StatementExpressionList COMMA StatementExpression
Rule 182   BreakStatement -> BREAK IDENTIFIER SEMI
Rule 183   BreakStatement -> BREAK SEMI
Rule 184   ContinueStatement -> CONTINUE IDENTIFIER SEMI
Rule 185   ContinueStatement -> CONTINUE SEMI
Rule 186   ReturnStatement -> RETURN Expression SEMI
Rule 187   ReturnStatement -> RETURN SEMI
Rule 188   Primary -> PrimaryNoNewArray
Rule 189   Primary -> ArrayCreationExpression
Rule 190   PrimaryNoNewArray -> Literal
Rule 191   PrimaryNoNewArray -> THIS
Rule 192   PrimaryNoNewArray -> LPAREN Expression RPAREN
Rule 193   PrimaryNoNewArray -> ClassInstanceCreationExpression
Rule 194   PrimaryNoNewArray -> FieldAccess
Rule 195   PrimaryNoNewArray -> MethodInvocation
Rule 196   PrimaryNoNewArray -> ArrayAccess
Rule 197   ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN
Rule 198   ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN
Rule 199   ArgumentList -> Expression
Rule 200   ArgumentList -> ArgumentList COMMA Expression
Rule 201   ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims
Rule 202   ArrayCreationExpression -> NEW PrimitiveType DimExprs
Rule 203   ArrayCreationExpression -> NEW ClassType DimExprs Dims
Rule 204   ArrayCreationExpression -> NEW ClassType DimExprs
Rule 205   DimExprs -> DimExpr
Rule 206   DimExprs -> DimExprs DimExpr
Rule 207   DimExpr -> LBRACK Expression RBRACK
Rule 208   Dims -> LBRACK RBRACK
Rule 209   Dims -> Dims LBRACK RBRACK
Rule 210   FieldAccess -> Primary DOT Name
Rule 211   FieldAccess -> SUPER DOT Name
Rule 212   MethodInvocation -> Name LPAREN ArgumentList RPAREN
Rule 213   MethodInvocation -> Name LPAREN RPAREN
Rule 214   MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
Rule 215   MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN
Rule 216   ArrayAccess -> Name LBRACK Expression RBRACK
Rule 217   ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK
Rule 218   PostfixExpression -> Primary
Rule 219   PostfixExpression -> Name
Rule 220   PostfixExpression -> PostIncrementExpression
Rule 221   PostfixExpression -> PostDecrementExpression
Rule 222   PostIncrementExpression -> PostfixExpression INC
Rule 223   PostDecrementExpression -> PostfixExpression DEC
Rule 224   UnaryExpression -> PreIncrementExpression
Rule 225   UnaryExpression -> PreDecrementExpression
Rule 226   UnaryExpression -> ADD UnaryExpression
Rule 227   UnaryExpression -> SUB UnaryExpression
Rule 228   UnaryExpression -> UnaryExpressionNotAddSub
Rule 229   PreIncrementExpression -> INC UnaryExpression
Rule 230   PreDecrementExpression -> DEC UnaryExpression
Rule 231   UnaryExpressionNotAddSub -> PostfixExpression
Rule 232   UnaryExpressionNotAddSub -> BANG UnaryExpression
Rule 233   UnaryExpressionNotAddSub -> TILDE UnaryExpression
Rule 234   UnaryExpressionNotAddSub -> CastExpression
Rule 235   CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression
Rule 236   CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression
Rule 237   CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub
Rule 238   CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
Rule 239   MultiplicativeExpression -> UnaryExpression
Rule 240   MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression
Rule 241   MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression
Rule 242   MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression
Rule 243   AdditiveExpression -> MultiplicativeExpression
Rule 244   AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression
Rule 245   AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression
Rule 246   ShiftExpression -> AdditiveExpression
Rule 247   ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression
Rule 248   ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression
Rule 249   ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression
Rule 250   RelationalExpression -> ShiftExpression
Rule 251   RelationalExpression -> RelationalExpression LT ShiftExpression
Rule 252   RelationalExpression -> RelationalExpression GT ShiftExpression
Rule 253   RelationalExpression -> RelationalExpression LE ShiftExpression
Rule 254   RelationalExpression -> RelationalExpression GE ShiftExpression
Rule 255   EqualityExpression -> RelationalExpression
Rule 256   EqualityExpression -> EqualityExpression EQUAL RelationalExpression
Rule 257   EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression
Rule 258   AndExpression -> EqualityExpression
Rule 259   AndExpression -> AndExpression BITAND EqualityExpression
Rule 260   ExclusiveOrExpression -> AndExpression
Rule 261   ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression
Rule 262   InclusiveOrExpression -> ExclusiveOrExpression
Rule 263   InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression
Rule 264   ConditionalAndExpression -> InclusiveOrExpression
Rule 265   ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression
Rule 266   ConditionalOrExpression -> ConditionalAndExpression
Rule 267   ConditionalOrExpression -> ConditionalOrExpression OR ConditionalAndExpression
Rule 268   ConditionalExpression -> ConditionalOrExpression
Rule 269   ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
Rule 270   AssignmentExpression -> ConditionalExpression
Rule 271   AssignmentExpression -> Assignment
Rule 272   Assignment -> LeftHandSide AssignmentOperator AssignmentExpression
Rule 273   LeftHandSide -> Name
Rule 274   LeftHandSide -> FieldAccess
Rule 275   LeftHandSide -> ArrayAccess
Rule 276   AssignmentOperator -> ASSIGN
Rule 277   AssignmentOperator -> ADD_ASSIGN
Rule 278   AssignmentOperator -> SUB_ASSIGN
Rule 279   AssignmentOperator -> MUL_ASSIGN
Rule 280   AssignmentOperator -> DIV_ASSIGN
Rule 281   AssignmentOperator -> AND_ASSIGN
Rule 282   AssignmentOperator -> OR_ASSIGN
Rule 283   AssignmentOperator -> XOR_ASSIGN
Rule 284   AssignmentOperator -> MOD_ASSIGN
Rule 285   AssignmentOperator -> LSHIFT_ASSIGN
Rule 286   AssignmentOperator -> RSHIFT_ASSIGN
Rule 287   AssignmentOperator -> URSHIFT_ASSIGN
Rule 288   Expression -> AssignmentExpression
Rule 289   ConstantExpression -> Expression
Rule 290   decl_mark -> <empty>
Rule 291   decl_mark_2 -> <empty>
Rule 292   begin_scope -> <empty>
Rule 293   end_scope -> <empty>

Terminals, with rules where they appear

ADD                  : 226 244
ADD_ASSIGN           : 277
AND                  : 265
AND_ASSIGN           : 281
ASSIGN               : 74 276
BANG                 : 232
BINARY_LITERAL       : 4
BITAND               : 259
BITOR                : 263
BOOLEAN              : 12
BOOL_LITERAL         : 6
BREAK                : 182 183
BYTE                 : 15
CARET                : 261
CASE                 : 156
CHAR                 : 19
CHAR_LITERAL         : 7
CLASS                : 58 59
COLON                : 133 134 156 157 269
COMMA                : 72 87 104 181 200
CONTINUE             : 184 185
DEC                  : 223 230
DECIMAL_LITERAL      : 2
DEFAULT              : 157
DIV                  : 241
DIV_ASSIGN           : 280
DO                   : 160
DOT                  : 30 46 47 210 211 214 215
DOUBLE               : 21
ELSE                 : 144 145
EQUAL                : 256
FINAL                : 54
FLOAT                : 20
FLOAT_LITERAL        : 5
FOR                  : 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176
GE                   : 254
GT                   : 252
HEX_LITERAL          : 3
IDENTIFIER           : 29 30 42 47 48 58 59 75 76 84 85 133 134 182 184 214 215
IF                   : 143 144 145
IMPORT               : 45 46
INC                  : 222 229
INT                  : 17
LBRACE               : 60 61 97 98 101 102 105 106 147 148 149 150
LBRACK               : 207 208 209 216 217
LE                   : 253
LONG                 : 18
LPAREN               : 84 85 94 95 99 100 143 144 145 146 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 192 197 198 212 213 214 215 235 236 237 238
LSHIFT               : 247
LSHIFT_ASSIGN        : 285
LT                   : 251
MOD                  : 242
MOD_ASSIGN           : 284
MUL                  : 46 240
MUL_ASSIGN           : 279
NEW                  : 197 198 201 202 203 204
NOTEQUAL             : 257
OR                   : 267
OR_ASSIGN            : 282
PACKAGE              : 42
PRIVATE              : 55
PROTECTED            : 56
PUBLIC               : 57
QUESTION             : 269
RBRACE               : 60 61 97 98 101 102 105 106 147 148 149 150
RBRACK               : 207 208 209 216 217
RETURN               : 186 187
RPAREN               : 84 85 94 95 99 100 143 144 145 146 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 192 197 198 212 213 214 215 235 236 237 238
RSHIFT               : 248
RSHIFT_ASSIGN        : 286
SEMI                 : 42 45 46 50 69 70 90 99 100 111 132 135 160 161 161 162 162 163 163 164 164 165 165 166 166 167 167 168 168 169 169 170 170 171 171 172 172 173 173 174 174 175 175 176 176 182 183 184 185 186 187
SHORT                : 16
STATIC               : 53 91
STRING_LITERAL       : 8
SUB                  : 227 245
SUB_ASSIGN           : 278
SUPER                : 211
SWITCH               : 146
THIS                 : 99 100 191
TILDE                : 233
URSHIFT              : 249
URSHIFT_ASSIGN       : 287
VOID                 : 82 83
WHILE                : 158 159 160
XOR_ASSIGN           : 283
error                : 

Nonterminals, with rules where they appear

AdditiveExpression   : 244 245 246 247 248 249
AndExpression        : 259 260 261
ArgumentList         : 99 198 200 212 214
ArrayAccess          : 196 275
ArrayCreationExpression : 189
ArrayInitializer     : 78
ArrayType            : 22
Assignment           : 136 271
AssignmentExpression : 272 288
AssignmentOperator   : 272
Block                : 89 91 124
BlockStatement       : 107 108
BlockStatements      : 97 106 108 153
BreakStatement       : 129
CastExpression       : 234
ClassBody            : 58 59
ClassBodyDeclaration : 62 63
ClassBodyDeclarations : 61 63
ClassDeclaration     : 49
ClassInstanceCreationExpression : 142 193
ClassMemberDeclaration : 64
ClassType            : 23 197 198 203 204
CompilationUnit      : 1
ConditionalAndExpression : 265 266 267
ConditionalExpression : 269 270
ConditionalOrExpression : 267 268 269
ConstantExpression   : 156
ConstructorBody      : 92 93
ConstructorDeclaration : 65
ConstructorDeclarator : 92 93
ContinueStatement    : 130
DimExpr              : 205 206
DimExprs             : 201 202 203 204 206
Dims                 : 25 26 76 201 203 209 235 238
DoStatement          : 128
EmptyStatement       : 125
EqualityExpression   : 256 257 258 259
ExclusiveOrExpression : 261 262 263
ExplicitConstructorInvocation : 
Expression           : 77 143 144 145 146 158 159 160 161 162 164 166 169 170 172 174 186 192 199 200 207 216 217 237 269 289
ExpressionStatement  : 126
FieldAccess          : 194 274
FieldDeclaration     : 67
FloatingPointType    : 14
ForInit              : 161 163 164 165 169 171 172 173
ForStatement         : 118
ForStatementNoShortIf : 123
ForUpdate            : 161 162 163 167 169 170 171 175
FormalParameter      : 86 87
FormalParameterList  : 85 87 94
Goal                 : 0
IfThenElseStatement  : 116
IfThenElseStatementNoShortIf : 121
IfThenStatement      : 115
ImportDeclaration    : 38 39
ImportDeclarations   : 31 32 35 36 39
InclusiveOrExpression : 263 264 265
IntegralType         : 13
LabeledStatement     : 114
LabeledStatementNoShortIf : 120
LeftHandSide         : 272
Literal              : 190
LocalVariableDeclaration : 111 178
LocalVariableDeclarationStatement : 109
MethodBody           : 79
MethodDeclaration    : 68
MethodDeclarator     : 80 81 82 83
MethodHeader         : 79
MethodInvocation     : 141 195
Modifier             : 51 52
Modifiers            : 52 58 69 80 82 92
MultiplicativeExpression : 240 241 242 243 244 245
Name                 : 24 26 30 210 211 212 213 216 219 238 273
NumericType          : 11
PackageDeclaration   : 31 32 33 34
PostDecrementExpression : 140 221
PostIncrementExpression : 139 220
PostfixExpression    : 222 223 231
PreDecrementExpression : 138 225
PreIncrementExpression : 137 224
Primary              : 210 214 215 218
PrimaryNoNewArray    : 188 217
PrimitiveType        : 9 25 201 202 235 236
QualifiedName        : 28
ReferenceType        : 10
RelationalExpression : 251 252 253 254 255 256 257
ReturnStatement      : 131
ShiftExpression      : 247 248 249 250 251 252 253 254
SimpleName           : 27 94 95
SingleTypeImportDeclaration : 43
Statement            : 110 133 143 144 158 160 161 162 163 164 165 166 167 168
StatementExpression  : 135 180 181
StatementExpressionList : 177 179 181
StatementNoShortIf   : 134 144 145 145 159 169 170 171 172 173 174 175 176
StatementWithoutTrailingSubstatement : 113 119
StaticInitializer    : 66
SwitchBlock          : 146
SwitchBlockStatementGroup : 151 152
SwitchBlockStatementGroups : 148 149 152
SwitchLabel          : 154 155
SwitchLabels         : 148 150 153 155
SwitchStatement      : 127
Type                 : 69 70 80 81 88 112
TypeDeclaration      : 40 41
TypeDeclarations     : 31 34 36 37 41
TypeImportOnDemandDeclaration : 44
UnaryExpression      : 226 227 229 230 232 233 235 236 239 240 241 242
UnaryExpressionNotAddSub : 228 237 238
VariableDeclarator   : 71 72
VariableDeclaratorId : 73 74 88
VariableDeclarators  : 69 70 72 112
VariableInitializer  : 74 103 104
VariableInitializers : 101 104
WhileStatement       : 117
WhileStatementNoShortIf : 122
begin_scope          : 91 143 144 144 145 145 148 150 153 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176
decl_mark            : 94 95
decl_mark_2          : 58 59
end_scope            : 91 143 144 144 145 145 148 150 153 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176
import_identifier    : 45 46 47

Parsing method: LALR

state 0

    (0) S' -> . Goal
    (1) Goal -> . CompilationUnit
    (31) CompilationUnit -> . PackageDeclaration ImportDeclarations TypeDeclarations
    (32) CompilationUnit -> . PackageDeclaration ImportDeclarations
    (33) CompilationUnit -> . PackageDeclaration
    (34) CompilationUnit -> . PackageDeclaration TypeDeclarations
    (35) CompilationUnit -> . ImportDeclarations
    (36) CompilationUnit -> . ImportDeclarations TypeDeclarations
    (37) CompilationUnit -> . TypeDeclarations
    (42) PackageDeclaration -> . PACKAGE IDENTIFIER SEMI
    (38) ImportDeclarations -> . ImportDeclaration
    (39) ImportDeclarations -> . ImportDeclarations ImportDeclaration
    (40) TypeDeclarations -> . TypeDeclaration
    (41) TypeDeclarations -> . TypeDeclarations TypeDeclaration
    (43) ImportDeclaration -> . SingleTypeImportDeclaration
    (44) ImportDeclaration -> . TypeImportOnDemandDeclaration
    (49) TypeDeclaration -> . ClassDeclaration
    (50) TypeDeclaration -> . SEMI
    (45) SingleTypeImportDeclaration -> . IMPORT import_identifier SEMI
    (46) TypeImportOnDemandDeclaration -> . IMPORT import_identifier DOT MUL SEMI
    (58) ClassDeclaration -> . Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody
    (59) ClassDeclaration -> . CLASS IDENTIFIER decl_mark_2 ClassBody
    (51) Modifiers -> . Modifier
    (52) Modifiers -> . Modifiers Modifier
    (53) Modifier -> . STATIC
    (54) Modifier -> . FINAL
    (55) Modifier -> . PRIVATE
    (56) Modifier -> . PROTECTED
    (57) Modifier -> . PUBLIC

    PACKAGE         shift and go to state 6
    SEMI            shift and go to state 7
    IMPORT          shift and go to state 13
    CLASS           shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21

    Goal                           shift and go to state 1
    CompilationUnit                shift and go to state 2
    PackageDeclaration             shift and go to state 3
    ImportDeclarations             shift and go to state 4
    TypeDeclarations               shift and go to state 5
    ImportDeclaration              shift and go to state 8
    TypeDeclaration                shift and go to state 9
    SingleTypeImportDeclaration    shift and go to state 10
    TypeImportOnDemandDeclaration  shift and go to state 11
    ClassDeclaration               shift and go to state 12
    Modifiers                      shift and go to state 14
    Modifier                       shift and go to state 16

state 1

    (0) S' -> Goal .



state 2

    (1) Goal -> CompilationUnit .

    $end            reduce using rule 1 (Goal -> CompilationUnit .)


state 3

    (31) CompilationUnit -> PackageDeclaration . ImportDeclarations TypeDeclarations
    (32) CompilationUnit -> PackageDeclaration . ImportDeclarations
    (33) CompilationUnit -> PackageDeclaration .
    (34) CompilationUnit -> PackageDeclaration . TypeDeclarations
    (38) ImportDeclarations -> . ImportDeclaration
    (39) ImportDeclarations -> . ImportDeclarations ImportDeclaration
    (40) TypeDeclarations -> . TypeDeclaration
    (41) TypeDeclarations -> . TypeDeclarations TypeDeclaration
    (43) ImportDeclaration -> . SingleTypeImportDeclaration
    (44) ImportDeclaration -> . TypeImportOnDemandDeclaration
    (49) TypeDeclaration -> . ClassDeclaration
    (50) TypeDeclaration -> . SEMI
    (45) SingleTypeImportDeclaration -> . IMPORT import_identifier SEMI
    (46) TypeImportOnDemandDeclaration -> . IMPORT import_identifier DOT MUL SEMI
    (58) ClassDeclaration -> . Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody
    (59) ClassDeclaration -> . CLASS IDENTIFIER decl_mark_2 ClassBody
    (51) Modifiers -> . Modifier
    (52) Modifiers -> . Modifiers Modifier
    (53) Modifier -> . STATIC
    (54) Modifier -> . FINAL
    (55) Modifier -> . PRIVATE
    (56) Modifier -> . PROTECTED
    (57) Modifier -> . PUBLIC

    $end            reduce using rule 33 (CompilationUnit -> PackageDeclaration .)
    SEMI            shift and go to state 7
    IMPORT          shift and go to state 13
    CLASS           shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21

    ImportDeclarations             shift and go to state 22
    TypeDeclarations               shift and go to state 23
    ImportDeclaration              shift and go to state 8
    TypeDeclaration                shift and go to state 9
    SingleTypeImportDeclaration    shift and go to state 10
    TypeImportOnDemandDeclaration  shift and go to state 11
    ClassDeclaration               shift and go to state 12
    Modifiers                      shift and go to state 14
    Modifier                       shift and go to state 16

state 4

    (35) CompilationUnit -> ImportDeclarations .
    (36) CompilationUnit -> ImportDeclarations . TypeDeclarations
    (39) ImportDeclarations -> ImportDeclarations . ImportDeclaration
    (40) TypeDeclarations -> . TypeDeclaration
    (41) TypeDeclarations -> . TypeDeclarations TypeDeclaration
    (43) ImportDeclaration -> . SingleTypeImportDeclaration
    (44) ImportDeclaration -> . TypeImportOnDemandDeclaration
    (49) TypeDeclaration -> . ClassDeclaration
    (50) TypeDeclaration -> . SEMI
    (45) SingleTypeImportDeclaration -> . IMPORT import_identifier SEMI
    (46) TypeImportOnDemandDeclaration -> . IMPORT import_identifier DOT MUL SEMI
    (58) ClassDeclaration -> . Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody
    (59) ClassDeclaration -> . CLASS IDENTIFIER decl_mark_2 ClassBody
    (51) Modifiers -> . Modifier
    (52) Modifiers -> . Modifiers Modifier
    (53) Modifier -> . STATIC
    (54) Modifier -> . FINAL
    (55) Modifier -> . PRIVATE
    (56) Modifier -> . PROTECTED
    (57) Modifier -> . PUBLIC

    $end            reduce using rule 35 (CompilationUnit -> ImportDeclarations .)
    SEMI            shift and go to state 7
    IMPORT          shift and go to state 13
    CLASS           shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21

    TypeDeclarations               shift and go to state 24
    ImportDeclaration              shift and go to state 25
    TypeDeclaration                shift and go to state 9
    SingleTypeImportDeclaration    shift and go to state 10
    TypeImportOnDemandDeclaration  shift and go to state 11
    ClassDeclaration               shift and go to state 12
    Modifiers                      shift and go to state 14
    Modifier                       shift and go to state 16

state 5

    (37) CompilationUnit -> TypeDeclarations .
    (41) TypeDeclarations -> TypeDeclarations . TypeDeclaration
    (49) TypeDeclaration -> . ClassDeclaration
    (50) TypeDeclaration -> . SEMI
    (58) ClassDeclaration -> . Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody
    (59) ClassDeclaration -> . CLASS IDENTIFIER decl_mark_2 ClassBody
    (51) Modifiers -> . Modifier
    (52) Modifiers -> . Modifiers Modifier
    (53) Modifier -> . STATIC
    (54) Modifier -> . FINAL
    (55) Modifier -> . PRIVATE
    (56) Modifier -> . PROTECTED
    (57) Modifier -> . PUBLIC

    $end            reduce using rule 37 (CompilationUnit -> TypeDeclarations .)
    SEMI            shift and go to state 7
    CLASS           shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21

    TypeDeclaration                shift and go to state 26
    ClassDeclaration               shift and go to state 12
    Modifiers                      shift and go to state 14
    Modifier                       shift and go to state 16

state 6

    (42) PackageDeclaration -> PACKAGE . IDENTIFIER SEMI

    IDENTIFIER      shift and go to state 27


state 7

    (50) TypeDeclaration -> SEMI .

    SEMI            reduce using rule 50 (TypeDeclaration -> SEMI .)
    CLASS           reduce using rule 50 (TypeDeclaration -> SEMI .)
    STATIC          reduce using rule 50 (TypeDeclaration -> SEMI .)
    FINAL           reduce using rule 50 (TypeDeclaration -> SEMI .)
    PRIVATE         reduce using rule 50 (TypeDeclaration -> SEMI .)
    PROTECTED       reduce using rule 50 (TypeDeclaration -> SEMI .)
    PUBLIC          reduce using rule 50 (TypeDeclaration -> SEMI .)
    $end            reduce using rule 50 (TypeDeclaration -> SEMI .)


state 8

    (38) ImportDeclarations -> ImportDeclaration .

    SEMI            reduce using rule 38 (ImportDeclarations -> ImportDeclaration .)
    IMPORT          reduce using rule 38 (ImportDeclarations -> ImportDeclaration .)
    CLASS           reduce using rule 38 (ImportDeclarations -> ImportDeclaration .)
    STATIC          reduce using rule 38 (ImportDeclarations -> ImportDeclaration .)
    FINAL           reduce using rule 38 (ImportDeclarations -> ImportDeclaration .)
    PRIVATE         reduce using rule 38 (ImportDeclarations -> ImportDeclaration .)
    PROTECTED       reduce using rule 38 (ImportDeclarations -> ImportDeclaration .)
    PUBLIC          reduce using rule 38 (ImportDeclarations -> ImportDeclaration .)
    $end            reduce using rule 38 (ImportDeclarations -> ImportDeclaration .)


state 9

    (40) TypeDeclarations -> TypeDeclaration .

    SEMI            reduce using rule 40 (TypeDeclarations -> TypeDeclaration .)
    CLASS           reduce using rule 40 (TypeDeclarations -> TypeDeclaration .)
    STATIC          reduce using rule 40 (TypeDeclarations -> TypeDeclaration .)
    FINAL           reduce using rule 40 (TypeDeclarations -> TypeDeclaration .)
    PRIVATE         reduce using rule 40 (TypeDeclarations -> TypeDeclaration .)
    PROTECTED       reduce using rule 40 (TypeDeclarations -> TypeDeclaration .)
    PUBLIC          reduce using rule 40 (TypeDeclarations -> TypeDeclaration .)
    $end            reduce using rule 40 (TypeDeclarations -> TypeDeclaration .)


state 10

    (43) ImportDeclaration -> SingleTypeImportDeclaration .

    SEMI            reduce using rule 43 (ImportDeclaration -> SingleTypeImportDeclaration .)
    IMPORT          reduce using rule 43 (ImportDeclaration -> SingleTypeImportDeclaration .)
    CLASS           reduce using rule 43 (ImportDeclaration -> SingleTypeImportDeclaration .)
    STATIC          reduce using rule 43 (ImportDeclaration -> SingleTypeImportDeclaration .)
    FINAL           reduce using rule 43 (ImportDeclaration -> SingleTypeImportDeclaration .)
    PRIVATE         reduce using rule 43 (ImportDeclaration -> SingleTypeImportDeclaration .)
    PROTECTED       reduce using rule 43 (ImportDeclaration -> SingleTypeImportDeclaration .)
    PUBLIC          reduce using rule 43 (ImportDeclaration -> SingleTypeImportDeclaration .)
    $end            reduce using rule 43 (ImportDeclaration -> SingleTypeImportDeclaration .)


state 11

    (44) ImportDeclaration -> TypeImportOnDemandDeclaration .

    SEMI            reduce using rule 44 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    IMPORT          reduce using rule 44 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    CLASS           reduce using rule 44 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    STATIC          reduce using rule 44 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    FINAL           reduce using rule 44 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    PRIVATE         reduce using rule 44 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    PROTECTED       reduce using rule 44 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    PUBLIC          reduce using rule 44 (ImportDeclaration -> TypeImportOnDemandDeclaration .)
    $end            reduce using rule 44 (ImportDeclaration -> TypeImportOnDemandDeclaration .)


state 12

    (49) TypeDeclaration -> ClassDeclaration .

    SEMI            reduce using rule 49 (TypeDeclaration -> ClassDeclaration .)
    CLASS           reduce using rule 49 (TypeDeclaration -> ClassDeclaration .)
    STATIC          reduce using rule 49 (TypeDeclaration -> ClassDeclaration .)
    FINAL           reduce using rule 49 (TypeDeclaration -> ClassDeclaration .)
    PRIVATE         reduce using rule 49 (TypeDeclaration -> ClassDeclaration .)
    PROTECTED       reduce using rule 49 (TypeDeclaration -> ClassDeclaration .)
    PUBLIC          reduce using rule 49 (TypeDeclaration -> ClassDeclaration .)
    $end            reduce using rule 49 (TypeDeclaration -> ClassDeclaration .)


state 13

    (45) SingleTypeImportDeclaration -> IMPORT . import_identifier SEMI
    (46) TypeImportOnDemandDeclaration -> IMPORT . import_identifier DOT MUL SEMI
    (47) import_identifier -> . import_identifier DOT IDENTIFIER
    (48) import_identifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 29

    import_identifier              shift and go to state 28

state 14

    (58) ClassDeclaration -> Modifiers . CLASS IDENTIFIER decl_mark_2 ClassBody
    (52) Modifiers -> Modifiers . Modifier
    (53) Modifier -> . STATIC
    (54) Modifier -> . FINAL
    (55) Modifier -> . PRIVATE
    (56) Modifier -> . PROTECTED
    (57) Modifier -> . PUBLIC

    CLASS           shift and go to state 30
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21

    Modifier                       shift and go to state 31

state 15

    (59) ClassDeclaration -> CLASS . IDENTIFIER decl_mark_2 ClassBody

    IDENTIFIER      shift and go to state 32


state 16

    (51) Modifiers -> Modifier .

    CLASS           reduce using rule 51 (Modifiers -> Modifier .)
    STATIC          reduce using rule 51 (Modifiers -> Modifier .)
    FINAL           reduce using rule 51 (Modifiers -> Modifier .)
    PRIVATE         reduce using rule 51 (Modifiers -> Modifier .)
    PROTECTED       reduce using rule 51 (Modifiers -> Modifier .)
    PUBLIC          reduce using rule 51 (Modifiers -> Modifier .)
    VOID            reduce using rule 51 (Modifiers -> Modifier .)
    IDENTIFIER      reduce using rule 51 (Modifiers -> Modifier .)
    BOOLEAN         reduce using rule 51 (Modifiers -> Modifier .)
    BYTE            reduce using rule 51 (Modifiers -> Modifier .)
    SHORT           reduce using rule 51 (Modifiers -> Modifier .)
    INT             reduce using rule 51 (Modifiers -> Modifier .)
    LONG            reduce using rule 51 (Modifiers -> Modifier .)
    CHAR            reduce using rule 51 (Modifiers -> Modifier .)
    FLOAT           reduce using rule 51 (Modifiers -> Modifier .)
    DOUBLE          reduce using rule 51 (Modifiers -> Modifier .)


state 17

    (53) Modifier -> STATIC .

    CLASS           reduce using rule 53 (Modifier -> STATIC .)
    STATIC          reduce using rule 53 (Modifier -> STATIC .)
    FINAL           reduce using rule 53 (Modifier -> STATIC .)
    PRIVATE         reduce using rule 53 (Modifier -> STATIC .)
    PROTECTED       reduce using rule 53 (Modifier -> STATIC .)
    PUBLIC          reduce using rule 53 (Modifier -> STATIC .)
    VOID            reduce using rule 53 (Modifier -> STATIC .)
    IDENTIFIER      reduce using rule 53 (Modifier -> STATIC .)
    BOOLEAN         reduce using rule 53 (Modifier -> STATIC .)
    BYTE            reduce using rule 53 (Modifier -> STATIC .)
    SHORT           reduce using rule 53 (Modifier -> STATIC .)
    INT             reduce using rule 53 (Modifier -> STATIC .)
    LONG            reduce using rule 53 (Modifier -> STATIC .)
    CHAR            reduce using rule 53 (Modifier -> STATIC .)
    FLOAT           reduce using rule 53 (Modifier -> STATIC .)
    DOUBLE          reduce using rule 53 (Modifier -> STATIC .)


state 18

    (54) Modifier -> FINAL .

    CLASS           reduce using rule 54 (Modifier -> FINAL .)
    STATIC          reduce using rule 54 (Modifier -> FINAL .)
    FINAL           reduce using rule 54 (Modifier -> FINAL .)
    PRIVATE         reduce using rule 54 (Modifier -> FINAL .)
    PROTECTED       reduce using rule 54 (Modifier -> FINAL .)
    PUBLIC          reduce using rule 54 (Modifier -> FINAL .)
    VOID            reduce using rule 54 (Modifier -> FINAL .)
    IDENTIFIER      reduce using rule 54 (Modifier -> FINAL .)
    BOOLEAN         reduce using rule 54 (Modifier -> FINAL .)
    BYTE            reduce using rule 54 (Modifier -> FINAL .)
    SHORT           reduce using rule 54 (Modifier -> FINAL .)
    INT             reduce using rule 54 (Modifier -> FINAL .)
    LONG            reduce using rule 54 (Modifier -> FINAL .)
    CHAR            reduce using rule 54 (Modifier -> FINAL .)
    FLOAT           reduce using rule 54 (Modifier -> FINAL .)
    DOUBLE          reduce using rule 54 (Modifier -> FINAL .)


state 19

    (55) Modifier -> PRIVATE .

    CLASS           reduce using rule 55 (Modifier -> PRIVATE .)
    STATIC          reduce using rule 55 (Modifier -> PRIVATE .)
    FINAL           reduce using rule 55 (Modifier -> PRIVATE .)
    PRIVATE         reduce using rule 55 (Modifier -> PRIVATE .)
    PROTECTED       reduce using rule 55 (Modifier -> PRIVATE .)
    PUBLIC          reduce using rule 55 (Modifier -> PRIVATE .)
    VOID            reduce using rule 55 (Modifier -> PRIVATE .)
    IDENTIFIER      reduce using rule 55 (Modifier -> PRIVATE .)
    BOOLEAN         reduce using rule 55 (Modifier -> PRIVATE .)
    BYTE            reduce using rule 55 (Modifier -> PRIVATE .)
    SHORT           reduce using rule 55 (Modifier -> PRIVATE .)
    INT             reduce using rule 55 (Modifier -> PRIVATE .)
    LONG            reduce using rule 55 (Modifier -> PRIVATE .)
    CHAR            reduce using rule 55 (Modifier -> PRIVATE .)
    FLOAT           reduce using rule 55 (Modifier -> PRIVATE .)
    DOUBLE          reduce using rule 55 (Modifier -> PRIVATE .)


state 20

    (56) Modifier -> PROTECTED .

    CLASS           reduce using rule 56 (Modifier -> PROTECTED .)
    STATIC          reduce using rule 56 (Modifier -> PROTECTED .)
    FINAL           reduce using rule 56 (Modifier -> PROTECTED .)
    PRIVATE         reduce using rule 56 (Modifier -> PROTECTED .)
    PROTECTED       reduce using rule 56 (Modifier -> PROTECTED .)
    PUBLIC          reduce using rule 56 (Modifier -> PROTECTED .)
    VOID            reduce using rule 56 (Modifier -> PROTECTED .)
    IDENTIFIER      reduce using rule 56 (Modifier -> PROTECTED .)
    BOOLEAN         reduce using rule 56 (Modifier -> PROTECTED .)
    BYTE            reduce using rule 56 (Modifier -> PROTECTED .)
    SHORT           reduce using rule 56 (Modifier -> PROTECTED .)
    INT             reduce using rule 56 (Modifier -> PROTECTED .)
    LONG            reduce using rule 56 (Modifier -> PROTECTED .)
    CHAR            reduce using rule 56 (Modifier -> PROTECTED .)
    FLOAT           reduce using rule 56 (Modifier -> PROTECTED .)
    DOUBLE          reduce using rule 56 (Modifier -> PROTECTED .)


state 21

    (57) Modifier -> PUBLIC .

    CLASS           reduce using rule 57 (Modifier -> PUBLIC .)
    STATIC          reduce using rule 57 (Modifier -> PUBLIC .)
    FINAL           reduce using rule 57 (Modifier -> PUBLIC .)
    PRIVATE         reduce using rule 57 (Modifier -> PUBLIC .)
    PROTECTED       reduce using rule 57 (Modifier -> PUBLIC .)
    PUBLIC          reduce using rule 57 (Modifier -> PUBLIC .)
    VOID            reduce using rule 57 (Modifier -> PUBLIC .)
    IDENTIFIER      reduce using rule 57 (Modifier -> PUBLIC .)
    BOOLEAN         reduce using rule 57 (Modifier -> PUBLIC .)
    BYTE            reduce using rule 57 (Modifier -> PUBLIC .)
    SHORT           reduce using rule 57 (Modifier -> PUBLIC .)
    INT             reduce using rule 57 (Modifier -> PUBLIC .)
    LONG            reduce using rule 57 (Modifier -> PUBLIC .)
    CHAR            reduce using rule 57 (Modifier -> PUBLIC .)
    FLOAT           reduce using rule 57 (Modifier -> PUBLIC .)
    DOUBLE          reduce using rule 57 (Modifier -> PUBLIC .)


state 22

    (31) CompilationUnit -> PackageDeclaration ImportDeclarations . TypeDeclarations
    (32) CompilationUnit -> PackageDeclaration ImportDeclarations .
    (39) ImportDeclarations -> ImportDeclarations . ImportDeclaration
    (40) TypeDeclarations -> . TypeDeclaration
    (41) TypeDeclarations -> . TypeDeclarations TypeDeclaration
    (43) ImportDeclaration -> . SingleTypeImportDeclaration
    (44) ImportDeclaration -> . TypeImportOnDemandDeclaration
    (49) TypeDeclaration -> . ClassDeclaration
    (50) TypeDeclaration -> . SEMI
    (45) SingleTypeImportDeclaration -> . IMPORT import_identifier SEMI
    (46) TypeImportOnDemandDeclaration -> . IMPORT import_identifier DOT MUL SEMI
    (58) ClassDeclaration -> . Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody
    (59) ClassDeclaration -> . CLASS IDENTIFIER decl_mark_2 ClassBody
    (51) Modifiers -> . Modifier
    (52) Modifiers -> . Modifiers Modifier
    (53) Modifier -> . STATIC
    (54) Modifier -> . FINAL
    (55) Modifier -> . PRIVATE
    (56) Modifier -> . PROTECTED
    (57) Modifier -> . PUBLIC

    $end            reduce using rule 32 (CompilationUnit -> PackageDeclaration ImportDeclarations .)
    SEMI            shift and go to state 7
    IMPORT          shift and go to state 13
    CLASS           shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21

    TypeDeclarations               shift and go to state 33
    ImportDeclaration              shift and go to state 25
    TypeDeclaration                shift and go to state 9
    SingleTypeImportDeclaration    shift and go to state 10
    TypeImportOnDemandDeclaration  shift and go to state 11
    ClassDeclaration               shift and go to state 12
    Modifiers                      shift and go to state 14
    Modifier                       shift and go to state 16

state 23

    (34) CompilationUnit -> PackageDeclaration TypeDeclarations .
    (41) TypeDeclarations -> TypeDeclarations . TypeDeclaration
    (49) TypeDeclaration -> . ClassDeclaration
    (50) TypeDeclaration -> . SEMI
    (58) ClassDeclaration -> . Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody
    (59) ClassDeclaration -> . CLASS IDENTIFIER decl_mark_2 ClassBody
    (51) Modifiers -> . Modifier
    (52) Modifiers -> . Modifiers Modifier
    (53) Modifier -> . STATIC
    (54) Modifier -> . FINAL
    (55) Modifier -> . PRIVATE
    (56) Modifier -> . PROTECTED
    (57) Modifier -> . PUBLIC

    $end            reduce using rule 34 (CompilationUnit -> PackageDeclaration TypeDeclarations .)
    SEMI            shift and go to state 7
    CLASS           shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21

    TypeDeclaration                shift and go to state 26
    ClassDeclaration               shift and go to state 12
    Modifiers                      shift and go to state 14
    Modifier                       shift and go to state 16

state 24

    (36) CompilationUnit -> ImportDeclarations TypeDeclarations .
    (41) TypeDeclarations -> TypeDeclarations . TypeDeclaration
    (49) TypeDeclaration -> . ClassDeclaration
    (50) TypeDeclaration -> . SEMI
    (58) ClassDeclaration -> . Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody
    (59) ClassDeclaration -> . CLASS IDENTIFIER decl_mark_2 ClassBody
    (51) Modifiers -> . Modifier
    (52) Modifiers -> . Modifiers Modifier
    (53) Modifier -> . STATIC
    (54) Modifier -> . FINAL
    (55) Modifier -> . PRIVATE
    (56) Modifier -> . PROTECTED
    (57) Modifier -> . PUBLIC

    $end            reduce using rule 36 (CompilationUnit -> ImportDeclarations TypeDeclarations .)
    SEMI            shift and go to state 7
    CLASS           shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21

    TypeDeclaration                shift and go to state 26
    ClassDeclaration               shift and go to state 12
    Modifiers                      shift and go to state 14
    Modifier                       shift and go to state 16

state 25

    (39) ImportDeclarations -> ImportDeclarations ImportDeclaration .

    SEMI            reduce using rule 39 (ImportDeclarations -> ImportDeclarations ImportDeclaration .)
    IMPORT          reduce using rule 39 (ImportDeclarations -> ImportDeclarations ImportDeclaration .)
    CLASS           reduce using rule 39 (ImportDeclarations -> ImportDeclarations ImportDeclaration .)
    STATIC          reduce using rule 39 (ImportDeclarations -> ImportDeclarations ImportDeclaration .)
    FINAL           reduce using rule 39 (ImportDeclarations -> ImportDeclarations ImportDeclaration .)
    PRIVATE         reduce using rule 39 (ImportDeclarations -> ImportDeclarations ImportDeclaration .)
    PROTECTED       reduce using rule 39 (ImportDeclarations -> ImportDeclarations ImportDeclaration .)
    PUBLIC          reduce using rule 39 (ImportDeclarations -> ImportDeclarations ImportDeclaration .)
    $end            reduce using rule 39 (ImportDeclarations -> ImportDeclarations ImportDeclaration .)


state 26

    (41) TypeDeclarations -> TypeDeclarations TypeDeclaration .

    SEMI            reduce using rule 41 (TypeDeclarations -> TypeDeclarations TypeDeclaration .)
    CLASS           reduce using rule 41 (TypeDeclarations -> TypeDeclarations TypeDeclaration .)
    STATIC          reduce using rule 41 (TypeDeclarations -> TypeDeclarations TypeDeclaration .)
    FINAL           reduce using rule 41 (TypeDeclarations -> TypeDeclarations TypeDeclaration .)
    PRIVATE         reduce using rule 41 (TypeDeclarations -> TypeDeclarations TypeDeclaration .)
    PROTECTED       reduce using rule 41 (TypeDeclarations -> TypeDeclarations TypeDeclaration .)
    PUBLIC          reduce using rule 41 (TypeDeclarations -> TypeDeclarations TypeDeclaration .)
    $end            reduce using rule 41 (TypeDeclarations -> TypeDeclarations TypeDeclaration .)


state 27

    (42) PackageDeclaration -> PACKAGE IDENTIFIER . SEMI

    SEMI            shift and go to state 34


state 28

    (45) SingleTypeImportDeclaration -> IMPORT import_identifier . SEMI
    (46) TypeImportOnDemandDeclaration -> IMPORT import_identifier . DOT MUL SEMI
    (47) import_identifier -> import_identifier . DOT IDENTIFIER

    SEMI            shift and go to state 35
    DOT             shift and go to state 36


state 29

    (48) import_identifier -> IDENTIFIER .

    SEMI            reduce using rule 48 (import_identifier -> IDENTIFIER .)
    DOT             reduce using rule 48 (import_identifier -> IDENTIFIER .)


state 30

    (58) ClassDeclaration -> Modifiers CLASS . IDENTIFIER decl_mark_2 ClassBody

    IDENTIFIER      shift and go to state 37


state 31

    (52) Modifiers -> Modifiers Modifier .

    CLASS           reduce using rule 52 (Modifiers -> Modifiers Modifier .)
    STATIC          reduce using rule 52 (Modifiers -> Modifiers Modifier .)
    FINAL           reduce using rule 52 (Modifiers -> Modifiers Modifier .)
    PRIVATE         reduce using rule 52 (Modifiers -> Modifiers Modifier .)
    PROTECTED       reduce using rule 52 (Modifiers -> Modifiers Modifier .)
    PUBLIC          reduce using rule 52 (Modifiers -> Modifiers Modifier .)
    VOID            reduce using rule 52 (Modifiers -> Modifiers Modifier .)
    IDENTIFIER      reduce using rule 52 (Modifiers -> Modifiers Modifier .)
    BOOLEAN         reduce using rule 52 (Modifiers -> Modifiers Modifier .)
    BYTE            reduce using rule 52 (Modifiers -> Modifiers Modifier .)
    SHORT           reduce using rule 52 (Modifiers -> Modifiers Modifier .)
    INT             reduce using rule 52 (Modifiers -> Modifiers Modifier .)
    LONG            reduce using rule 52 (Modifiers -> Modifiers Modifier .)
    CHAR            reduce using rule 52 (Modifiers -> Modifiers Modifier .)
    FLOAT           reduce using rule 52 (Modifiers -> Modifiers Modifier .)
    DOUBLE          reduce using rule 52 (Modifiers -> Modifiers Modifier .)


state 32

    (59) ClassDeclaration -> CLASS IDENTIFIER . decl_mark_2 ClassBody
    (291) decl_mark_2 -> .

    LBRACE          reduce using rule 291 (decl_mark_2 -> .)

    decl_mark_2                    shift and go to state 38

state 33

    (31) CompilationUnit -> PackageDeclaration ImportDeclarations TypeDeclarations .
    (41) TypeDeclarations -> TypeDeclarations . TypeDeclaration
    (49) TypeDeclaration -> . ClassDeclaration
    (50) TypeDeclaration -> . SEMI
    (58) ClassDeclaration -> . Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody
    (59) ClassDeclaration -> . CLASS IDENTIFIER decl_mark_2 ClassBody
    (51) Modifiers -> . Modifier
    (52) Modifiers -> . Modifiers Modifier
    (53) Modifier -> . STATIC
    (54) Modifier -> . FINAL
    (55) Modifier -> . PRIVATE
    (56) Modifier -> . PROTECTED
    (57) Modifier -> . PUBLIC

    $end            reduce using rule 31 (CompilationUnit -> PackageDeclaration ImportDeclarations TypeDeclarations .)
    SEMI            shift and go to state 7
    CLASS           shift and go to state 15
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21

    TypeDeclaration                shift and go to state 26
    ClassDeclaration               shift and go to state 12
    Modifiers                      shift and go to state 14
    Modifier                       shift and go to state 16

state 34

    (42) PackageDeclaration -> PACKAGE IDENTIFIER SEMI .

    SEMI            reduce using rule 42 (PackageDeclaration -> PACKAGE IDENTIFIER SEMI .)
    IMPORT          reduce using rule 42 (PackageDeclaration -> PACKAGE IDENTIFIER SEMI .)
    CLASS           reduce using rule 42 (PackageDeclaration -> PACKAGE IDENTIFIER SEMI .)
    STATIC          reduce using rule 42 (PackageDeclaration -> PACKAGE IDENTIFIER SEMI .)
    FINAL           reduce using rule 42 (PackageDeclaration -> PACKAGE IDENTIFIER SEMI .)
    PRIVATE         reduce using rule 42 (PackageDeclaration -> PACKAGE IDENTIFIER SEMI .)
    PROTECTED       reduce using rule 42 (PackageDeclaration -> PACKAGE IDENTIFIER SEMI .)
    PUBLIC          reduce using rule 42 (PackageDeclaration -> PACKAGE IDENTIFIER SEMI .)
    $end            reduce using rule 42 (PackageDeclaration -> PACKAGE IDENTIFIER SEMI .)


state 35

    (45) SingleTypeImportDeclaration -> IMPORT import_identifier SEMI .

    SEMI            reduce using rule 45 (SingleTypeImportDeclaration -> IMPORT import_identifier SEMI .)
    IMPORT          reduce using rule 45 (SingleTypeImportDeclaration -> IMPORT import_identifier SEMI .)
    CLASS           reduce using rule 45 (SingleTypeImportDeclaration -> IMPORT import_identifier SEMI .)
    STATIC          reduce using rule 45 (SingleTypeImportDeclaration -> IMPORT import_identifier SEMI .)
    FINAL           reduce using rule 45 (SingleTypeImportDeclaration -> IMPORT import_identifier SEMI .)
    PRIVATE         reduce using rule 45 (SingleTypeImportDeclaration -> IMPORT import_identifier SEMI .)
    PROTECTED       reduce using rule 45 (SingleTypeImportDeclaration -> IMPORT import_identifier SEMI .)
    PUBLIC          reduce using rule 45 (SingleTypeImportDeclaration -> IMPORT import_identifier SEMI .)
    $end            reduce using rule 45 (SingleTypeImportDeclaration -> IMPORT import_identifier SEMI .)


state 36

    (46) TypeImportOnDemandDeclaration -> IMPORT import_identifier DOT . MUL SEMI
    (47) import_identifier -> import_identifier DOT . IDENTIFIER

    MUL             shift and go to state 39
    IDENTIFIER      shift and go to state 40


state 37

    (58) ClassDeclaration -> Modifiers CLASS IDENTIFIER . decl_mark_2 ClassBody
    (291) decl_mark_2 -> .

    LBRACE          reduce using rule 291 (decl_mark_2 -> .)

    decl_mark_2                    shift and go to state 41

state 38

    (59) ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 . ClassBody
    (60) ClassBody -> . LBRACE RBRACE
    (61) ClassBody -> . LBRACE ClassBodyDeclarations RBRACE

    LBRACE          shift and go to state 43

    ClassBody                      shift and go to state 42

state 39

    (46) TypeImportOnDemandDeclaration -> IMPORT import_identifier DOT MUL . SEMI

    SEMI            shift and go to state 44


state 40

    (47) import_identifier -> import_identifier DOT IDENTIFIER .

    SEMI            reduce using rule 47 (import_identifier -> import_identifier DOT IDENTIFIER .)
    DOT             reduce using rule 47 (import_identifier -> import_identifier DOT IDENTIFIER .)


state 41

    (58) ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 . ClassBody
    (60) ClassBody -> . LBRACE RBRACE
    (61) ClassBody -> . LBRACE ClassBodyDeclarations RBRACE

    LBRACE          shift and go to state 43

    ClassBody                      shift and go to state 45

state 42

    (59) ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody .

    SEMI            reduce using rule 59 (ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody .)
    CLASS           reduce using rule 59 (ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody .)
    STATIC          reduce using rule 59 (ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody .)
    FINAL           reduce using rule 59 (ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody .)
    PRIVATE         reduce using rule 59 (ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody .)
    PROTECTED       reduce using rule 59 (ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody .)
    PUBLIC          reduce using rule 59 (ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody .)
    $end            reduce using rule 59 (ClassDeclaration -> CLASS IDENTIFIER decl_mark_2 ClassBody .)


state 43

    (60) ClassBody -> LBRACE . RBRACE
    (61) ClassBody -> LBRACE . ClassBodyDeclarations RBRACE
    (62) ClassBodyDeclarations -> . ClassBodyDeclaration
    (63) ClassBodyDeclarations -> . ClassBodyDeclarations ClassBodyDeclaration
    (64) ClassBodyDeclaration -> . ClassMemberDeclaration
    (65) ClassBodyDeclaration -> . ConstructorDeclaration
    (66) ClassBodyDeclaration -> . StaticInitializer
    (67) ClassMemberDeclaration -> . FieldDeclaration
    (68) ClassMemberDeclaration -> . MethodDeclaration
    (92) ConstructorDeclaration -> . Modifiers ConstructorDeclarator ConstructorBody
    (93) ConstructorDeclaration -> . ConstructorDeclarator ConstructorBody
    (91) StaticInitializer -> . begin_scope STATIC Block end_scope
    (69) FieldDeclaration -> . Modifiers Type VariableDeclarators SEMI
    (70) FieldDeclaration -> . Type VariableDeclarators SEMI
    (79) MethodDeclaration -> . MethodHeader MethodBody
    (51) Modifiers -> . Modifier
    (52) Modifiers -> . Modifiers Modifier
    (94) ConstructorDeclarator -> . SimpleName LPAREN decl_mark FormalParameterList RPAREN
    (95) ConstructorDeclarator -> . SimpleName decl_mark LPAREN RPAREN
    (292) begin_scope -> .
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (80) MethodHeader -> . Modifiers Type MethodDeclarator
    (81) MethodHeader -> . Type MethodDeclarator
    (82) MethodHeader -> . Modifiers VOID MethodDeclarator
    (83) MethodHeader -> . VOID MethodDeclarator
    (53) Modifier -> . STATIC
    (54) Modifier -> . FINAL
    (55) Modifier -> . PRIVATE
    (56) Modifier -> . PROTECTED
    (57) Modifier -> . PUBLIC
    (29) SimpleName -> . IDENTIFIER
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (30) QualifiedName -> . Name DOT IDENTIFIER

  ! shift/reduce conflict for STATIC resolved as shift
    RBRACE          shift and go to state 46
    VOID            shift and go to state 62
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21
    IDENTIFIER      shift and go to state 63
    BOOLEAN         shift and go to state 65
    BYTE            shift and go to state 71
    SHORT           shift and go to state 72
    INT             shift and go to state 73
    LONG            shift and go to state 74
    CHAR            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

  ! STATIC          [ reduce using rule 292 (begin_scope -> .) ]

    ClassBodyDeclarations          shift and go to state 47
    ClassBodyDeclaration           shift and go to state 48
    ClassMemberDeclaration         shift and go to state 49
    ConstructorDeclaration         shift and go to state 50
    StaticInitializer              shift and go to state 51
    FieldDeclaration               shift and go to state 52
    MethodDeclaration              shift and go to state 53
    Modifiers                      shift and go to state 54
    ConstructorDeclarator          shift and go to state 55
    begin_scope                    shift and go to state 56
    Type                           shift and go to state 57
    MethodHeader                   shift and go to state 58
    Modifier                       shift and go to state 16
    SimpleName                     shift and go to state 59
    PrimitiveType                  shift and go to state 60
    ReferenceType                  shift and go to state 61
    NumericType                    shift and go to state 64
    ArrayType                      shift and go to state 66
    ClassType                      shift and go to state 67
    IntegralType                   shift and go to state 68
    FloatingPointType              shift and go to state 69
    Name                           shift and go to state 70
    QualifiedName                  shift and go to state 78

state 44

    (46) TypeImportOnDemandDeclaration -> IMPORT import_identifier DOT MUL SEMI .

    SEMI            reduce using rule 46 (TypeImportOnDemandDeclaration -> IMPORT import_identifier DOT MUL SEMI .)
    IMPORT          reduce using rule 46 (TypeImportOnDemandDeclaration -> IMPORT import_identifier DOT MUL SEMI .)
    CLASS           reduce using rule 46 (TypeImportOnDemandDeclaration -> IMPORT import_identifier DOT MUL SEMI .)
    STATIC          reduce using rule 46 (TypeImportOnDemandDeclaration -> IMPORT import_identifier DOT MUL SEMI .)
    FINAL           reduce using rule 46 (TypeImportOnDemandDeclaration -> IMPORT import_identifier DOT MUL SEMI .)
    PRIVATE         reduce using rule 46 (TypeImportOnDemandDeclaration -> IMPORT import_identifier DOT MUL SEMI .)
    PROTECTED       reduce using rule 46 (TypeImportOnDemandDeclaration -> IMPORT import_identifier DOT MUL SEMI .)
    PUBLIC          reduce using rule 46 (TypeImportOnDemandDeclaration -> IMPORT import_identifier DOT MUL SEMI .)
    $end            reduce using rule 46 (TypeImportOnDemandDeclaration -> IMPORT import_identifier DOT MUL SEMI .)


state 45

    (58) ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody .

    SEMI            reduce using rule 58 (ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody .)
    CLASS           reduce using rule 58 (ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody .)
    STATIC          reduce using rule 58 (ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody .)
    FINAL           reduce using rule 58 (ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody .)
    PRIVATE         reduce using rule 58 (ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody .)
    PROTECTED       reduce using rule 58 (ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody .)
    PUBLIC          reduce using rule 58 (ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody .)
    $end            reduce using rule 58 (ClassDeclaration -> Modifiers CLASS IDENTIFIER decl_mark_2 ClassBody .)


state 46

    (60) ClassBody -> LBRACE RBRACE .

    SEMI            reduce using rule 60 (ClassBody -> LBRACE RBRACE .)
    CLASS           reduce using rule 60 (ClassBody -> LBRACE RBRACE .)
    STATIC          reduce using rule 60 (ClassBody -> LBRACE RBRACE .)
    FINAL           reduce using rule 60 (ClassBody -> LBRACE RBRACE .)
    PRIVATE         reduce using rule 60 (ClassBody -> LBRACE RBRACE .)
    PROTECTED       reduce using rule 60 (ClassBody -> LBRACE RBRACE .)
    PUBLIC          reduce using rule 60 (ClassBody -> LBRACE RBRACE .)
    $end            reduce using rule 60 (ClassBody -> LBRACE RBRACE .)


state 47

    (61) ClassBody -> LBRACE ClassBodyDeclarations . RBRACE
    (63) ClassBodyDeclarations -> ClassBodyDeclarations . ClassBodyDeclaration
    (64) ClassBodyDeclaration -> . ClassMemberDeclaration
    (65) ClassBodyDeclaration -> . ConstructorDeclaration
    (66) ClassBodyDeclaration -> . StaticInitializer
    (67) ClassMemberDeclaration -> . FieldDeclaration
    (68) ClassMemberDeclaration -> . MethodDeclaration
    (92) ConstructorDeclaration -> . Modifiers ConstructorDeclarator ConstructorBody
    (93) ConstructorDeclaration -> . ConstructorDeclarator ConstructorBody
    (91) StaticInitializer -> . begin_scope STATIC Block end_scope
    (69) FieldDeclaration -> . Modifiers Type VariableDeclarators SEMI
    (70) FieldDeclaration -> . Type VariableDeclarators SEMI
    (79) MethodDeclaration -> . MethodHeader MethodBody
    (51) Modifiers -> . Modifier
    (52) Modifiers -> . Modifiers Modifier
    (94) ConstructorDeclarator -> . SimpleName LPAREN decl_mark FormalParameterList RPAREN
    (95) ConstructorDeclarator -> . SimpleName decl_mark LPAREN RPAREN
    (292) begin_scope -> .
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (80) MethodHeader -> . Modifiers Type MethodDeclarator
    (81) MethodHeader -> . Type MethodDeclarator
    (82) MethodHeader -> . Modifiers VOID MethodDeclarator
    (83) MethodHeader -> . VOID MethodDeclarator
    (53) Modifier -> . STATIC
    (54) Modifier -> . FINAL
    (55) Modifier -> . PRIVATE
    (56) Modifier -> . PROTECTED
    (57) Modifier -> . PUBLIC
    (29) SimpleName -> . IDENTIFIER
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (30) QualifiedName -> . Name DOT IDENTIFIER

  ! shift/reduce conflict for STATIC resolved as shift
    RBRACE          shift and go to state 79
    VOID            shift and go to state 62
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21
    IDENTIFIER      shift and go to state 63
    BOOLEAN         shift and go to state 65
    BYTE            shift and go to state 71
    SHORT           shift and go to state 72
    INT             shift and go to state 73
    LONG            shift and go to state 74
    CHAR            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

  ! STATIC          [ reduce using rule 292 (begin_scope -> .) ]

    ClassBodyDeclaration           shift and go to state 80
    ClassMemberDeclaration         shift and go to state 49
    ConstructorDeclaration         shift and go to state 50
    StaticInitializer              shift and go to state 51
    FieldDeclaration               shift and go to state 52
    MethodDeclaration              shift and go to state 53
    Modifiers                      shift and go to state 54
    ConstructorDeclarator          shift and go to state 55
    begin_scope                    shift and go to state 56
    Type                           shift and go to state 57
    MethodHeader                   shift and go to state 58
    Modifier                       shift and go to state 16
    SimpleName                     shift and go to state 59
    PrimitiveType                  shift and go to state 60
    ReferenceType                  shift and go to state 61
    NumericType                    shift and go to state 64
    ArrayType                      shift and go to state 66
    ClassType                      shift and go to state 67
    IntegralType                   shift and go to state 68
    FloatingPointType              shift and go to state 69
    Name                           shift and go to state 70
    QualifiedName                  shift and go to state 78

state 48

    (62) ClassBodyDeclarations -> ClassBodyDeclaration .

    RBRACE          reduce using rule 62 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    VOID            reduce using rule 62 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    STATIC          reduce using rule 62 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    FINAL           reduce using rule 62 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    PRIVATE         reduce using rule 62 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    PROTECTED       reduce using rule 62 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    PUBLIC          reduce using rule 62 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    IDENTIFIER      reduce using rule 62 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    BOOLEAN         reduce using rule 62 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    BYTE            reduce using rule 62 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    SHORT           reduce using rule 62 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    INT             reduce using rule 62 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    LONG            reduce using rule 62 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    CHAR            reduce using rule 62 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    FLOAT           reduce using rule 62 (ClassBodyDeclarations -> ClassBodyDeclaration .)
    DOUBLE          reduce using rule 62 (ClassBodyDeclarations -> ClassBodyDeclaration .)


state 49

    (64) ClassBodyDeclaration -> ClassMemberDeclaration .

    RBRACE          reduce using rule 64 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    VOID            reduce using rule 64 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    STATIC          reduce using rule 64 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    FINAL           reduce using rule 64 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    PRIVATE         reduce using rule 64 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    PROTECTED       reduce using rule 64 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    PUBLIC          reduce using rule 64 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    IDENTIFIER      reduce using rule 64 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    BOOLEAN         reduce using rule 64 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    BYTE            reduce using rule 64 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    SHORT           reduce using rule 64 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    INT             reduce using rule 64 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    LONG            reduce using rule 64 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    CHAR            reduce using rule 64 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    FLOAT           reduce using rule 64 (ClassBodyDeclaration -> ClassMemberDeclaration .)
    DOUBLE          reduce using rule 64 (ClassBodyDeclaration -> ClassMemberDeclaration .)


state 50

    (65) ClassBodyDeclaration -> ConstructorDeclaration .

    RBRACE          reduce using rule 65 (ClassBodyDeclaration -> ConstructorDeclaration .)
    VOID            reduce using rule 65 (ClassBodyDeclaration -> ConstructorDeclaration .)
    STATIC          reduce using rule 65 (ClassBodyDeclaration -> ConstructorDeclaration .)
    FINAL           reduce using rule 65 (ClassBodyDeclaration -> ConstructorDeclaration .)
    PRIVATE         reduce using rule 65 (ClassBodyDeclaration -> ConstructorDeclaration .)
    PROTECTED       reduce using rule 65 (ClassBodyDeclaration -> ConstructorDeclaration .)
    PUBLIC          reduce using rule 65 (ClassBodyDeclaration -> ConstructorDeclaration .)
    IDENTIFIER      reduce using rule 65 (ClassBodyDeclaration -> ConstructorDeclaration .)
    BOOLEAN         reduce using rule 65 (ClassBodyDeclaration -> ConstructorDeclaration .)
    BYTE            reduce using rule 65 (ClassBodyDeclaration -> ConstructorDeclaration .)
    SHORT           reduce using rule 65 (ClassBodyDeclaration -> ConstructorDeclaration .)
    INT             reduce using rule 65 (ClassBodyDeclaration -> ConstructorDeclaration .)
    LONG            reduce using rule 65 (ClassBodyDeclaration -> ConstructorDeclaration .)
    CHAR            reduce using rule 65 (ClassBodyDeclaration -> ConstructorDeclaration .)
    FLOAT           reduce using rule 65 (ClassBodyDeclaration -> ConstructorDeclaration .)
    DOUBLE          reduce using rule 65 (ClassBodyDeclaration -> ConstructorDeclaration .)


state 51

    (66) ClassBodyDeclaration -> StaticInitializer .

    RBRACE          reduce using rule 66 (ClassBodyDeclaration -> StaticInitializer .)
    VOID            reduce using rule 66 (ClassBodyDeclaration -> StaticInitializer .)
    STATIC          reduce using rule 66 (ClassBodyDeclaration -> StaticInitializer .)
    FINAL           reduce using rule 66 (ClassBodyDeclaration -> StaticInitializer .)
    PRIVATE         reduce using rule 66 (ClassBodyDeclaration -> StaticInitializer .)
    PROTECTED       reduce using rule 66 (ClassBodyDeclaration -> StaticInitializer .)
    PUBLIC          reduce using rule 66 (ClassBodyDeclaration -> StaticInitializer .)
    IDENTIFIER      reduce using rule 66 (ClassBodyDeclaration -> StaticInitializer .)
    BOOLEAN         reduce using rule 66 (ClassBodyDeclaration -> StaticInitializer .)
    BYTE            reduce using rule 66 (ClassBodyDeclaration -> StaticInitializer .)
    SHORT           reduce using rule 66 (ClassBodyDeclaration -> StaticInitializer .)
    INT             reduce using rule 66 (ClassBodyDeclaration -> StaticInitializer .)
    LONG            reduce using rule 66 (ClassBodyDeclaration -> StaticInitializer .)
    CHAR            reduce using rule 66 (ClassBodyDeclaration -> StaticInitializer .)
    FLOAT           reduce using rule 66 (ClassBodyDeclaration -> StaticInitializer .)
    DOUBLE          reduce using rule 66 (ClassBodyDeclaration -> StaticInitializer .)


state 52

    (67) ClassMemberDeclaration -> FieldDeclaration .

    RBRACE          reduce using rule 67 (ClassMemberDeclaration -> FieldDeclaration .)
    VOID            reduce using rule 67 (ClassMemberDeclaration -> FieldDeclaration .)
    STATIC          reduce using rule 67 (ClassMemberDeclaration -> FieldDeclaration .)
    FINAL           reduce using rule 67 (ClassMemberDeclaration -> FieldDeclaration .)
    PRIVATE         reduce using rule 67 (ClassMemberDeclaration -> FieldDeclaration .)
    PROTECTED       reduce using rule 67 (ClassMemberDeclaration -> FieldDeclaration .)
    PUBLIC          reduce using rule 67 (ClassMemberDeclaration -> FieldDeclaration .)
    IDENTIFIER      reduce using rule 67 (ClassMemberDeclaration -> FieldDeclaration .)
    BOOLEAN         reduce using rule 67 (ClassMemberDeclaration -> FieldDeclaration .)
    BYTE            reduce using rule 67 (ClassMemberDeclaration -> FieldDeclaration .)
    SHORT           reduce using rule 67 (ClassMemberDeclaration -> FieldDeclaration .)
    INT             reduce using rule 67 (ClassMemberDeclaration -> FieldDeclaration .)
    LONG            reduce using rule 67 (ClassMemberDeclaration -> FieldDeclaration .)
    CHAR            reduce using rule 67 (ClassMemberDeclaration -> FieldDeclaration .)
    FLOAT           reduce using rule 67 (ClassMemberDeclaration -> FieldDeclaration .)
    DOUBLE          reduce using rule 67 (ClassMemberDeclaration -> FieldDeclaration .)


state 53

    (68) ClassMemberDeclaration -> MethodDeclaration .

    RBRACE          reduce using rule 68 (ClassMemberDeclaration -> MethodDeclaration .)
    VOID            reduce using rule 68 (ClassMemberDeclaration -> MethodDeclaration .)
    STATIC          reduce using rule 68 (ClassMemberDeclaration -> MethodDeclaration .)
    FINAL           reduce using rule 68 (ClassMemberDeclaration -> MethodDeclaration .)
    PRIVATE         reduce using rule 68 (ClassMemberDeclaration -> MethodDeclaration .)
    PROTECTED       reduce using rule 68 (ClassMemberDeclaration -> MethodDeclaration .)
    PUBLIC          reduce using rule 68 (ClassMemberDeclaration -> MethodDeclaration .)
    IDENTIFIER      reduce using rule 68 (ClassMemberDeclaration -> MethodDeclaration .)
    BOOLEAN         reduce using rule 68 (ClassMemberDeclaration -> MethodDeclaration .)
    BYTE            reduce using rule 68 (ClassMemberDeclaration -> MethodDeclaration .)
    SHORT           reduce using rule 68 (ClassMemberDeclaration -> MethodDeclaration .)
    INT             reduce using rule 68 (ClassMemberDeclaration -> MethodDeclaration .)
    LONG            reduce using rule 68 (ClassMemberDeclaration -> MethodDeclaration .)
    CHAR            reduce using rule 68 (ClassMemberDeclaration -> MethodDeclaration .)
    FLOAT           reduce using rule 68 (ClassMemberDeclaration -> MethodDeclaration .)
    DOUBLE          reduce using rule 68 (ClassMemberDeclaration -> MethodDeclaration .)


state 54

    (92) ConstructorDeclaration -> Modifiers . ConstructorDeclarator ConstructorBody
    (69) FieldDeclaration -> Modifiers . Type VariableDeclarators SEMI
    (52) Modifiers -> Modifiers . Modifier
    (80) MethodHeader -> Modifiers . Type MethodDeclarator
    (82) MethodHeader -> Modifiers . VOID MethodDeclarator
    (94) ConstructorDeclarator -> . SimpleName LPAREN decl_mark FormalParameterList RPAREN
    (95) ConstructorDeclarator -> . SimpleName decl_mark LPAREN RPAREN
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (53) Modifier -> . STATIC
    (54) Modifier -> . FINAL
    (55) Modifier -> . PRIVATE
    (56) Modifier -> . PROTECTED
    (57) Modifier -> . PUBLIC
    (29) SimpleName -> . IDENTIFIER
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (30) QualifiedName -> . Name DOT IDENTIFIER

    VOID            shift and go to state 83
    STATIC          shift and go to state 17
    FINAL           shift and go to state 18
    PRIVATE         shift and go to state 19
    PROTECTED       shift and go to state 20
    PUBLIC          shift and go to state 21
    IDENTIFIER      shift and go to state 63
    BOOLEAN         shift and go to state 65
    BYTE            shift and go to state 71
    SHORT           shift and go to state 72
    INT             shift and go to state 73
    LONG            shift and go to state 74
    CHAR            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    ConstructorDeclarator          shift and go to state 81
    Type                           shift and go to state 82
    Modifier                       shift and go to state 31
    SimpleName                     shift and go to state 59
    PrimitiveType                  shift and go to state 60
    ReferenceType                  shift and go to state 61
    NumericType                    shift and go to state 64
    ArrayType                      shift and go to state 66
    ClassType                      shift and go to state 67
    IntegralType                   shift and go to state 68
    FloatingPointType              shift and go to state 69
    Name                           shift and go to state 70
    QualifiedName                  shift and go to state 78

state 55

    (93) ConstructorDeclaration -> ConstructorDeclarator . ConstructorBody
    (96) ConstructorBody -> .
    (97) ConstructorBody -> . LBRACE BlockStatements RBRACE
    (98) ConstructorBody -> . LBRACE RBRACE

    RBRACE          reduce using rule 96 (ConstructorBody -> .)
    VOID            reduce using rule 96 (ConstructorBody -> .)
    STATIC          reduce using rule 96 (ConstructorBody -> .)
    FINAL           reduce using rule 96 (ConstructorBody -> .)
    PRIVATE         reduce using rule 96 (ConstructorBody -> .)
    PROTECTED       reduce using rule 96 (ConstructorBody -> .)
    PUBLIC          reduce using rule 96 (ConstructorBody -> .)
    IDENTIFIER      reduce using rule 96 (ConstructorBody -> .)
    BOOLEAN         reduce using rule 96 (ConstructorBody -> .)
    BYTE            reduce using rule 96 (ConstructorBody -> .)
    SHORT           reduce using rule 96 (ConstructorBody -> .)
    INT             reduce using rule 96 (ConstructorBody -> .)
    LONG            reduce using rule 96 (ConstructorBody -> .)
    CHAR            reduce using rule 96 (ConstructorBody -> .)
    FLOAT           reduce using rule 96 (ConstructorBody -> .)
    DOUBLE          reduce using rule 96 (ConstructorBody -> .)
    LBRACE          shift and go to state 85

    ConstructorBody                shift and go to state 84

state 56

    (91) StaticInitializer -> begin_scope . STATIC Block end_scope

    STATIC          shift and go to state 86


state 57

    (70) FieldDeclaration -> Type . VariableDeclarators SEMI
    (81) MethodHeader -> Type . MethodDeclarator
    (71) VariableDeclarators -> . VariableDeclarator
    (72) VariableDeclarators -> . VariableDeclarators COMMA VariableDeclarator
    (84) MethodDeclarator -> . IDENTIFIER LPAREN RPAREN
    (85) MethodDeclarator -> . IDENTIFIER LPAREN FormalParameterList RPAREN
    (73) VariableDeclarator -> . VariableDeclaratorId
    (74) VariableDeclarator -> . VariableDeclaratorId ASSIGN VariableInitializer
    (75) VariableDeclaratorId -> . IDENTIFIER
    (76) VariableDeclaratorId -> . IDENTIFIER Dims

    IDENTIFIER      shift and go to state 90

    VariableDeclarators            shift and go to state 87
    MethodDeclarator               shift and go to state 88
    VariableDeclarator             shift and go to state 89
    VariableDeclaratorId           shift and go to state 91

state 58

    (79) MethodDeclaration -> MethodHeader . MethodBody
    (89) MethodBody -> . Block
    (90) MethodBody -> . SEMI
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE

    SEMI            shift and go to state 94
    LBRACE          shift and go to state 95

    MethodBody                     shift and go to state 92
    Block                          shift and go to state 93

state 59

    (94) ConstructorDeclarator -> SimpleName . LPAREN decl_mark FormalParameterList RPAREN
    (95) ConstructorDeclarator -> SimpleName . decl_mark LPAREN RPAREN
    (27) Name -> SimpleName .
    (290) decl_mark -> .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 96
    DOT             reduce using rule 27 (Name -> SimpleName .)
    LBRACK          reduce using rule 27 (Name -> SimpleName .)
    IDENTIFIER      reduce using rule 27 (Name -> SimpleName .)

  ! LPAREN          [ reduce using rule 290 (decl_mark -> .) ]

    decl_mark                      shift and go to state 97

state 60

    (9) Type -> PrimitiveType .
    (25) ArrayType -> PrimitiveType . Dims
    (208) Dims -> . LBRACK RBRACK
    (209) Dims -> . Dims LBRACK RBRACK

    IDENTIFIER      reduce using rule 9 (Type -> PrimitiveType .)
    LBRACK          shift and go to state 99

    Dims                           shift and go to state 98

state 61

    (10) Type -> ReferenceType .

    IDENTIFIER      reduce using rule 10 (Type -> ReferenceType .)


state 62

    (83) MethodHeader -> VOID . MethodDeclarator
    (84) MethodDeclarator -> . IDENTIFIER LPAREN RPAREN
    (85) MethodDeclarator -> . IDENTIFIER LPAREN FormalParameterList RPAREN

    IDENTIFIER      shift and go to state 101

    MethodDeclarator               shift and go to state 100

state 63

    (29) SimpleName -> IDENTIFIER .

    LPAREN          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DOT             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LBRACK          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    ASSIGN          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    ADD_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    SUB_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    MUL_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    AND_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    OR_ASSIGN       reduce using rule 29 (SimpleName -> IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 29 (SimpleName -> IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 29 (SimpleName -> IDENTIFIER .)
    URSHIFT_ASSIGN  reduce using rule 29 (SimpleName -> IDENTIFIER .)
    INC             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DEC             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    MUL             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DIV             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    MOD             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    ADD             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    SUB             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LSHIFT          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    RSHIFT          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    URSHIFT         reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LT              reduce using rule 29 (SimpleName -> IDENTIFIER .)
    GT              reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LE              reduce using rule 29 (SimpleName -> IDENTIFIER .)
    GE              reduce using rule 29 (SimpleName -> IDENTIFIER .)
    EQUAL           reduce using rule 29 (SimpleName -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 29 (SimpleName -> IDENTIFIER .)
    BITAND          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    CARET           reduce using rule 29 (SimpleName -> IDENTIFIER .)
    BITOR           reduce using rule 29 (SimpleName -> IDENTIFIER .)
    AND             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    QUESTION        reduce using rule 29 (SimpleName -> IDENTIFIER .)
    OR              reduce using rule 29 (SimpleName -> IDENTIFIER .)
    RPAREN          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    SEMI            reduce using rule 29 (SimpleName -> IDENTIFIER .)
    COMMA           reduce using rule 29 (SimpleName -> IDENTIFIER .)
    RBRACK          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    RBRACE          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    COLON           reduce using rule 29 (SimpleName -> IDENTIFIER .)


state 64

    (11) PrimitiveType -> NumericType .

    LBRACK          reduce using rule 11 (PrimitiveType -> NumericType .)
    IDENTIFIER      reduce using rule 11 (PrimitiveType -> NumericType .)
    RPAREN          reduce using rule 11 (PrimitiveType -> NumericType .)


state 65

    (12) PrimitiveType -> BOOLEAN .

    LBRACK          reduce using rule 12 (PrimitiveType -> BOOLEAN .)
    IDENTIFIER      reduce using rule 12 (PrimitiveType -> BOOLEAN .)
    RPAREN          reduce using rule 12 (PrimitiveType -> BOOLEAN .)


state 66

    (22) ReferenceType -> ArrayType .

    IDENTIFIER      reduce using rule 22 (ReferenceType -> ArrayType .)


state 67

    (23) ReferenceType -> ClassType .

    IDENTIFIER      reduce using rule 23 (ReferenceType -> ClassType .)


state 68

    (13) NumericType -> IntegralType .

    LBRACK          reduce using rule 13 (NumericType -> IntegralType .)
    IDENTIFIER      reduce using rule 13 (NumericType -> IntegralType .)
    RPAREN          reduce using rule 13 (NumericType -> IntegralType .)


state 69

    (14) NumericType -> FloatingPointType .

    LBRACK          reduce using rule 14 (NumericType -> FloatingPointType .)
    IDENTIFIER      reduce using rule 14 (NumericType -> FloatingPointType .)
    RPAREN          reduce using rule 14 (NumericType -> FloatingPointType .)


state 70

    (26) ArrayType -> Name . Dims
    (24) ClassType -> Name .
    (30) QualifiedName -> Name . DOT IDENTIFIER
    (208) Dims -> . LBRACK RBRACK
    (209) Dims -> . Dims LBRACK RBRACK

    IDENTIFIER      reduce using rule 24 (ClassType -> Name .)
    DOT             shift and go to state 103
    LBRACK          shift and go to state 99

    Dims                           shift and go to state 102

state 71

    (15) IntegralType -> BYTE .

    LBRACK          reduce using rule 15 (IntegralType -> BYTE .)
    IDENTIFIER      reduce using rule 15 (IntegralType -> BYTE .)
    RPAREN          reduce using rule 15 (IntegralType -> BYTE .)


state 72

    (16) IntegralType -> SHORT .

    LBRACK          reduce using rule 16 (IntegralType -> SHORT .)
    IDENTIFIER      reduce using rule 16 (IntegralType -> SHORT .)
    RPAREN          reduce using rule 16 (IntegralType -> SHORT .)


state 73

    (17) IntegralType -> INT .

    LBRACK          reduce using rule 17 (IntegralType -> INT .)
    IDENTIFIER      reduce using rule 17 (IntegralType -> INT .)
    RPAREN          reduce using rule 17 (IntegralType -> INT .)


state 74

    (18) IntegralType -> LONG .

    LBRACK          reduce using rule 18 (IntegralType -> LONG .)
    IDENTIFIER      reduce using rule 18 (IntegralType -> LONG .)
    RPAREN          reduce using rule 18 (IntegralType -> LONG .)


state 75

    (19) IntegralType -> CHAR .

    LBRACK          reduce using rule 19 (IntegralType -> CHAR .)
    IDENTIFIER      reduce using rule 19 (IntegralType -> CHAR .)
    RPAREN          reduce using rule 19 (IntegralType -> CHAR .)


state 76

    (20) FloatingPointType -> FLOAT .

    LBRACK          reduce using rule 20 (FloatingPointType -> FLOAT .)
    IDENTIFIER      reduce using rule 20 (FloatingPointType -> FLOAT .)
    RPAREN          reduce using rule 20 (FloatingPointType -> FLOAT .)


state 77

    (21) FloatingPointType -> DOUBLE .

    LBRACK          reduce using rule 21 (FloatingPointType -> DOUBLE .)
    IDENTIFIER      reduce using rule 21 (FloatingPointType -> DOUBLE .)
    RPAREN          reduce using rule 21 (FloatingPointType -> DOUBLE .)


state 78

    (28) Name -> QualifiedName .

    DOT             reduce using rule 28 (Name -> QualifiedName .)
    LBRACK          reduce using rule 28 (Name -> QualifiedName .)
    IDENTIFIER      reduce using rule 28 (Name -> QualifiedName .)
    LPAREN          reduce using rule 28 (Name -> QualifiedName .)
    ASSIGN          reduce using rule 28 (Name -> QualifiedName .)
    ADD_ASSIGN      reduce using rule 28 (Name -> QualifiedName .)
    SUB_ASSIGN      reduce using rule 28 (Name -> QualifiedName .)
    MUL_ASSIGN      reduce using rule 28 (Name -> QualifiedName .)
    DIV_ASSIGN      reduce using rule 28 (Name -> QualifiedName .)
    AND_ASSIGN      reduce using rule 28 (Name -> QualifiedName .)
    OR_ASSIGN       reduce using rule 28 (Name -> QualifiedName .)
    XOR_ASSIGN      reduce using rule 28 (Name -> QualifiedName .)
    MOD_ASSIGN      reduce using rule 28 (Name -> QualifiedName .)
    LSHIFT_ASSIGN   reduce using rule 28 (Name -> QualifiedName .)
    RSHIFT_ASSIGN   reduce using rule 28 (Name -> QualifiedName .)
    URSHIFT_ASSIGN  reduce using rule 28 (Name -> QualifiedName .)
    INC             reduce using rule 28 (Name -> QualifiedName .)
    DEC             reduce using rule 28 (Name -> QualifiedName .)
    MUL             reduce using rule 28 (Name -> QualifiedName .)
    DIV             reduce using rule 28 (Name -> QualifiedName .)
    MOD             reduce using rule 28 (Name -> QualifiedName .)
    ADD             reduce using rule 28 (Name -> QualifiedName .)
    SUB             reduce using rule 28 (Name -> QualifiedName .)
    LSHIFT          reduce using rule 28 (Name -> QualifiedName .)
    RSHIFT          reduce using rule 28 (Name -> QualifiedName .)
    URSHIFT         reduce using rule 28 (Name -> QualifiedName .)
    LT              reduce using rule 28 (Name -> QualifiedName .)
    GT              reduce using rule 28 (Name -> QualifiedName .)
    LE              reduce using rule 28 (Name -> QualifiedName .)
    GE              reduce using rule 28 (Name -> QualifiedName .)
    EQUAL           reduce using rule 28 (Name -> QualifiedName .)
    NOTEQUAL        reduce using rule 28 (Name -> QualifiedName .)
    BITAND          reduce using rule 28 (Name -> QualifiedName .)
    CARET           reduce using rule 28 (Name -> QualifiedName .)
    BITOR           reduce using rule 28 (Name -> QualifiedName .)
    AND             reduce using rule 28 (Name -> QualifiedName .)
    QUESTION        reduce using rule 28 (Name -> QualifiedName .)
    OR              reduce using rule 28 (Name -> QualifiedName .)
    RPAREN          reduce using rule 28 (Name -> QualifiedName .)
    SEMI            reduce using rule 28 (Name -> QualifiedName .)
    COMMA           reduce using rule 28 (Name -> QualifiedName .)
    RBRACK          reduce using rule 28 (Name -> QualifiedName .)
    RBRACE          reduce using rule 28 (Name -> QualifiedName .)
    COLON           reduce using rule 28 (Name -> QualifiedName .)


state 79

    (61) ClassBody -> LBRACE ClassBodyDeclarations RBRACE .

    SEMI            reduce using rule 61 (ClassBody -> LBRACE ClassBodyDeclarations RBRACE .)
    CLASS           reduce using rule 61 (ClassBody -> LBRACE ClassBodyDeclarations RBRACE .)
    STATIC          reduce using rule 61 (ClassBody -> LBRACE ClassBodyDeclarations RBRACE .)
    FINAL           reduce using rule 61 (ClassBody -> LBRACE ClassBodyDeclarations RBRACE .)
    PRIVATE         reduce using rule 61 (ClassBody -> LBRACE ClassBodyDeclarations RBRACE .)
    PROTECTED       reduce using rule 61 (ClassBody -> LBRACE ClassBodyDeclarations RBRACE .)
    PUBLIC          reduce using rule 61 (ClassBody -> LBRACE ClassBodyDeclarations RBRACE .)
    $end            reduce using rule 61 (ClassBody -> LBRACE ClassBodyDeclarations RBRACE .)


state 80

    (63) ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .

    RBRACE          reduce using rule 63 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    VOID            reduce using rule 63 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    STATIC          reduce using rule 63 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    FINAL           reduce using rule 63 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    PRIVATE         reduce using rule 63 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    PROTECTED       reduce using rule 63 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    PUBLIC          reduce using rule 63 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    IDENTIFIER      reduce using rule 63 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    BOOLEAN         reduce using rule 63 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    BYTE            reduce using rule 63 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    SHORT           reduce using rule 63 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    INT             reduce using rule 63 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    LONG            reduce using rule 63 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    CHAR            reduce using rule 63 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    FLOAT           reduce using rule 63 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)
    DOUBLE          reduce using rule 63 (ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration .)


state 81

    (92) ConstructorDeclaration -> Modifiers ConstructorDeclarator . ConstructorBody
    (96) ConstructorBody -> .
    (97) ConstructorBody -> . LBRACE BlockStatements RBRACE
    (98) ConstructorBody -> . LBRACE RBRACE

    RBRACE          reduce using rule 96 (ConstructorBody -> .)
    VOID            reduce using rule 96 (ConstructorBody -> .)
    STATIC          reduce using rule 96 (ConstructorBody -> .)
    FINAL           reduce using rule 96 (ConstructorBody -> .)
    PRIVATE         reduce using rule 96 (ConstructorBody -> .)
    PROTECTED       reduce using rule 96 (ConstructorBody -> .)
    PUBLIC          reduce using rule 96 (ConstructorBody -> .)
    IDENTIFIER      reduce using rule 96 (ConstructorBody -> .)
    BOOLEAN         reduce using rule 96 (ConstructorBody -> .)
    BYTE            reduce using rule 96 (ConstructorBody -> .)
    SHORT           reduce using rule 96 (ConstructorBody -> .)
    INT             reduce using rule 96 (ConstructorBody -> .)
    LONG            reduce using rule 96 (ConstructorBody -> .)
    CHAR            reduce using rule 96 (ConstructorBody -> .)
    FLOAT           reduce using rule 96 (ConstructorBody -> .)
    DOUBLE          reduce using rule 96 (ConstructorBody -> .)
    LBRACE          shift and go to state 85

    ConstructorBody                shift and go to state 104

state 82

    (69) FieldDeclaration -> Modifiers Type . VariableDeclarators SEMI
    (80) MethodHeader -> Modifiers Type . MethodDeclarator
    (71) VariableDeclarators -> . VariableDeclarator
    (72) VariableDeclarators -> . VariableDeclarators COMMA VariableDeclarator
    (84) MethodDeclarator -> . IDENTIFIER LPAREN RPAREN
    (85) MethodDeclarator -> . IDENTIFIER LPAREN FormalParameterList RPAREN
    (73) VariableDeclarator -> . VariableDeclaratorId
    (74) VariableDeclarator -> . VariableDeclaratorId ASSIGN VariableInitializer
    (75) VariableDeclaratorId -> . IDENTIFIER
    (76) VariableDeclaratorId -> . IDENTIFIER Dims

    IDENTIFIER      shift and go to state 90

    VariableDeclarators            shift and go to state 105
    MethodDeclarator               shift and go to state 106
    VariableDeclarator             shift and go to state 89
    VariableDeclaratorId           shift and go to state 91

state 83

    (82) MethodHeader -> Modifiers VOID . MethodDeclarator
    (84) MethodDeclarator -> . IDENTIFIER LPAREN RPAREN
    (85) MethodDeclarator -> . IDENTIFIER LPAREN FormalParameterList RPAREN

    IDENTIFIER      shift and go to state 101

    MethodDeclarator               shift and go to state 107

state 84

    (93) ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .

    RBRACE          reduce using rule 93 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    VOID            reduce using rule 93 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    STATIC          reduce using rule 93 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    FINAL           reduce using rule 93 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    PRIVATE         reduce using rule 93 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    PROTECTED       reduce using rule 93 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    PUBLIC          reduce using rule 93 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    IDENTIFIER      reduce using rule 93 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    BOOLEAN         reduce using rule 93 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    BYTE            reduce using rule 93 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    SHORT           reduce using rule 93 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    INT             reduce using rule 93 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    LONG            reduce using rule 93 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    CHAR            reduce using rule 93 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    FLOAT           reduce using rule 93 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)
    DOUBLE          reduce using rule 93 (ConstructorDeclaration -> ConstructorDeclarator ConstructorBody .)


state 85

    (97) ConstructorBody -> LBRACE . BlockStatements RBRACE
    (98) ConstructorBody -> LBRACE . RBRACE
    (107) BlockStatements -> . BlockStatement
    (108) BlockStatements -> . BlockStatements BlockStatement
    (109) BlockStatement -> . LocalVariableDeclarationStatement
    (110) BlockStatement -> . Statement
    (111) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMI
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (112) LocalVariableDeclaration -> . Type VariableDeclarators
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RBRACE          shift and go to state 109
    IDENTIFIER      shift and go to state 130
    IF              shift and go to state 131
    WHILE           shift and go to state 133
    FOR             shift and go to state 134
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    BOOLEAN         shift and go to state 65
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    BYTE            shift and go to state 71
    SHORT           shift and go to state 72
    INT             shift and go to state 73
    LONG            shift and go to state 74
    CHAR            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    BlockStatements                shift and go to state 108
    BlockStatement                 shift and go to state 110
    LocalVariableDeclarationStatement shift and go to state 111
    Statement                      shift and go to state 112
    LocalVariableDeclaration       shift and go to state 113
    StatementWithoutTrailingSubstatement shift and go to state 115
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    Type                           shift and go to state 121
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    PrimitiveType                  shift and go to state 60
    ReferenceType                  shift and go to state 61
    StatementExpression            shift and go to state 135
    NumericType                    shift and go to state 64
    ArrayType                      shift and go to state 66
    ClassType                      shift and go to state 67
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    IntegralType                   shift and go to state 68
    FloatingPointType              shift and go to state 69
    Name                           shift and go to state 148
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Primary                        shift and go to state 153
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 86

    (91) StaticInitializer -> begin_scope STATIC . Block end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE

    LBRACE          shift and go to state 95

    Block                          shift and go to state 170

state 87

    (70) FieldDeclaration -> Type VariableDeclarators . SEMI
    (72) VariableDeclarators -> VariableDeclarators . COMMA VariableDeclarator

    SEMI            shift and go to state 171
    COMMA           shift and go to state 172


state 88

    (81) MethodHeader -> Type MethodDeclarator .

    SEMI            reduce using rule 81 (MethodHeader -> Type MethodDeclarator .)
    LBRACE          reduce using rule 81 (MethodHeader -> Type MethodDeclarator .)


state 89

    (71) VariableDeclarators -> VariableDeclarator .

    SEMI            reduce using rule 71 (VariableDeclarators -> VariableDeclarator .)
    COMMA           reduce using rule 71 (VariableDeclarators -> VariableDeclarator .)


state 90

    (84) MethodDeclarator -> IDENTIFIER . LPAREN RPAREN
    (85) MethodDeclarator -> IDENTIFIER . LPAREN FormalParameterList RPAREN
    (75) VariableDeclaratorId -> IDENTIFIER .
    (76) VariableDeclaratorId -> IDENTIFIER . Dims
    (208) Dims -> . LBRACK RBRACK
    (209) Dims -> . Dims LBRACK RBRACK

    LPAREN          shift and go to state 173
    ASSIGN          reduce using rule 75 (VariableDeclaratorId -> IDENTIFIER .)
    SEMI            reduce using rule 75 (VariableDeclaratorId -> IDENTIFIER .)
    COMMA           reduce using rule 75 (VariableDeclaratorId -> IDENTIFIER .)
    LBRACK          shift and go to state 99

    Dims                           shift and go to state 174

state 91

    (73) VariableDeclarator -> VariableDeclaratorId .
    (74) VariableDeclarator -> VariableDeclaratorId . ASSIGN VariableInitializer

    SEMI            reduce using rule 73 (VariableDeclarator -> VariableDeclaratorId .)
    COMMA           reduce using rule 73 (VariableDeclarator -> VariableDeclaratorId .)
    ASSIGN          shift and go to state 175


state 92

    (79) MethodDeclaration -> MethodHeader MethodBody .

    RBRACE          reduce using rule 79 (MethodDeclaration -> MethodHeader MethodBody .)
    VOID            reduce using rule 79 (MethodDeclaration -> MethodHeader MethodBody .)
    STATIC          reduce using rule 79 (MethodDeclaration -> MethodHeader MethodBody .)
    FINAL           reduce using rule 79 (MethodDeclaration -> MethodHeader MethodBody .)
    PRIVATE         reduce using rule 79 (MethodDeclaration -> MethodHeader MethodBody .)
    PROTECTED       reduce using rule 79 (MethodDeclaration -> MethodHeader MethodBody .)
    PUBLIC          reduce using rule 79 (MethodDeclaration -> MethodHeader MethodBody .)
    IDENTIFIER      reduce using rule 79 (MethodDeclaration -> MethodHeader MethodBody .)
    BOOLEAN         reduce using rule 79 (MethodDeclaration -> MethodHeader MethodBody .)
    BYTE            reduce using rule 79 (MethodDeclaration -> MethodHeader MethodBody .)
    SHORT           reduce using rule 79 (MethodDeclaration -> MethodHeader MethodBody .)
    INT             reduce using rule 79 (MethodDeclaration -> MethodHeader MethodBody .)
    LONG            reduce using rule 79 (MethodDeclaration -> MethodHeader MethodBody .)
    CHAR            reduce using rule 79 (MethodDeclaration -> MethodHeader MethodBody .)
    FLOAT           reduce using rule 79 (MethodDeclaration -> MethodHeader MethodBody .)
    DOUBLE          reduce using rule 79 (MethodDeclaration -> MethodHeader MethodBody .)


state 93

    (89) MethodBody -> Block .

    RBRACE          reduce using rule 89 (MethodBody -> Block .)
    VOID            reduce using rule 89 (MethodBody -> Block .)
    STATIC          reduce using rule 89 (MethodBody -> Block .)
    FINAL           reduce using rule 89 (MethodBody -> Block .)
    PRIVATE         reduce using rule 89 (MethodBody -> Block .)
    PROTECTED       reduce using rule 89 (MethodBody -> Block .)
    PUBLIC          reduce using rule 89 (MethodBody -> Block .)
    IDENTIFIER      reduce using rule 89 (MethodBody -> Block .)
    BOOLEAN         reduce using rule 89 (MethodBody -> Block .)
    BYTE            reduce using rule 89 (MethodBody -> Block .)
    SHORT           reduce using rule 89 (MethodBody -> Block .)
    INT             reduce using rule 89 (MethodBody -> Block .)
    LONG            reduce using rule 89 (MethodBody -> Block .)
    CHAR            reduce using rule 89 (MethodBody -> Block .)
    FLOAT           reduce using rule 89 (MethodBody -> Block .)
    DOUBLE          reduce using rule 89 (MethodBody -> Block .)


state 94

    (90) MethodBody -> SEMI .

    RBRACE          reduce using rule 90 (MethodBody -> SEMI .)
    VOID            reduce using rule 90 (MethodBody -> SEMI .)
    STATIC          reduce using rule 90 (MethodBody -> SEMI .)
    FINAL           reduce using rule 90 (MethodBody -> SEMI .)
    PRIVATE         reduce using rule 90 (MethodBody -> SEMI .)
    PROTECTED       reduce using rule 90 (MethodBody -> SEMI .)
    PUBLIC          reduce using rule 90 (MethodBody -> SEMI .)
    IDENTIFIER      reduce using rule 90 (MethodBody -> SEMI .)
    BOOLEAN         reduce using rule 90 (MethodBody -> SEMI .)
    BYTE            reduce using rule 90 (MethodBody -> SEMI .)
    SHORT           reduce using rule 90 (MethodBody -> SEMI .)
    INT             reduce using rule 90 (MethodBody -> SEMI .)
    LONG            reduce using rule 90 (MethodBody -> SEMI .)
    CHAR            reduce using rule 90 (MethodBody -> SEMI .)
    FLOAT           reduce using rule 90 (MethodBody -> SEMI .)
    DOUBLE          reduce using rule 90 (MethodBody -> SEMI .)


state 95

    (105) Block -> LBRACE . RBRACE
    (106) Block -> LBRACE . BlockStatements RBRACE
    (107) BlockStatements -> . BlockStatement
    (108) BlockStatements -> . BlockStatements BlockStatement
    (109) BlockStatement -> . LocalVariableDeclarationStatement
    (110) BlockStatement -> . Statement
    (111) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMI
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (112) LocalVariableDeclaration -> . Type VariableDeclarators
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RBRACE          shift and go to state 176
    IDENTIFIER      shift and go to state 130
    IF              shift and go to state 131
    WHILE           shift and go to state 133
    FOR             shift and go to state 134
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    BOOLEAN         shift and go to state 65
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    BYTE            shift and go to state 71
    SHORT           shift and go to state 72
    INT             shift and go to state 73
    LONG            shift and go to state 74
    CHAR            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    BlockStatements                shift and go to state 177
    BlockStatement                 shift and go to state 110
    LocalVariableDeclarationStatement shift and go to state 111
    Statement                      shift and go to state 112
    LocalVariableDeclaration       shift and go to state 113
    StatementWithoutTrailingSubstatement shift and go to state 115
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    Type                           shift and go to state 121
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    PrimitiveType                  shift and go to state 60
    ReferenceType                  shift and go to state 61
    StatementExpression            shift and go to state 135
    NumericType                    shift and go to state 64
    ArrayType                      shift and go to state 66
    ClassType                      shift and go to state 67
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    IntegralType                   shift and go to state 68
    FloatingPointType              shift and go to state 69
    Name                           shift and go to state 148
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Primary                        shift and go to state 153
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 96

    (94) ConstructorDeclarator -> SimpleName LPAREN . decl_mark FormalParameterList RPAREN
    (290) decl_mark -> .

    BOOLEAN         reduce using rule 290 (decl_mark -> .)
    BYTE            reduce using rule 290 (decl_mark -> .)
    SHORT           reduce using rule 290 (decl_mark -> .)
    INT             reduce using rule 290 (decl_mark -> .)
    LONG            reduce using rule 290 (decl_mark -> .)
    CHAR            reduce using rule 290 (decl_mark -> .)
    FLOAT           reduce using rule 290 (decl_mark -> .)
    DOUBLE          reduce using rule 290 (decl_mark -> .)
    IDENTIFIER      reduce using rule 290 (decl_mark -> .)

    decl_mark                      shift and go to state 178

state 97

    (95) ConstructorDeclarator -> SimpleName decl_mark . LPAREN RPAREN

    LPAREN          shift and go to state 179


state 98

    (25) ArrayType -> PrimitiveType Dims .
    (209) Dims -> Dims . LBRACK RBRACK

    IDENTIFIER      reduce using rule 25 (ArrayType -> PrimitiveType Dims .)
    LBRACK          shift and go to state 180


state 99

    (208) Dims -> LBRACK . RBRACK

    RBRACK          shift and go to state 181


state 100

    (83) MethodHeader -> VOID MethodDeclarator .

    SEMI            reduce using rule 83 (MethodHeader -> VOID MethodDeclarator .)
    LBRACE          reduce using rule 83 (MethodHeader -> VOID MethodDeclarator .)


state 101

    (84) MethodDeclarator -> IDENTIFIER . LPAREN RPAREN
    (85) MethodDeclarator -> IDENTIFIER . LPAREN FormalParameterList RPAREN

    LPAREN          shift and go to state 173


state 102

    (26) ArrayType -> Name Dims .
    (209) Dims -> Dims . LBRACK RBRACK

    IDENTIFIER      reduce using rule 26 (ArrayType -> Name Dims .)
    LBRACK          shift and go to state 180


state 103

    (30) QualifiedName -> Name DOT . IDENTIFIER

    IDENTIFIER      shift and go to state 182


state 104

    (92) ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .

    RBRACE          reduce using rule 92 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    VOID            reduce using rule 92 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    STATIC          reduce using rule 92 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    FINAL           reduce using rule 92 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    PRIVATE         reduce using rule 92 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    PROTECTED       reduce using rule 92 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    PUBLIC          reduce using rule 92 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    IDENTIFIER      reduce using rule 92 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    BOOLEAN         reduce using rule 92 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    BYTE            reduce using rule 92 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    SHORT           reduce using rule 92 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    INT             reduce using rule 92 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    LONG            reduce using rule 92 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    CHAR            reduce using rule 92 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    FLOAT           reduce using rule 92 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)
    DOUBLE          reduce using rule 92 (ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody .)


state 105

    (69) FieldDeclaration -> Modifiers Type VariableDeclarators . SEMI
    (72) VariableDeclarators -> VariableDeclarators . COMMA VariableDeclarator

    SEMI            shift and go to state 183
    COMMA           shift and go to state 172


state 106

    (80) MethodHeader -> Modifiers Type MethodDeclarator .

    SEMI            reduce using rule 80 (MethodHeader -> Modifiers Type MethodDeclarator .)
    LBRACE          reduce using rule 80 (MethodHeader -> Modifiers Type MethodDeclarator .)


state 107

    (82) MethodHeader -> Modifiers VOID MethodDeclarator .

    SEMI            reduce using rule 82 (MethodHeader -> Modifiers VOID MethodDeclarator .)
    LBRACE          reduce using rule 82 (MethodHeader -> Modifiers VOID MethodDeclarator .)


state 108

    (97) ConstructorBody -> LBRACE BlockStatements . RBRACE
    (108) BlockStatements -> BlockStatements . BlockStatement
    (109) BlockStatement -> . LocalVariableDeclarationStatement
    (110) BlockStatement -> . Statement
    (111) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMI
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (112) LocalVariableDeclaration -> . Type VariableDeclarators
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RBRACE          shift and go to state 184
    IDENTIFIER      shift and go to state 130
    IF              shift and go to state 131
    WHILE           shift and go to state 133
    FOR             shift and go to state 134
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    BOOLEAN         shift and go to state 65
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    BYTE            shift and go to state 71
    SHORT           shift and go to state 72
    INT             shift and go to state 73
    LONG            shift and go to state 74
    CHAR            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    BlockStatement                 shift and go to state 185
    LocalVariableDeclarationStatement shift and go to state 111
    Statement                      shift and go to state 112
    LocalVariableDeclaration       shift and go to state 113
    StatementWithoutTrailingSubstatement shift and go to state 115
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    Type                           shift and go to state 121
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    PrimitiveType                  shift and go to state 60
    ReferenceType                  shift and go to state 61
    StatementExpression            shift and go to state 135
    NumericType                    shift and go to state 64
    ArrayType                      shift and go to state 66
    ClassType                      shift and go to state 67
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    IntegralType                   shift and go to state 68
    FloatingPointType              shift and go to state 69
    Name                           shift and go to state 148
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Primary                        shift and go to state 153
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 109

    (98) ConstructorBody -> LBRACE RBRACE .

    RBRACE          reduce using rule 98 (ConstructorBody -> LBRACE RBRACE .)
    VOID            reduce using rule 98 (ConstructorBody -> LBRACE RBRACE .)
    STATIC          reduce using rule 98 (ConstructorBody -> LBRACE RBRACE .)
    FINAL           reduce using rule 98 (ConstructorBody -> LBRACE RBRACE .)
    PRIVATE         reduce using rule 98 (ConstructorBody -> LBRACE RBRACE .)
    PROTECTED       reduce using rule 98 (ConstructorBody -> LBRACE RBRACE .)
    PUBLIC          reduce using rule 98 (ConstructorBody -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 98 (ConstructorBody -> LBRACE RBRACE .)
    BOOLEAN         reduce using rule 98 (ConstructorBody -> LBRACE RBRACE .)
    BYTE            reduce using rule 98 (ConstructorBody -> LBRACE RBRACE .)
    SHORT           reduce using rule 98 (ConstructorBody -> LBRACE RBRACE .)
    INT             reduce using rule 98 (ConstructorBody -> LBRACE RBRACE .)
    LONG            reduce using rule 98 (ConstructorBody -> LBRACE RBRACE .)
    CHAR            reduce using rule 98 (ConstructorBody -> LBRACE RBRACE .)
    FLOAT           reduce using rule 98 (ConstructorBody -> LBRACE RBRACE .)
    DOUBLE          reduce using rule 98 (ConstructorBody -> LBRACE RBRACE .)


state 110

    (107) BlockStatements -> BlockStatement .

    RBRACE          reduce using rule 107 (BlockStatements -> BlockStatement .)
    IDENTIFIER      reduce using rule 107 (BlockStatements -> BlockStatement .)
    IF              reduce using rule 107 (BlockStatements -> BlockStatement .)
    WHILE           reduce using rule 107 (BlockStatements -> BlockStatement .)
    FOR             reduce using rule 107 (BlockStatements -> BlockStatement .)
    LBRACE          reduce using rule 107 (BlockStatements -> BlockStatement .)
    SEMI            reduce using rule 107 (BlockStatements -> BlockStatement .)
    SWITCH          reduce using rule 107 (BlockStatements -> BlockStatement .)
    DO              reduce using rule 107 (BlockStatements -> BlockStatement .)
    BREAK           reduce using rule 107 (BlockStatements -> BlockStatement .)
    CONTINUE        reduce using rule 107 (BlockStatements -> BlockStatement .)
    RETURN          reduce using rule 107 (BlockStatements -> BlockStatement .)
    BOOLEAN         reduce using rule 107 (BlockStatements -> BlockStatement .)
    INC             reduce using rule 107 (BlockStatements -> BlockStatement .)
    DEC             reduce using rule 107 (BlockStatements -> BlockStatement .)
    NEW             reduce using rule 107 (BlockStatements -> BlockStatement .)
    BYTE            reduce using rule 107 (BlockStatements -> BlockStatement .)
    SHORT           reduce using rule 107 (BlockStatements -> BlockStatement .)
    INT             reduce using rule 107 (BlockStatements -> BlockStatement .)
    LONG            reduce using rule 107 (BlockStatements -> BlockStatement .)
    CHAR            reduce using rule 107 (BlockStatements -> BlockStatement .)
    FLOAT           reduce using rule 107 (BlockStatements -> BlockStatement .)
    DOUBLE          reduce using rule 107 (BlockStatements -> BlockStatement .)
    SUPER           reduce using rule 107 (BlockStatements -> BlockStatement .)
    THIS            reduce using rule 107 (BlockStatements -> BlockStatement .)
    LPAREN          reduce using rule 107 (BlockStatements -> BlockStatement .)
    DECIMAL_LITERAL reduce using rule 107 (BlockStatements -> BlockStatement .)
    HEX_LITERAL     reduce using rule 107 (BlockStatements -> BlockStatement .)
    BINARY_LITERAL  reduce using rule 107 (BlockStatements -> BlockStatement .)
    FLOAT_LITERAL   reduce using rule 107 (BlockStatements -> BlockStatement .)
    BOOL_LITERAL    reduce using rule 107 (BlockStatements -> BlockStatement .)
    CHAR_LITERAL    reduce using rule 107 (BlockStatements -> BlockStatement .)
    STRING_LITERAL  reduce using rule 107 (BlockStatements -> BlockStatement .)
    CASE            reduce using rule 107 (BlockStatements -> BlockStatement .)
    DEFAULT         reduce using rule 107 (BlockStatements -> BlockStatement .)


state 111

    (109) BlockStatement -> LocalVariableDeclarationStatement .

    RBRACE          reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    IDENTIFIER      reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    IF              reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    WHILE           reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    FOR             reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    LBRACE          reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    SEMI            reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    SWITCH          reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    DO              reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    BREAK           reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    CONTINUE        reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    RETURN          reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    BOOLEAN         reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    INC             reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    DEC             reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    NEW             reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    BYTE            reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    SHORT           reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    INT             reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    LONG            reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    CHAR            reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    FLOAT           reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    DOUBLE          reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    SUPER           reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    THIS            reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    LPAREN          reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    DECIMAL_LITERAL reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    HEX_LITERAL     reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    BINARY_LITERAL  reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    FLOAT_LITERAL   reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    BOOL_LITERAL    reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    CHAR_LITERAL    reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    STRING_LITERAL  reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    CASE            reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)
    DEFAULT         reduce using rule 109 (BlockStatement -> LocalVariableDeclarationStatement .)


state 112

    (110) BlockStatement -> Statement .

    RBRACE          reduce using rule 110 (BlockStatement -> Statement .)
    IDENTIFIER      reduce using rule 110 (BlockStatement -> Statement .)
    IF              reduce using rule 110 (BlockStatement -> Statement .)
    WHILE           reduce using rule 110 (BlockStatement -> Statement .)
    FOR             reduce using rule 110 (BlockStatement -> Statement .)
    LBRACE          reduce using rule 110 (BlockStatement -> Statement .)
    SEMI            reduce using rule 110 (BlockStatement -> Statement .)
    SWITCH          reduce using rule 110 (BlockStatement -> Statement .)
    DO              reduce using rule 110 (BlockStatement -> Statement .)
    BREAK           reduce using rule 110 (BlockStatement -> Statement .)
    CONTINUE        reduce using rule 110 (BlockStatement -> Statement .)
    RETURN          reduce using rule 110 (BlockStatement -> Statement .)
    BOOLEAN         reduce using rule 110 (BlockStatement -> Statement .)
    INC             reduce using rule 110 (BlockStatement -> Statement .)
    DEC             reduce using rule 110 (BlockStatement -> Statement .)
    NEW             reduce using rule 110 (BlockStatement -> Statement .)
    BYTE            reduce using rule 110 (BlockStatement -> Statement .)
    SHORT           reduce using rule 110 (BlockStatement -> Statement .)
    INT             reduce using rule 110 (BlockStatement -> Statement .)
    LONG            reduce using rule 110 (BlockStatement -> Statement .)
    CHAR            reduce using rule 110 (BlockStatement -> Statement .)
    FLOAT           reduce using rule 110 (BlockStatement -> Statement .)
    DOUBLE          reduce using rule 110 (BlockStatement -> Statement .)
    SUPER           reduce using rule 110 (BlockStatement -> Statement .)
    THIS            reduce using rule 110 (BlockStatement -> Statement .)
    LPAREN          reduce using rule 110 (BlockStatement -> Statement .)
    DECIMAL_LITERAL reduce using rule 110 (BlockStatement -> Statement .)
    HEX_LITERAL     reduce using rule 110 (BlockStatement -> Statement .)
    BINARY_LITERAL  reduce using rule 110 (BlockStatement -> Statement .)
    FLOAT_LITERAL   reduce using rule 110 (BlockStatement -> Statement .)
    BOOL_LITERAL    reduce using rule 110 (BlockStatement -> Statement .)
    CHAR_LITERAL    reduce using rule 110 (BlockStatement -> Statement .)
    STRING_LITERAL  reduce using rule 110 (BlockStatement -> Statement .)
    CASE            reduce using rule 110 (BlockStatement -> Statement .)
    DEFAULT         reduce using rule 110 (BlockStatement -> Statement .)


state 113

    (111) LocalVariableDeclarationStatement -> LocalVariableDeclaration . SEMI

    SEMI            shift and go to state 186


state 114

    (132) EmptyStatement -> SEMI .

    RBRACE          reduce using rule 132 (EmptyStatement -> SEMI .)
    IDENTIFIER      reduce using rule 132 (EmptyStatement -> SEMI .)
    IF              reduce using rule 132 (EmptyStatement -> SEMI .)
    WHILE           reduce using rule 132 (EmptyStatement -> SEMI .)
    FOR             reduce using rule 132 (EmptyStatement -> SEMI .)
    LBRACE          reduce using rule 132 (EmptyStatement -> SEMI .)
    SEMI            reduce using rule 132 (EmptyStatement -> SEMI .)
    SWITCH          reduce using rule 132 (EmptyStatement -> SEMI .)
    DO              reduce using rule 132 (EmptyStatement -> SEMI .)
    BREAK           reduce using rule 132 (EmptyStatement -> SEMI .)
    CONTINUE        reduce using rule 132 (EmptyStatement -> SEMI .)
    RETURN          reduce using rule 132 (EmptyStatement -> SEMI .)
    BOOLEAN         reduce using rule 132 (EmptyStatement -> SEMI .)
    INC             reduce using rule 132 (EmptyStatement -> SEMI .)
    DEC             reduce using rule 132 (EmptyStatement -> SEMI .)
    NEW             reduce using rule 132 (EmptyStatement -> SEMI .)
    BYTE            reduce using rule 132 (EmptyStatement -> SEMI .)
    SHORT           reduce using rule 132 (EmptyStatement -> SEMI .)
    INT             reduce using rule 132 (EmptyStatement -> SEMI .)
    LONG            reduce using rule 132 (EmptyStatement -> SEMI .)
    CHAR            reduce using rule 132 (EmptyStatement -> SEMI .)
    FLOAT           reduce using rule 132 (EmptyStatement -> SEMI .)
    DOUBLE          reduce using rule 132 (EmptyStatement -> SEMI .)
    SUPER           reduce using rule 132 (EmptyStatement -> SEMI .)
    THIS            reduce using rule 132 (EmptyStatement -> SEMI .)
    LPAREN          reduce using rule 132 (EmptyStatement -> SEMI .)
    DECIMAL_LITERAL reduce using rule 132 (EmptyStatement -> SEMI .)
    HEX_LITERAL     reduce using rule 132 (EmptyStatement -> SEMI .)
    BINARY_LITERAL  reduce using rule 132 (EmptyStatement -> SEMI .)
    FLOAT_LITERAL   reduce using rule 132 (EmptyStatement -> SEMI .)
    BOOL_LITERAL    reduce using rule 132 (EmptyStatement -> SEMI .)
    CHAR_LITERAL    reduce using rule 132 (EmptyStatement -> SEMI .)
    STRING_LITERAL  reduce using rule 132 (EmptyStatement -> SEMI .)
    CASE            reduce using rule 132 (EmptyStatement -> SEMI .)
    DEFAULT         reduce using rule 132 (EmptyStatement -> SEMI .)
    ELSE            reduce using rule 132 (EmptyStatement -> SEMI .)


state 115

    (113) Statement -> StatementWithoutTrailingSubstatement .

    RBRACE          reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    IDENTIFIER      reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    IF              reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    WHILE           reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    FOR             reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    LBRACE          reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    SEMI            reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    SWITCH          reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    DO              reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    BREAK           reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    CONTINUE        reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    RETURN          reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    BOOLEAN         reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    INC             reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    DEC             reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    NEW             reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    BYTE            reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    SHORT           reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    INT             reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    LONG            reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    CHAR            reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    FLOAT           reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    DOUBLE          reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    SUPER           reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    THIS            reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    LPAREN          reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    DECIMAL_LITERAL reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    HEX_LITERAL     reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    BINARY_LITERAL  reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    FLOAT_LITERAL   reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    BOOL_LITERAL    reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    CHAR_LITERAL    reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    STRING_LITERAL  reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    CASE            reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    DEFAULT         reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)


state 116

    (114) Statement -> LabeledStatement .

    RBRACE          reduce using rule 114 (Statement -> LabeledStatement .)
    IDENTIFIER      reduce using rule 114 (Statement -> LabeledStatement .)
    IF              reduce using rule 114 (Statement -> LabeledStatement .)
    WHILE           reduce using rule 114 (Statement -> LabeledStatement .)
    FOR             reduce using rule 114 (Statement -> LabeledStatement .)
    LBRACE          reduce using rule 114 (Statement -> LabeledStatement .)
    SEMI            reduce using rule 114 (Statement -> LabeledStatement .)
    SWITCH          reduce using rule 114 (Statement -> LabeledStatement .)
    DO              reduce using rule 114 (Statement -> LabeledStatement .)
    BREAK           reduce using rule 114 (Statement -> LabeledStatement .)
    CONTINUE        reduce using rule 114 (Statement -> LabeledStatement .)
    RETURN          reduce using rule 114 (Statement -> LabeledStatement .)
    BOOLEAN         reduce using rule 114 (Statement -> LabeledStatement .)
    INC             reduce using rule 114 (Statement -> LabeledStatement .)
    DEC             reduce using rule 114 (Statement -> LabeledStatement .)
    NEW             reduce using rule 114 (Statement -> LabeledStatement .)
    BYTE            reduce using rule 114 (Statement -> LabeledStatement .)
    SHORT           reduce using rule 114 (Statement -> LabeledStatement .)
    INT             reduce using rule 114 (Statement -> LabeledStatement .)
    LONG            reduce using rule 114 (Statement -> LabeledStatement .)
    CHAR            reduce using rule 114 (Statement -> LabeledStatement .)
    FLOAT           reduce using rule 114 (Statement -> LabeledStatement .)
    DOUBLE          reduce using rule 114 (Statement -> LabeledStatement .)
    SUPER           reduce using rule 114 (Statement -> LabeledStatement .)
    THIS            reduce using rule 114 (Statement -> LabeledStatement .)
    LPAREN          reduce using rule 114 (Statement -> LabeledStatement .)
    DECIMAL_LITERAL reduce using rule 114 (Statement -> LabeledStatement .)
    HEX_LITERAL     reduce using rule 114 (Statement -> LabeledStatement .)
    BINARY_LITERAL  reduce using rule 114 (Statement -> LabeledStatement .)
    FLOAT_LITERAL   reduce using rule 114 (Statement -> LabeledStatement .)
    BOOL_LITERAL    reduce using rule 114 (Statement -> LabeledStatement .)
    CHAR_LITERAL    reduce using rule 114 (Statement -> LabeledStatement .)
    STRING_LITERAL  reduce using rule 114 (Statement -> LabeledStatement .)
    CASE            reduce using rule 114 (Statement -> LabeledStatement .)
    DEFAULT         reduce using rule 114 (Statement -> LabeledStatement .)


state 117

    (115) Statement -> IfThenStatement .

    RBRACE          reduce using rule 115 (Statement -> IfThenStatement .)
    IDENTIFIER      reduce using rule 115 (Statement -> IfThenStatement .)
    IF              reduce using rule 115 (Statement -> IfThenStatement .)
    WHILE           reduce using rule 115 (Statement -> IfThenStatement .)
    FOR             reduce using rule 115 (Statement -> IfThenStatement .)
    LBRACE          reduce using rule 115 (Statement -> IfThenStatement .)
    SEMI            reduce using rule 115 (Statement -> IfThenStatement .)
    SWITCH          reduce using rule 115 (Statement -> IfThenStatement .)
    DO              reduce using rule 115 (Statement -> IfThenStatement .)
    BREAK           reduce using rule 115 (Statement -> IfThenStatement .)
    CONTINUE        reduce using rule 115 (Statement -> IfThenStatement .)
    RETURN          reduce using rule 115 (Statement -> IfThenStatement .)
    BOOLEAN         reduce using rule 115 (Statement -> IfThenStatement .)
    INC             reduce using rule 115 (Statement -> IfThenStatement .)
    DEC             reduce using rule 115 (Statement -> IfThenStatement .)
    NEW             reduce using rule 115 (Statement -> IfThenStatement .)
    BYTE            reduce using rule 115 (Statement -> IfThenStatement .)
    SHORT           reduce using rule 115 (Statement -> IfThenStatement .)
    INT             reduce using rule 115 (Statement -> IfThenStatement .)
    LONG            reduce using rule 115 (Statement -> IfThenStatement .)
    CHAR            reduce using rule 115 (Statement -> IfThenStatement .)
    FLOAT           reduce using rule 115 (Statement -> IfThenStatement .)
    DOUBLE          reduce using rule 115 (Statement -> IfThenStatement .)
    SUPER           reduce using rule 115 (Statement -> IfThenStatement .)
    THIS            reduce using rule 115 (Statement -> IfThenStatement .)
    LPAREN          reduce using rule 115 (Statement -> IfThenStatement .)
    DECIMAL_LITERAL reduce using rule 115 (Statement -> IfThenStatement .)
    HEX_LITERAL     reduce using rule 115 (Statement -> IfThenStatement .)
    BINARY_LITERAL  reduce using rule 115 (Statement -> IfThenStatement .)
    FLOAT_LITERAL   reduce using rule 115 (Statement -> IfThenStatement .)
    BOOL_LITERAL    reduce using rule 115 (Statement -> IfThenStatement .)
    CHAR_LITERAL    reduce using rule 115 (Statement -> IfThenStatement .)
    STRING_LITERAL  reduce using rule 115 (Statement -> IfThenStatement .)
    CASE            reduce using rule 115 (Statement -> IfThenStatement .)
    DEFAULT         reduce using rule 115 (Statement -> IfThenStatement .)


state 118

    (116) Statement -> IfThenElseStatement .

    RBRACE          reduce using rule 116 (Statement -> IfThenElseStatement .)
    IDENTIFIER      reduce using rule 116 (Statement -> IfThenElseStatement .)
    IF              reduce using rule 116 (Statement -> IfThenElseStatement .)
    WHILE           reduce using rule 116 (Statement -> IfThenElseStatement .)
    FOR             reduce using rule 116 (Statement -> IfThenElseStatement .)
    LBRACE          reduce using rule 116 (Statement -> IfThenElseStatement .)
    SEMI            reduce using rule 116 (Statement -> IfThenElseStatement .)
    SWITCH          reduce using rule 116 (Statement -> IfThenElseStatement .)
    DO              reduce using rule 116 (Statement -> IfThenElseStatement .)
    BREAK           reduce using rule 116 (Statement -> IfThenElseStatement .)
    CONTINUE        reduce using rule 116 (Statement -> IfThenElseStatement .)
    RETURN          reduce using rule 116 (Statement -> IfThenElseStatement .)
    BOOLEAN         reduce using rule 116 (Statement -> IfThenElseStatement .)
    INC             reduce using rule 116 (Statement -> IfThenElseStatement .)
    DEC             reduce using rule 116 (Statement -> IfThenElseStatement .)
    NEW             reduce using rule 116 (Statement -> IfThenElseStatement .)
    BYTE            reduce using rule 116 (Statement -> IfThenElseStatement .)
    SHORT           reduce using rule 116 (Statement -> IfThenElseStatement .)
    INT             reduce using rule 116 (Statement -> IfThenElseStatement .)
    LONG            reduce using rule 116 (Statement -> IfThenElseStatement .)
    CHAR            reduce using rule 116 (Statement -> IfThenElseStatement .)
    FLOAT           reduce using rule 116 (Statement -> IfThenElseStatement .)
    DOUBLE          reduce using rule 116 (Statement -> IfThenElseStatement .)
    SUPER           reduce using rule 116 (Statement -> IfThenElseStatement .)
    THIS            reduce using rule 116 (Statement -> IfThenElseStatement .)
    LPAREN          reduce using rule 116 (Statement -> IfThenElseStatement .)
    DECIMAL_LITERAL reduce using rule 116 (Statement -> IfThenElseStatement .)
    HEX_LITERAL     reduce using rule 116 (Statement -> IfThenElseStatement .)
    BINARY_LITERAL  reduce using rule 116 (Statement -> IfThenElseStatement .)
    FLOAT_LITERAL   reduce using rule 116 (Statement -> IfThenElseStatement .)
    BOOL_LITERAL    reduce using rule 116 (Statement -> IfThenElseStatement .)
    CHAR_LITERAL    reduce using rule 116 (Statement -> IfThenElseStatement .)
    STRING_LITERAL  reduce using rule 116 (Statement -> IfThenElseStatement .)
    CASE            reduce using rule 116 (Statement -> IfThenElseStatement .)
    DEFAULT         reduce using rule 116 (Statement -> IfThenElseStatement .)


state 119

    (117) Statement -> WhileStatement .

    RBRACE          reduce using rule 117 (Statement -> WhileStatement .)
    IDENTIFIER      reduce using rule 117 (Statement -> WhileStatement .)
    IF              reduce using rule 117 (Statement -> WhileStatement .)
    WHILE           reduce using rule 117 (Statement -> WhileStatement .)
    FOR             reduce using rule 117 (Statement -> WhileStatement .)
    LBRACE          reduce using rule 117 (Statement -> WhileStatement .)
    SEMI            reduce using rule 117 (Statement -> WhileStatement .)
    SWITCH          reduce using rule 117 (Statement -> WhileStatement .)
    DO              reduce using rule 117 (Statement -> WhileStatement .)
    BREAK           reduce using rule 117 (Statement -> WhileStatement .)
    CONTINUE        reduce using rule 117 (Statement -> WhileStatement .)
    RETURN          reduce using rule 117 (Statement -> WhileStatement .)
    BOOLEAN         reduce using rule 117 (Statement -> WhileStatement .)
    INC             reduce using rule 117 (Statement -> WhileStatement .)
    DEC             reduce using rule 117 (Statement -> WhileStatement .)
    NEW             reduce using rule 117 (Statement -> WhileStatement .)
    BYTE            reduce using rule 117 (Statement -> WhileStatement .)
    SHORT           reduce using rule 117 (Statement -> WhileStatement .)
    INT             reduce using rule 117 (Statement -> WhileStatement .)
    LONG            reduce using rule 117 (Statement -> WhileStatement .)
    CHAR            reduce using rule 117 (Statement -> WhileStatement .)
    FLOAT           reduce using rule 117 (Statement -> WhileStatement .)
    DOUBLE          reduce using rule 117 (Statement -> WhileStatement .)
    SUPER           reduce using rule 117 (Statement -> WhileStatement .)
    THIS            reduce using rule 117 (Statement -> WhileStatement .)
    LPAREN          reduce using rule 117 (Statement -> WhileStatement .)
    DECIMAL_LITERAL reduce using rule 117 (Statement -> WhileStatement .)
    HEX_LITERAL     reduce using rule 117 (Statement -> WhileStatement .)
    BINARY_LITERAL  reduce using rule 117 (Statement -> WhileStatement .)
    FLOAT_LITERAL   reduce using rule 117 (Statement -> WhileStatement .)
    BOOL_LITERAL    reduce using rule 117 (Statement -> WhileStatement .)
    CHAR_LITERAL    reduce using rule 117 (Statement -> WhileStatement .)
    STRING_LITERAL  reduce using rule 117 (Statement -> WhileStatement .)
    CASE            reduce using rule 117 (Statement -> WhileStatement .)
    DEFAULT         reduce using rule 117 (Statement -> WhileStatement .)


state 120

    (118) Statement -> ForStatement .

    RBRACE          reduce using rule 118 (Statement -> ForStatement .)
    IDENTIFIER      reduce using rule 118 (Statement -> ForStatement .)
    IF              reduce using rule 118 (Statement -> ForStatement .)
    WHILE           reduce using rule 118 (Statement -> ForStatement .)
    FOR             reduce using rule 118 (Statement -> ForStatement .)
    LBRACE          reduce using rule 118 (Statement -> ForStatement .)
    SEMI            reduce using rule 118 (Statement -> ForStatement .)
    SWITCH          reduce using rule 118 (Statement -> ForStatement .)
    DO              reduce using rule 118 (Statement -> ForStatement .)
    BREAK           reduce using rule 118 (Statement -> ForStatement .)
    CONTINUE        reduce using rule 118 (Statement -> ForStatement .)
    RETURN          reduce using rule 118 (Statement -> ForStatement .)
    BOOLEAN         reduce using rule 118 (Statement -> ForStatement .)
    INC             reduce using rule 118 (Statement -> ForStatement .)
    DEC             reduce using rule 118 (Statement -> ForStatement .)
    NEW             reduce using rule 118 (Statement -> ForStatement .)
    BYTE            reduce using rule 118 (Statement -> ForStatement .)
    SHORT           reduce using rule 118 (Statement -> ForStatement .)
    INT             reduce using rule 118 (Statement -> ForStatement .)
    LONG            reduce using rule 118 (Statement -> ForStatement .)
    CHAR            reduce using rule 118 (Statement -> ForStatement .)
    FLOAT           reduce using rule 118 (Statement -> ForStatement .)
    DOUBLE          reduce using rule 118 (Statement -> ForStatement .)
    SUPER           reduce using rule 118 (Statement -> ForStatement .)
    THIS            reduce using rule 118 (Statement -> ForStatement .)
    LPAREN          reduce using rule 118 (Statement -> ForStatement .)
    DECIMAL_LITERAL reduce using rule 118 (Statement -> ForStatement .)
    HEX_LITERAL     reduce using rule 118 (Statement -> ForStatement .)
    BINARY_LITERAL  reduce using rule 118 (Statement -> ForStatement .)
    FLOAT_LITERAL   reduce using rule 118 (Statement -> ForStatement .)
    BOOL_LITERAL    reduce using rule 118 (Statement -> ForStatement .)
    CHAR_LITERAL    reduce using rule 118 (Statement -> ForStatement .)
    STRING_LITERAL  reduce using rule 118 (Statement -> ForStatement .)
    CASE            reduce using rule 118 (Statement -> ForStatement .)
    DEFAULT         reduce using rule 118 (Statement -> ForStatement .)


state 121

    (112) LocalVariableDeclaration -> Type . VariableDeclarators
    (71) VariableDeclarators -> . VariableDeclarator
    (72) VariableDeclarators -> . VariableDeclarators COMMA VariableDeclarator
    (73) VariableDeclarator -> . VariableDeclaratorId
    (74) VariableDeclarator -> . VariableDeclaratorId ASSIGN VariableInitializer
    (75) VariableDeclaratorId -> . IDENTIFIER
    (76) VariableDeclaratorId -> . IDENTIFIER Dims

    IDENTIFIER      shift and go to state 188

    VariableDeclarators            shift and go to state 187
    VariableDeclarator             shift and go to state 89
    VariableDeclaratorId           shift and go to state 91

state 122

    (124) StatementWithoutTrailingSubstatement -> Block .

    RBRACE          reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    IDENTIFIER      reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    IF              reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    WHILE           reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    FOR             reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    LBRACE          reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    SEMI            reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    SWITCH          reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    DO              reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    BREAK           reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    CONTINUE        reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    RETURN          reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    BOOLEAN         reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    INC             reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    DEC             reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    NEW             reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    BYTE            reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    SHORT           reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    INT             reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    LONG            reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    CHAR            reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    FLOAT           reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    DOUBLE          reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    SUPER           reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    THIS            reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    LPAREN          reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    DECIMAL_LITERAL reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    HEX_LITERAL     reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    BINARY_LITERAL  reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    FLOAT_LITERAL   reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    BOOL_LITERAL    reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    CHAR_LITERAL    reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    STRING_LITERAL  reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    CASE            reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    DEFAULT         reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)
    ELSE            reduce using rule 124 (StatementWithoutTrailingSubstatement -> Block .)


state 123

    (125) StatementWithoutTrailingSubstatement -> EmptyStatement .

    RBRACE          reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    IDENTIFIER      reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    IF              reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    WHILE           reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    FOR             reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    LBRACE          reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    SEMI            reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    SWITCH          reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    DO              reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    BREAK           reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    CONTINUE        reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    RETURN          reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    BOOLEAN         reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    INC             reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    DEC             reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    NEW             reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    BYTE            reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    SHORT           reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    INT             reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    LONG            reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    CHAR            reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    FLOAT           reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    DOUBLE          reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    SUPER           reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    THIS            reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    LPAREN          reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    DECIMAL_LITERAL reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    HEX_LITERAL     reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    BINARY_LITERAL  reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    FLOAT_LITERAL   reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    BOOL_LITERAL    reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    CHAR_LITERAL    reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    STRING_LITERAL  reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    CASE            reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    DEFAULT         reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)
    ELSE            reduce using rule 125 (StatementWithoutTrailingSubstatement -> EmptyStatement .)


state 124

    (126) StatementWithoutTrailingSubstatement -> ExpressionStatement .

    RBRACE          reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    IDENTIFIER      reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    IF              reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    WHILE           reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    FOR             reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    LBRACE          reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    SEMI            reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    SWITCH          reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    DO              reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    BREAK           reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    CONTINUE        reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    RETURN          reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    BOOLEAN         reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    INC             reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    DEC             reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    NEW             reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    BYTE            reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    SHORT           reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    INT             reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    LONG            reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    CHAR            reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    FLOAT           reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    DOUBLE          reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    SUPER           reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    THIS            reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    LPAREN          reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    DECIMAL_LITERAL reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    HEX_LITERAL     reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    BINARY_LITERAL  reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    FLOAT_LITERAL   reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    BOOL_LITERAL    reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    CHAR_LITERAL    reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    STRING_LITERAL  reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    CASE            reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    DEFAULT         reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)
    ELSE            reduce using rule 126 (StatementWithoutTrailingSubstatement -> ExpressionStatement .)


state 125

    (127) StatementWithoutTrailingSubstatement -> SwitchStatement .

    RBRACE          reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    IDENTIFIER      reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    IF              reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    WHILE           reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    FOR             reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    LBRACE          reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    SEMI            reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    SWITCH          reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    DO              reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    BREAK           reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    CONTINUE        reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    RETURN          reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    BOOLEAN         reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    INC             reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    DEC             reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    NEW             reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    BYTE            reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    SHORT           reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    INT             reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    LONG            reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    CHAR            reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    FLOAT           reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    DOUBLE          reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    SUPER           reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    THIS            reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    LPAREN          reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    DECIMAL_LITERAL reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    HEX_LITERAL     reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    BINARY_LITERAL  reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    FLOAT_LITERAL   reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    BOOL_LITERAL    reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    CHAR_LITERAL    reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    STRING_LITERAL  reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    CASE            reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    DEFAULT         reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)
    ELSE            reduce using rule 127 (StatementWithoutTrailingSubstatement -> SwitchStatement .)


state 126

    (128) StatementWithoutTrailingSubstatement -> DoStatement .

    RBRACE          reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    IDENTIFIER      reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    IF              reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    WHILE           reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    FOR             reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    LBRACE          reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    SEMI            reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    SWITCH          reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    DO              reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    BREAK           reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    CONTINUE        reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    RETURN          reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    BOOLEAN         reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    INC             reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    DEC             reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    NEW             reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    BYTE            reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    SHORT           reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    INT             reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    LONG            reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    CHAR            reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    FLOAT           reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    DOUBLE          reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    SUPER           reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    THIS            reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    LPAREN          reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    DECIMAL_LITERAL reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    HEX_LITERAL     reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    BINARY_LITERAL  reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    FLOAT_LITERAL   reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    BOOL_LITERAL    reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    CHAR_LITERAL    reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    STRING_LITERAL  reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    CASE            reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    DEFAULT         reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)
    ELSE            reduce using rule 128 (StatementWithoutTrailingSubstatement -> DoStatement .)


state 127

    (129) StatementWithoutTrailingSubstatement -> BreakStatement .

    RBRACE          reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    IDENTIFIER      reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    IF              reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    WHILE           reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    FOR             reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    LBRACE          reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    SEMI            reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    SWITCH          reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    DO              reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    BREAK           reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    CONTINUE        reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    RETURN          reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    BOOLEAN         reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    INC             reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    DEC             reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    NEW             reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    BYTE            reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    SHORT           reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    INT             reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    LONG            reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    CHAR            reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    FLOAT           reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    DOUBLE          reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    SUPER           reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    THIS            reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    LPAREN          reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    DECIMAL_LITERAL reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    HEX_LITERAL     reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    BINARY_LITERAL  reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    FLOAT_LITERAL   reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    BOOL_LITERAL    reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    CHAR_LITERAL    reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    STRING_LITERAL  reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    CASE            reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    DEFAULT         reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)
    ELSE            reduce using rule 129 (StatementWithoutTrailingSubstatement -> BreakStatement .)


state 128

    (130) StatementWithoutTrailingSubstatement -> ContinueStatement .

    RBRACE          reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    IDENTIFIER      reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    IF              reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    WHILE           reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    FOR             reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    LBRACE          reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    SEMI            reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    SWITCH          reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    DO              reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    BREAK           reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    CONTINUE        reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    RETURN          reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    BOOLEAN         reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    INC             reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    DEC             reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    NEW             reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    BYTE            reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    SHORT           reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    INT             reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    LONG            reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    CHAR            reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    FLOAT           reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    DOUBLE          reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    SUPER           reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    THIS            reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    LPAREN          reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    DECIMAL_LITERAL reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    HEX_LITERAL     reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    BINARY_LITERAL  reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    FLOAT_LITERAL   reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    BOOL_LITERAL    reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    CHAR_LITERAL    reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    STRING_LITERAL  reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    CASE            reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    DEFAULT         reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)
    ELSE            reduce using rule 130 (StatementWithoutTrailingSubstatement -> ContinueStatement .)


state 129

    (131) StatementWithoutTrailingSubstatement -> ReturnStatement .

    RBRACE          reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    IDENTIFIER      reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    IF              reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    WHILE           reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    FOR             reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    LBRACE          reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    SEMI            reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    SWITCH          reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    DO              reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    BREAK           reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    CONTINUE        reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    RETURN          reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    BOOLEAN         reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    INC             reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    DEC             reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    NEW             reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    BYTE            reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    SHORT           reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    INT             reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    LONG            reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    CHAR            reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    FLOAT           reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    DOUBLE          reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    SUPER           reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    THIS            reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    LPAREN          reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    DECIMAL_LITERAL reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    HEX_LITERAL     reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    BINARY_LITERAL  reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    FLOAT_LITERAL   reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    BOOL_LITERAL    reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    CHAR_LITERAL    reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    STRING_LITERAL  reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    CASE            reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    DEFAULT         reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)
    ELSE            reduce using rule 131 (StatementWithoutTrailingSubstatement -> ReturnStatement .)


state 130

    (133) LabeledStatement -> IDENTIFIER . COLON Statement
    (29) SimpleName -> IDENTIFIER .

    COLON           shift and go to state 189
    LPAREN          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DOT             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LBRACK          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    ASSIGN          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    ADD_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    SUB_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    MUL_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    AND_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    OR_ASSIGN       reduce using rule 29 (SimpleName -> IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 29 (SimpleName -> IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 29 (SimpleName -> IDENTIFIER .)
    URSHIFT_ASSIGN  reduce using rule 29 (SimpleName -> IDENTIFIER .)
    INC             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DEC             reduce using rule 29 (SimpleName -> IDENTIFIER .)


state 131

    (143) IfThenStatement -> IF . begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> IF . begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (292) begin_scope -> .

    LPAREN          reduce using rule 292 (begin_scope -> .)

    begin_scope                    shift and go to state 190

state 132

    (192) PrimaryNoNewArray -> LPAREN . Expression RPAREN
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    Expression                     shift and go to state 192
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 133

    (158) WhileStatement -> WHILE . begin_scope LPAREN Expression RPAREN Statement end_scope
    (292) begin_scope -> .

    LPAREN          reduce using rule 292 (begin_scope -> .)

    begin_scope                    shift and go to state 224

state 134

    (161) ForStatement -> FOR . begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> FOR . begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> FOR . begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> FOR . begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> FOR . begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> FOR . begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> FOR . begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> FOR . begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (292) begin_scope -> .

    LPAREN          reduce using rule 292 (begin_scope -> .)

    begin_scope                    shift and go to state 225

state 135

    (135) ExpressionStatement -> StatementExpression . SEMI

    SEMI            shift and go to state 226


state 136

    (146) SwitchStatement -> SWITCH . LPAREN Expression RPAREN SwitchBlock

    LPAREN          shift and go to state 227


state 137

    (160) DoStatement -> DO . begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (292) begin_scope -> .

    IDENTIFIER      reduce using rule 292 (begin_scope -> .)
    IF              reduce using rule 292 (begin_scope -> .)
    WHILE           reduce using rule 292 (begin_scope -> .)
    FOR             reduce using rule 292 (begin_scope -> .)
    LBRACE          reduce using rule 292 (begin_scope -> .)
    SEMI            reduce using rule 292 (begin_scope -> .)
    SWITCH          reduce using rule 292 (begin_scope -> .)
    DO              reduce using rule 292 (begin_scope -> .)
    BREAK           reduce using rule 292 (begin_scope -> .)
    CONTINUE        reduce using rule 292 (begin_scope -> .)
    RETURN          reduce using rule 292 (begin_scope -> .)
    INC             reduce using rule 292 (begin_scope -> .)
    DEC             reduce using rule 292 (begin_scope -> .)
    NEW             reduce using rule 292 (begin_scope -> .)
    SUPER           reduce using rule 292 (begin_scope -> .)
    THIS            reduce using rule 292 (begin_scope -> .)
    LPAREN          reduce using rule 292 (begin_scope -> .)
    DECIMAL_LITERAL reduce using rule 292 (begin_scope -> .)
    HEX_LITERAL     reduce using rule 292 (begin_scope -> .)
    BINARY_LITERAL  reduce using rule 292 (begin_scope -> .)
    FLOAT_LITERAL   reduce using rule 292 (begin_scope -> .)
    BOOL_LITERAL    reduce using rule 292 (begin_scope -> .)
    CHAR_LITERAL    reduce using rule 292 (begin_scope -> .)
    STRING_LITERAL  reduce using rule 292 (begin_scope -> .)

    begin_scope                    shift and go to state 228

state 138

    (182) BreakStatement -> BREAK . IDENTIFIER SEMI
    (183) BreakStatement -> BREAK . SEMI

    IDENTIFIER      shift and go to state 229
    SEMI            shift and go to state 230


state 139

    (184) ContinueStatement -> CONTINUE . IDENTIFIER SEMI
    (185) ContinueStatement -> CONTINUE . SEMI

    IDENTIFIER      shift and go to state 231
    SEMI            shift and go to state 232


state 140

    (186) ReturnStatement -> RETURN . Expression SEMI
    (187) ReturnStatement -> RETURN . SEMI
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    SEMI            shift and go to state 234
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    Expression                     shift and go to state 233
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 141

    (136) StatementExpression -> Assignment .

    SEMI            reduce using rule 136 (StatementExpression -> Assignment .)
    COMMA           reduce using rule 136 (StatementExpression -> Assignment .)
    RPAREN          reduce using rule 136 (StatementExpression -> Assignment .)


state 142

    (137) StatementExpression -> PreIncrementExpression .

    SEMI            reduce using rule 137 (StatementExpression -> PreIncrementExpression .)
    COMMA           reduce using rule 137 (StatementExpression -> PreIncrementExpression .)
    RPAREN          reduce using rule 137 (StatementExpression -> PreIncrementExpression .)


state 143

    (138) StatementExpression -> PreDecrementExpression .

    SEMI            reduce using rule 138 (StatementExpression -> PreDecrementExpression .)
    COMMA           reduce using rule 138 (StatementExpression -> PreDecrementExpression .)
    RPAREN          reduce using rule 138 (StatementExpression -> PreDecrementExpression .)


state 144

    (139) StatementExpression -> PostIncrementExpression .
    (220) PostfixExpression -> PostIncrementExpression .

    SEMI            reduce using rule 139 (StatementExpression -> PostIncrementExpression .)
    COMMA           reduce using rule 139 (StatementExpression -> PostIncrementExpression .)
    RPAREN          reduce using rule 139 (StatementExpression -> PostIncrementExpression .)
    INC             reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    DEC             reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)


state 145

    (140) StatementExpression -> PostDecrementExpression .
    (221) PostfixExpression -> PostDecrementExpression .

    SEMI            reduce using rule 140 (StatementExpression -> PostDecrementExpression .)
    COMMA           reduce using rule 140 (StatementExpression -> PostDecrementExpression .)
    RPAREN          reduce using rule 140 (StatementExpression -> PostDecrementExpression .)
    INC             reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    DEC             reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)


state 146

    (141) StatementExpression -> MethodInvocation .
    (195) PrimaryNoNewArray -> MethodInvocation .

    SEMI            reduce using rule 141 (StatementExpression -> MethodInvocation .)
    COMMA           reduce using rule 141 (StatementExpression -> MethodInvocation .)
    RPAREN          reduce using rule 141 (StatementExpression -> MethodInvocation .)
    LBRACK          reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    DOT             reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    INC             reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    DEC             reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)


state 147

    (142) StatementExpression -> ClassInstanceCreationExpression .
    (193) PrimaryNoNewArray -> ClassInstanceCreationExpression .

    SEMI            reduce using rule 142 (StatementExpression -> ClassInstanceCreationExpression .)
    COMMA           reduce using rule 142 (StatementExpression -> ClassInstanceCreationExpression .)
    RPAREN          reduce using rule 142 (StatementExpression -> ClassInstanceCreationExpression .)
    LBRACK          reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    DOT             reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    INC             reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    DEC             reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)


state 148

    (26) ArrayType -> Name . Dims
    (24) ClassType -> Name .
    (212) MethodInvocation -> Name . LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> Name . LPAREN RPAREN
    (273) LeftHandSide -> Name .
    (219) PostfixExpression -> Name .
    (30) QualifiedName -> Name . DOT IDENTIFIER
    (216) ArrayAccess -> Name . LBRACK Expression RBRACK
    (208) Dims -> . LBRACK RBRACK
    (209) Dims -> . Dims LBRACK RBRACK

    IDENTIFIER      reduce using rule 24 (ClassType -> Name .)
    LPAREN          shift and go to state 235
    ASSIGN          reduce using rule 273 (LeftHandSide -> Name .)
    ADD_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    SUB_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    MUL_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    DIV_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    AND_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    OR_ASSIGN       reduce using rule 273 (LeftHandSide -> Name .)
    XOR_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    MOD_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    LSHIFT_ASSIGN   reduce using rule 273 (LeftHandSide -> Name .)
    RSHIFT_ASSIGN   reduce using rule 273 (LeftHandSide -> Name .)
    URSHIFT_ASSIGN  reduce using rule 273 (LeftHandSide -> Name .)
    INC             reduce using rule 219 (PostfixExpression -> Name .)
    DEC             reduce using rule 219 (PostfixExpression -> Name .)
    DOT             shift and go to state 103
    LBRACK          shift and go to state 236

    Dims                           shift and go to state 102

state 149

    (272) Assignment -> LeftHandSide . AssignmentOperator AssignmentExpression
    (276) AssignmentOperator -> . ASSIGN
    (277) AssignmentOperator -> . ADD_ASSIGN
    (278) AssignmentOperator -> . SUB_ASSIGN
    (279) AssignmentOperator -> . MUL_ASSIGN
    (280) AssignmentOperator -> . DIV_ASSIGN
    (281) AssignmentOperator -> . AND_ASSIGN
    (282) AssignmentOperator -> . OR_ASSIGN
    (283) AssignmentOperator -> . XOR_ASSIGN
    (284) AssignmentOperator -> . MOD_ASSIGN
    (285) AssignmentOperator -> . LSHIFT_ASSIGN
    (286) AssignmentOperator -> . RSHIFT_ASSIGN
    (287) AssignmentOperator -> . URSHIFT_ASSIGN

    ASSIGN          shift and go to state 238
    ADD_ASSIGN      shift and go to state 239
    SUB_ASSIGN      shift and go to state 240
    MUL_ASSIGN      shift and go to state 241
    DIV_ASSIGN      shift and go to state 242
    AND_ASSIGN      shift and go to state 243
    OR_ASSIGN       shift and go to state 244
    XOR_ASSIGN      shift and go to state 245
    MOD_ASSIGN      shift and go to state 246
    LSHIFT_ASSIGN   shift and go to state 247
    RSHIFT_ASSIGN   shift and go to state 248
    URSHIFT_ASSIGN  shift and go to state 249

    AssignmentOperator             shift and go to state 237

state 150

    (229) PreIncrementExpression -> INC . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    UnaryExpression                shift and go to state 250
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 151

    (230) PreDecrementExpression -> DEC . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    UnaryExpression                shift and go to state 256
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 152

    (222) PostIncrementExpression -> PostfixExpression . INC
    (223) PostDecrementExpression -> PostfixExpression . DEC

    INC             shift and go to state 257
    DEC             shift and go to state 258


state 153

    (214) MethodInvocation -> Primary . DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> Primary . DOT IDENTIFIER LPAREN RPAREN
    (218) PostfixExpression -> Primary .
    (210) FieldAccess -> Primary . DOT Name

    DOT             shift and go to state 259
    INC             reduce using rule 218 (PostfixExpression -> Primary .)
    DEC             reduce using rule 218 (PostfixExpression -> Primary .)


state 154

    (197) ClassInstanceCreationExpression -> NEW . ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> NEW . ClassType LPAREN ArgumentList RPAREN
    (201) ArrayCreationExpression -> NEW . PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> NEW . PrimitiveType DimExprs
    (203) ArrayCreationExpression -> NEW . ClassType DimExprs Dims
    (204) ArrayCreationExpression -> NEW . ClassType DimExprs
    (24) ClassType -> . Name
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE

    BOOLEAN         shift and go to state 65
    IDENTIFIER      shift and go to state 63
    BYTE            shift and go to state 71
    SHORT           shift and go to state 72
    INT             shift and go to state 73
    LONG            shift and go to state 74
    CHAR            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77

    ClassType                      shift and go to state 260
    PrimitiveType                  shift and go to state 261
    Name                           shift and go to state 262
    NumericType                    shift and go to state 64
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    IntegralType                   shift and go to state 68
    FloatingPointType              shift and go to state 69

state 155

    (27) Name -> SimpleName .

    LPAREN          reduce using rule 27 (Name -> SimpleName .)
    DOT             reduce using rule 27 (Name -> SimpleName .)
    LBRACK          reduce using rule 27 (Name -> SimpleName .)
    IDENTIFIER      reduce using rule 27 (Name -> SimpleName .)
    ASSIGN          reduce using rule 27 (Name -> SimpleName .)
    ADD_ASSIGN      reduce using rule 27 (Name -> SimpleName .)
    SUB_ASSIGN      reduce using rule 27 (Name -> SimpleName .)
    MUL_ASSIGN      reduce using rule 27 (Name -> SimpleName .)
    DIV_ASSIGN      reduce using rule 27 (Name -> SimpleName .)
    AND_ASSIGN      reduce using rule 27 (Name -> SimpleName .)
    OR_ASSIGN       reduce using rule 27 (Name -> SimpleName .)
    XOR_ASSIGN      reduce using rule 27 (Name -> SimpleName .)
    MOD_ASSIGN      reduce using rule 27 (Name -> SimpleName .)
    LSHIFT_ASSIGN   reduce using rule 27 (Name -> SimpleName .)
    RSHIFT_ASSIGN   reduce using rule 27 (Name -> SimpleName .)
    URSHIFT_ASSIGN  reduce using rule 27 (Name -> SimpleName .)
    INC             reduce using rule 27 (Name -> SimpleName .)
    DEC             reduce using rule 27 (Name -> SimpleName .)
    MUL             reduce using rule 27 (Name -> SimpleName .)
    DIV             reduce using rule 27 (Name -> SimpleName .)
    MOD             reduce using rule 27 (Name -> SimpleName .)
    ADD             reduce using rule 27 (Name -> SimpleName .)
    SUB             reduce using rule 27 (Name -> SimpleName .)
    LSHIFT          reduce using rule 27 (Name -> SimpleName .)
    RSHIFT          reduce using rule 27 (Name -> SimpleName .)
    URSHIFT         reduce using rule 27 (Name -> SimpleName .)
    LT              reduce using rule 27 (Name -> SimpleName .)
    GT              reduce using rule 27 (Name -> SimpleName .)
    LE              reduce using rule 27 (Name -> SimpleName .)
    GE              reduce using rule 27 (Name -> SimpleName .)
    EQUAL           reduce using rule 27 (Name -> SimpleName .)
    NOTEQUAL        reduce using rule 27 (Name -> SimpleName .)
    BITAND          reduce using rule 27 (Name -> SimpleName .)
    CARET           reduce using rule 27 (Name -> SimpleName .)
    BITOR           reduce using rule 27 (Name -> SimpleName .)
    AND             reduce using rule 27 (Name -> SimpleName .)
    QUESTION        reduce using rule 27 (Name -> SimpleName .)
    OR              reduce using rule 27 (Name -> SimpleName .)
    RPAREN          reduce using rule 27 (Name -> SimpleName .)
    SEMI            reduce using rule 27 (Name -> SimpleName .)
    COMMA           reduce using rule 27 (Name -> SimpleName .)
    RBRACK          reduce using rule 27 (Name -> SimpleName .)
    RBRACE          reduce using rule 27 (Name -> SimpleName .)
    COLON           reduce using rule 27 (Name -> SimpleName .)


state 156

    (274) LeftHandSide -> FieldAccess .
    (194) PrimaryNoNewArray -> FieldAccess .

    ASSIGN          reduce using rule 274 (LeftHandSide -> FieldAccess .)
    ADD_ASSIGN      reduce using rule 274 (LeftHandSide -> FieldAccess .)
    SUB_ASSIGN      reduce using rule 274 (LeftHandSide -> FieldAccess .)
    MUL_ASSIGN      reduce using rule 274 (LeftHandSide -> FieldAccess .)
    DIV_ASSIGN      reduce using rule 274 (LeftHandSide -> FieldAccess .)
    AND_ASSIGN      reduce using rule 274 (LeftHandSide -> FieldAccess .)
    OR_ASSIGN       reduce using rule 274 (LeftHandSide -> FieldAccess .)
    XOR_ASSIGN      reduce using rule 274 (LeftHandSide -> FieldAccess .)
    MOD_ASSIGN      reduce using rule 274 (LeftHandSide -> FieldAccess .)
    LSHIFT_ASSIGN   reduce using rule 274 (LeftHandSide -> FieldAccess .)
    RSHIFT_ASSIGN   reduce using rule 274 (LeftHandSide -> FieldAccess .)
    URSHIFT_ASSIGN  reduce using rule 274 (LeftHandSide -> FieldAccess .)
    LBRACK          reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    DOT             reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    INC             reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    DEC             reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    MUL             reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    DIV             reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    MOD             reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    ADD             reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    SUB             reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    LSHIFT          reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    RSHIFT          reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    URSHIFT         reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    LT              reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    GT              reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    LE              reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    GE              reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    EQUAL           reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    NOTEQUAL        reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    BITAND          reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    CARET           reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    BITOR           reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    AND             reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    QUESTION        reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    OR              reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    RPAREN          reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    SEMI            reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    COMMA           reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    RBRACK          reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    RBRACE          reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    COLON           reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)


state 157

    (275) LeftHandSide -> ArrayAccess .
    (196) PrimaryNoNewArray -> ArrayAccess .

    ASSIGN          reduce using rule 275 (LeftHandSide -> ArrayAccess .)
    ADD_ASSIGN      reduce using rule 275 (LeftHandSide -> ArrayAccess .)
    SUB_ASSIGN      reduce using rule 275 (LeftHandSide -> ArrayAccess .)
    MUL_ASSIGN      reduce using rule 275 (LeftHandSide -> ArrayAccess .)
    DIV_ASSIGN      reduce using rule 275 (LeftHandSide -> ArrayAccess .)
    AND_ASSIGN      reduce using rule 275 (LeftHandSide -> ArrayAccess .)
    OR_ASSIGN       reduce using rule 275 (LeftHandSide -> ArrayAccess .)
    XOR_ASSIGN      reduce using rule 275 (LeftHandSide -> ArrayAccess .)
    MOD_ASSIGN      reduce using rule 275 (LeftHandSide -> ArrayAccess .)
    LSHIFT_ASSIGN   reduce using rule 275 (LeftHandSide -> ArrayAccess .)
    RSHIFT_ASSIGN   reduce using rule 275 (LeftHandSide -> ArrayAccess .)
    URSHIFT_ASSIGN  reduce using rule 275 (LeftHandSide -> ArrayAccess .)
    LBRACK          reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    DOT             reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    INC             reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    DEC             reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    MUL             reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    DIV             reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    MOD             reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    ADD             reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    SUB             reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    LSHIFT          reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    RSHIFT          reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    URSHIFT         reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    LT              reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    GT              reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    LE              reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    GE              reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    EQUAL           reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    NOTEQUAL        reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    BITAND          reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    CARET           reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    BITOR           reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    AND             reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    QUESTION        reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    OR              reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    RPAREN          reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    SEMI            reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    COMMA           reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    RBRACK          reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    RBRACE          reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    COLON           reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)


state 158

    (188) Primary -> PrimaryNoNewArray .
    (217) ArrayAccess -> PrimaryNoNewArray . LBRACK Expression RBRACK

    DOT             reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    INC             reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    DEC             reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    SEMI            reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    MUL             reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    DIV             reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    MOD             reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    ADD             reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    SUB             reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    LSHIFT          reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    RSHIFT          reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    URSHIFT         reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    LT              reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    GT              reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    LE              reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    GE              reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    EQUAL           reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    NOTEQUAL        reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    BITAND          reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    CARET           reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    BITOR           reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    AND             reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    QUESTION        reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    OR              reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    RPAREN          reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    COMMA           reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    RBRACK          reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    RBRACE          reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    COLON           reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    LBRACK          shift and go to state 263


state 159

    (189) Primary -> ArrayCreationExpression .

    DOT             reduce using rule 189 (Primary -> ArrayCreationExpression .)
    INC             reduce using rule 189 (Primary -> ArrayCreationExpression .)
    DEC             reduce using rule 189 (Primary -> ArrayCreationExpression .)
    MUL             reduce using rule 189 (Primary -> ArrayCreationExpression .)
    DIV             reduce using rule 189 (Primary -> ArrayCreationExpression .)
    MOD             reduce using rule 189 (Primary -> ArrayCreationExpression .)
    ADD             reduce using rule 189 (Primary -> ArrayCreationExpression .)
    SUB             reduce using rule 189 (Primary -> ArrayCreationExpression .)
    LSHIFT          reduce using rule 189 (Primary -> ArrayCreationExpression .)
    RSHIFT          reduce using rule 189 (Primary -> ArrayCreationExpression .)
    URSHIFT         reduce using rule 189 (Primary -> ArrayCreationExpression .)
    LT              reduce using rule 189 (Primary -> ArrayCreationExpression .)
    GT              reduce using rule 189 (Primary -> ArrayCreationExpression .)
    LE              reduce using rule 189 (Primary -> ArrayCreationExpression .)
    GE              reduce using rule 189 (Primary -> ArrayCreationExpression .)
    EQUAL           reduce using rule 189 (Primary -> ArrayCreationExpression .)
    NOTEQUAL        reduce using rule 189 (Primary -> ArrayCreationExpression .)
    BITAND          reduce using rule 189 (Primary -> ArrayCreationExpression .)
    CARET           reduce using rule 189 (Primary -> ArrayCreationExpression .)
    BITOR           reduce using rule 189 (Primary -> ArrayCreationExpression .)
    AND             reduce using rule 189 (Primary -> ArrayCreationExpression .)
    QUESTION        reduce using rule 189 (Primary -> ArrayCreationExpression .)
    OR              reduce using rule 189 (Primary -> ArrayCreationExpression .)
    RPAREN          reduce using rule 189 (Primary -> ArrayCreationExpression .)
    SEMI            reduce using rule 189 (Primary -> ArrayCreationExpression .)
    COMMA           reduce using rule 189 (Primary -> ArrayCreationExpression .)
    RBRACK          reduce using rule 189 (Primary -> ArrayCreationExpression .)
    RBRACE          reduce using rule 189 (Primary -> ArrayCreationExpression .)
    COLON           reduce using rule 189 (Primary -> ArrayCreationExpression .)


state 160

    (211) FieldAccess -> SUPER . DOT Name

    DOT             shift and go to state 264


state 161

    (190) PrimaryNoNewArray -> Literal .

    LBRACK          reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    DOT             reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    INC             reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    DEC             reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    MUL             reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    DIV             reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    MOD             reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    ADD             reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    SUB             reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    LSHIFT          reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    RSHIFT          reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    URSHIFT         reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    LT              reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    GT              reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    LE              reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    GE              reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    EQUAL           reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    NOTEQUAL        reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    BITAND          reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    CARET           reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    BITOR           reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    AND             reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    QUESTION        reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    OR              reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    RPAREN          reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    SEMI            reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    COMMA           reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    RBRACK          reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    RBRACE          reduce using rule 190 (PrimaryNoNewArray -> Literal .)
    COLON           reduce using rule 190 (PrimaryNoNewArray -> Literal .)


state 162

    (191) PrimaryNoNewArray -> THIS .

    LBRACK          reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    DOT             reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    INC             reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    DEC             reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    MUL             reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    DIV             reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    MOD             reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    ADD             reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    SUB             reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    LSHIFT          reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    RSHIFT          reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    URSHIFT         reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    LT              reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    GT              reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    LE              reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    GE              reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    EQUAL           reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    NOTEQUAL        reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    BITAND          reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    CARET           reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    BITOR           reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    AND             reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    QUESTION        reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    OR              reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    RPAREN          reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    SEMI            reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    COMMA           reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    RBRACK          reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    RBRACE          reduce using rule 191 (PrimaryNoNewArray -> THIS .)
    COLON           reduce using rule 191 (PrimaryNoNewArray -> THIS .)


state 163

    (2) Literal -> DECIMAL_LITERAL .

    LBRACK          reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    DOT             reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    INC             reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    DEC             reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    MUL             reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    DIV             reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    MOD             reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    ADD             reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    SUB             reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    LSHIFT          reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    RSHIFT          reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    URSHIFT         reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    LT              reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    GT              reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    LE              reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    GE              reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    EQUAL           reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    NOTEQUAL        reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    BITAND          reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    CARET           reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    BITOR           reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    AND             reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    QUESTION        reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    OR              reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    RPAREN          reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    SEMI            reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    COMMA           reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    RBRACK          reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    RBRACE          reduce using rule 2 (Literal -> DECIMAL_LITERAL .)
    COLON           reduce using rule 2 (Literal -> DECIMAL_LITERAL .)


state 164

    (3) Literal -> HEX_LITERAL .

    LBRACK          reduce using rule 3 (Literal -> HEX_LITERAL .)
    DOT             reduce using rule 3 (Literal -> HEX_LITERAL .)
    INC             reduce using rule 3 (Literal -> HEX_LITERAL .)
    DEC             reduce using rule 3 (Literal -> HEX_LITERAL .)
    MUL             reduce using rule 3 (Literal -> HEX_LITERAL .)
    DIV             reduce using rule 3 (Literal -> HEX_LITERAL .)
    MOD             reduce using rule 3 (Literal -> HEX_LITERAL .)
    ADD             reduce using rule 3 (Literal -> HEX_LITERAL .)
    SUB             reduce using rule 3 (Literal -> HEX_LITERAL .)
    LSHIFT          reduce using rule 3 (Literal -> HEX_LITERAL .)
    RSHIFT          reduce using rule 3 (Literal -> HEX_LITERAL .)
    URSHIFT         reduce using rule 3 (Literal -> HEX_LITERAL .)
    LT              reduce using rule 3 (Literal -> HEX_LITERAL .)
    GT              reduce using rule 3 (Literal -> HEX_LITERAL .)
    LE              reduce using rule 3 (Literal -> HEX_LITERAL .)
    GE              reduce using rule 3 (Literal -> HEX_LITERAL .)
    EQUAL           reduce using rule 3 (Literal -> HEX_LITERAL .)
    NOTEQUAL        reduce using rule 3 (Literal -> HEX_LITERAL .)
    BITAND          reduce using rule 3 (Literal -> HEX_LITERAL .)
    CARET           reduce using rule 3 (Literal -> HEX_LITERAL .)
    BITOR           reduce using rule 3 (Literal -> HEX_LITERAL .)
    AND             reduce using rule 3 (Literal -> HEX_LITERAL .)
    QUESTION        reduce using rule 3 (Literal -> HEX_LITERAL .)
    OR              reduce using rule 3 (Literal -> HEX_LITERAL .)
    RPAREN          reduce using rule 3 (Literal -> HEX_LITERAL .)
    SEMI            reduce using rule 3 (Literal -> HEX_LITERAL .)
    COMMA           reduce using rule 3 (Literal -> HEX_LITERAL .)
    RBRACK          reduce using rule 3 (Literal -> HEX_LITERAL .)
    RBRACE          reduce using rule 3 (Literal -> HEX_LITERAL .)
    COLON           reduce using rule 3 (Literal -> HEX_LITERAL .)


state 165

    (4) Literal -> BINARY_LITERAL .

    LBRACK          reduce using rule 4 (Literal -> BINARY_LITERAL .)
    DOT             reduce using rule 4 (Literal -> BINARY_LITERAL .)
    INC             reduce using rule 4 (Literal -> BINARY_LITERAL .)
    DEC             reduce using rule 4 (Literal -> BINARY_LITERAL .)
    MUL             reduce using rule 4 (Literal -> BINARY_LITERAL .)
    DIV             reduce using rule 4 (Literal -> BINARY_LITERAL .)
    MOD             reduce using rule 4 (Literal -> BINARY_LITERAL .)
    ADD             reduce using rule 4 (Literal -> BINARY_LITERAL .)
    SUB             reduce using rule 4 (Literal -> BINARY_LITERAL .)
    LSHIFT          reduce using rule 4 (Literal -> BINARY_LITERAL .)
    RSHIFT          reduce using rule 4 (Literal -> BINARY_LITERAL .)
    URSHIFT         reduce using rule 4 (Literal -> BINARY_LITERAL .)
    LT              reduce using rule 4 (Literal -> BINARY_LITERAL .)
    GT              reduce using rule 4 (Literal -> BINARY_LITERAL .)
    LE              reduce using rule 4 (Literal -> BINARY_LITERAL .)
    GE              reduce using rule 4 (Literal -> BINARY_LITERAL .)
    EQUAL           reduce using rule 4 (Literal -> BINARY_LITERAL .)
    NOTEQUAL        reduce using rule 4 (Literal -> BINARY_LITERAL .)
    BITAND          reduce using rule 4 (Literal -> BINARY_LITERAL .)
    CARET           reduce using rule 4 (Literal -> BINARY_LITERAL .)
    BITOR           reduce using rule 4 (Literal -> BINARY_LITERAL .)
    AND             reduce using rule 4 (Literal -> BINARY_LITERAL .)
    QUESTION        reduce using rule 4 (Literal -> BINARY_LITERAL .)
    OR              reduce using rule 4 (Literal -> BINARY_LITERAL .)
    RPAREN          reduce using rule 4 (Literal -> BINARY_LITERAL .)
    SEMI            reduce using rule 4 (Literal -> BINARY_LITERAL .)
    COMMA           reduce using rule 4 (Literal -> BINARY_LITERAL .)
    RBRACK          reduce using rule 4 (Literal -> BINARY_LITERAL .)
    RBRACE          reduce using rule 4 (Literal -> BINARY_LITERAL .)
    COLON           reduce using rule 4 (Literal -> BINARY_LITERAL .)


state 166

    (5) Literal -> FLOAT_LITERAL .

    LBRACK          reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    DOT             reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    INC             reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    DEC             reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    MUL             reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    DIV             reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    MOD             reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    ADD             reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    SUB             reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    LSHIFT          reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    RSHIFT          reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    URSHIFT         reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    LT              reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    GT              reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    LE              reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    GE              reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    EQUAL           reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    NOTEQUAL        reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    BITAND          reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    CARET           reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    BITOR           reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    AND             reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    QUESTION        reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    OR              reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    RPAREN          reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    SEMI            reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    COMMA           reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    RBRACK          reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    RBRACE          reduce using rule 5 (Literal -> FLOAT_LITERAL .)
    COLON           reduce using rule 5 (Literal -> FLOAT_LITERAL .)


state 167

    (6) Literal -> BOOL_LITERAL .

    LBRACK          reduce using rule 6 (Literal -> BOOL_LITERAL .)
    DOT             reduce using rule 6 (Literal -> BOOL_LITERAL .)
    INC             reduce using rule 6 (Literal -> BOOL_LITERAL .)
    DEC             reduce using rule 6 (Literal -> BOOL_LITERAL .)
    MUL             reduce using rule 6 (Literal -> BOOL_LITERAL .)
    DIV             reduce using rule 6 (Literal -> BOOL_LITERAL .)
    MOD             reduce using rule 6 (Literal -> BOOL_LITERAL .)
    ADD             reduce using rule 6 (Literal -> BOOL_LITERAL .)
    SUB             reduce using rule 6 (Literal -> BOOL_LITERAL .)
    LSHIFT          reduce using rule 6 (Literal -> BOOL_LITERAL .)
    RSHIFT          reduce using rule 6 (Literal -> BOOL_LITERAL .)
    URSHIFT         reduce using rule 6 (Literal -> BOOL_LITERAL .)
    LT              reduce using rule 6 (Literal -> BOOL_LITERAL .)
    GT              reduce using rule 6 (Literal -> BOOL_LITERAL .)
    LE              reduce using rule 6 (Literal -> BOOL_LITERAL .)
    GE              reduce using rule 6 (Literal -> BOOL_LITERAL .)
    EQUAL           reduce using rule 6 (Literal -> BOOL_LITERAL .)
    NOTEQUAL        reduce using rule 6 (Literal -> BOOL_LITERAL .)
    BITAND          reduce using rule 6 (Literal -> BOOL_LITERAL .)
    CARET           reduce using rule 6 (Literal -> BOOL_LITERAL .)
    BITOR           reduce using rule 6 (Literal -> BOOL_LITERAL .)
    AND             reduce using rule 6 (Literal -> BOOL_LITERAL .)
    QUESTION        reduce using rule 6 (Literal -> BOOL_LITERAL .)
    OR              reduce using rule 6 (Literal -> BOOL_LITERAL .)
    RPAREN          reduce using rule 6 (Literal -> BOOL_LITERAL .)
    SEMI            reduce using rule 6 (Literal -> BOOL_LITERAL .)
    COMMA           reduce using rule 6 (Literal -> BOOL_LITERAL .)
    RBRACK          reduce using rule 6 (Literal -> BOOL_LITERAL .)
    RBRACE          reduce using rule 6 (Literal -> BOOL_LITERAL .)
    COLON           reduce using rule 6 (Literal -> BOOL_LITERAL .)


state 168

    (7) Literal -> CHAR_LITERAL .

    LBRACK          reduce using rule 7 (Literal -> CHAR_LITERAL .)
    DOT             reduce using rule 7 (Literal -> CHAR_LITERAL .)
    INC             reduce using rule 7 (Literal -> CHAR_LITERAL .)
    DEC             reduce using rule 7 (Literal -> CHAR_LITERAL .)
    MUL             reduce using rule 7 (Literal -> CHAR_LITERAL .)
    DIV             reduce using rule 7 (Literal -> CHAR_LITERAL .)
    MOD             reduce using rule 7 (Literal -> CHAR_LITERAL .)
    ADD             reduce using rule 7 (Literal -> CHAR_LITERAL .)
    SUB             reduce using rule 7 (Literal -> CHAR_LITERAL .)
    LSHIFT          reduce using rule 7 (Literal -> CHAR_LITERAL .)
    RSHIFT          reduce using rule 7 (Literal -> CHAR_LITERAL .)
    URSHIFT         reduce using rule 7 (Literal -> CHAR_LITERAL .)
    LT              reduce using rule 7 (Literal -> CHAR_LITERAL .)
    GT              reduce using rule 7 (Literal -> CHAR_LITERAL .)
    LE              reduce using rule 7 (Literal -> CHAR_LITERAL .)
    GE              reduce using rule 7 (Literal -> CHAR_LITERAL .)
    EQUAL           reduce using rule 7 (Literal -> CHAR_LITERAL .)
    NOTEQUAL        reduce using rule 7 (Literal -> CHAR_LITERAL .)
    BITAND          reduce using rule 7 (Literal -> CHAR_LITERAL .)
    CARET           reduce using rule 7 (Literal -> CHAR_LITERAL .)
    BITOR           reduce using rule 7 (Literal -> CHAR_LITERAL .)
    AND             reduce using rule 7 (Literal -> CHAR_LITERAL .)
    QUESTION        reduce using rule 7 (Literal -> CHAR_LITERAL .)
    OR              reduce using rule 7 (Literal -> CHAR_LITERAL .)
    RPAREN          reduce using rule 7 (Literal -> CHAR_LITERAL .)
    SEMI            reduce using rule 7 (Literal -> CHAR_LITERAL .)
    COMMA           reduce using rule 7 (Literal -> CHAR_LITERAL .)
    RBRACK          reduce using rule 7 (Literal -> CHAR_LITERAL .)
    RBRACE          reduce using rule 7 (Literal -> CHAR_LITERAL .)
    COLON           reduce using rule 7 (Literal -> CHAR_LITERAL .)


state 169

    (8) Literal -> STRING_LITERAL .

    LBRACK          reduce using rule 8 (Literal -> STRING_LITERAL .)
    DOT             reduce using rule 8 (Literal -> STRING_LITERAL .)
    INC             reduce using rule 8 (Literal -> STRING_LITERAL .)
    DEC             reduce using rule 8 (Literal -> STRING_LITERAL .)
    MUL             reduce using rule 8 (Literal -> STRING_LITERAL .)
    DIV             reduce using rule 8 (Literal -> STRING_LITERAL .)
    MOD             reduce using rule 8 (Literal -> STRING_LITERAL .)
    ADD             reduce using rule 8 (Literal -> STRING_LITERAL .)
    SUB             reduce using rule 8 (Literal -> STRING_LITERAL .)
    LSHIFT          reduce using rule 8 (Literal -> STRING_LITERAL .)
    RSHIFT          reduce using rule 8 (Literal -> STRING_LITERAL .)
    URSHIFT         reduce using rule 8 (Literal -> STRING_LITERAL .)
    LT              reduce using rule 8 (Literal -> STRING_LITERAL .)
    GT              reduce using rule 8 (Literal -> STRING_LITERAL .)
    LE              reduce using rule 8 (Literal -> STRING_LITERAL .)
    GE              reduce using rule 8 (Literal -> STRING_LITERAL .)
    EQUAL           reduce using rule 8 (Literal -> STRING_LITERAL .)
    NOTEQUAL        reduce using rule 8 (Literal -> STRING_LITERAL .)
    BITAND          reduce using rule 8 (Literal -> STRING_LITERAL .)
    CARET           reduce using rule 8 (Literal -> STRING_LITERAL .)
    BITOR           reduce using rule 8 (Literal -> STRING_LITERAL .)
    AND             reduce using rule 8 (Literal -> STRING_LITERAL .)
    QUESTION        reduce using rule 8 (Literal -> STRING_LITERAL .)
    OR              reduce using rule 8 (Literal -> STRING_LITERAL .)
    RPAREN          reduce using rule 8 (Literal -> STRING_LITERAL .)
    SEMI            reduce using rule 8 (Literal -> STRING_LITERAL .)
    COMMA           reduce using rule 8 (Literal -> STRING_LITERAL .)
    RBRACK          reduce using rule 8 (Literal -> STRING_LITERAL .)
    RBRACE          reduce using rule 8 (Literal -> STRING_LITERAL .)
    COLON           reduce using rule 8 (Literal -> STRING_LITERAL .)


state 170

    (91) StaticInitializer -> begin_scope STATIC Block . end_scope
    (293) end_scope -> .

    RBRACE          reduce using rule 293 (end_scope -> .)
    VOID            reduce using rule 293 (end_scope -> .)
    STATIC          reduce using rule 293 (end_scope -> .)
    FINAL           reduce using rule 293 (end_scope -> .)
    PRIVATE         reduce using rule 293 (end_scope -> .)
    PROTECTED       reduce using rule 293 (end_scope -> .)
    PUBLIC          reduce using rule 293 (end_scope -> .)
    IDENTIFIER      reduce using rule 293 (end_scope -> .)
    BOOLEAN         reduce using rule 293 (end_scope -> .)
    BYTE            reduce using rule 293 (end_scope -> .)
    SHORT           reduce using rule 293 (end_scope -> .)
    INT             reduce using rule 293 (end_scope -> .)
    LONG            reduce using rule 293 (end_scope -> .)
    CHAR            reduce using rule 293 (end_scope -> .)
    FLOAT           reduce using rule 293 (end_scope -> .)
    DOUBLE          reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 265

state 171

    (70) FieldDeclaration -> Type VariableDeclarators SEMI .

    RBRACE          reduce using rule 70 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    VOID            reduce using rule 70 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    STATIC          reduce using rule 70 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    FINAL           reduce using rule 70 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    PRIVATE         reduce using rule 70 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    PROTECTED       reduce using rule 70 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    PUBLIC          reduce using rule 70 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    IDENTIFIER      reduce using rule 70 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    BOOLEAN         reduce using rule 70 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    BYTE            reduce using rule 70 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    SHORT           reduce using rule 70 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    INT             reduce using rule 70 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    LONG            reduce using rule 70 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    CHAR            reduce using rule 70 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    FLOAT           reduce using rule 70 (FieldDeclaration -> Type VariableDeclarators SEMI .)
    DOUBLE          reduce using rule 70 (FieldDeclaration -> Type VariableDeclarators SEMI .)


state 172

    (72) VariableDeclarators -> VariableDeclarators COMMA . VariableDeclarator
    (73) VariableDeclarator -> . VariableDeclaratorId
    (74) VariableDeclarator -> . VariableDeclaratorId ASSIGN VariableInitializer
    (75) VariableDeclaratorId -> . IDENTIFIER
    (76) VariableDeclaratorId -> . IDENTIFIER Dims

    IDENTIFIER      shift and go to state 188

    VariableDeclarator             shift and go to state 266
    VariableDeclaratorId           shift and go to state 91

state 173

    (84) MethodDeclarator -> IDENTIFIER LPAREN . RPAREN
    (85) MethodDeclarator -> IDENTIFIER LPAREN . FormalParameterList RPAREN
    (86) FormalParameterList -> . FormalParameter
    (87) FormalParameterList -> . FormalParameterList COMMA FormalParameter
    (88) FormalParameter -> . Type VariableDeclaratorId
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER

    RPAREN          shift and go to state 267
    BOOLEAN         shift and go to state 65
    BYTE            shift and go to state 71
    SHORT           shift and go to state 72
    INT             shift and go to state 73
    LONG            shift and go to state 74
    CHAR            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    IDENTIFIER      shift and go to state 63

    FormalParameterList            shift and go to state 268
    FormalParameter                shift and go to state 269
    Type                           shift and go to state 270
    PrimitiveType                  shift and go to state 60
    ReferenceType                  shift and go to state 61
    NumericType                    shift and go to state 64
    ArrayType                      shift and go to state 66
    ClassType                      shift and go to state 67
    IntegralType                   shift and go to state 68
    FloatingPointType              shift and go to state 69
    Name                           shift and go to state 70
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78

state 174

    (76) VariableDeclaratorId -> IDENTIFIER Dims .
    (209) Dims -> Dims . LBRACK RBRACK

    ASSIGN          reduce using rule 76 (VariableDeclaratorId -> IDENTIFIER Dims .)
    SEMI            reduce using rule 76 (VariableDeclaratorId -> IDENTIFIER Dims .)
    COMMA           reduce using rule 76 (VariableDeclaratorId -> IDENTIFIER Dims .)
    RPAREN          reduce using rule 76 (VariableDeclaratorId -> IDENTIFIER Dims .)
    LBRACK          shift and go to state 180


state 175

    (74) VariableDeclarator -> VariableDeclaratorId ASSIGN . VariableInitializer
    (77) VariableInitializer -> . Expression
    (78) VariableInitializer -> . ArrayInitializer
    (288) Expression -> . AssignmentExpression
    (101) ArrayInitializer -> . LBRACE VariableInitializers RBRACE
    (102) ArrayInitializer -> . LBRACE RBRACE
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    LBRACE          shift and go to state 274
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    VariableInitializer            shift and go to state 271
    Expression                     shift and go to state 272
    ArrayInitializer               shift and go to state 273
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 176

    (105) Block -> LBRACE RBRACE .

    RBRACE          reduce using rule 105 (Block -> LBRACE RBRACE .)
    VOID            reduce using rule 105 (Block -> LBRACE RBRACE .)
    STATIC          reduce using rule 105 (Block -> LBRACE RBRACE .)
    FINAL           reduce using rule 105 (Block -> LBRACE RBRACE .)
    PRIVATE         reduce using rule 105 (Block -> LBRACE RBRACE .)
    PROTECTED       reduce using rule 105 (Block -> LBRACE RBRACE .)
    PUBLIC          reduce using rule 105 (Block -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 105 (Block -> LBRACE RBRACE .)
    BOOLEAN         reduce using rule 105 (Block -> LBRACE RBRACE .)
    BYTE            reduce using rule 105 (Block -> LBRACE RBRACE .)
    SHORT           reduce using rule 105 (Block -> LBRACE RBRACE .)
    INT             reduce using rule 105 (Block -> LBRACE RBRACE .)
    LONG            reduce using rule 105 (Block -> LBRACE RBRACE .)
    CHAR            reduce using rule 105 (Block -> LBRACE RBRACE .)
    FLOAT           reduce using rule 105 (Block -> LBRACE RBRACE .)
    DOUBLE          reduce using rule 105 (Block -> LBRACE RBRACE .)
    IF              reduce using rule 105 (Block -> LBRACE RBRACE .)
    WHILE           reduce using rule 105 (Block -> LBRACE RBRACE .)
    FOR             reduce using rule 105 (Block -> LBRACE RBRACE .)
    LBRACE          reduce using rule 105 (Block -> LBRACE RBRACE .)
    SEMI            reduce using rule 105 (Block -> LBRACE RBRACE .)
    SWITCH          reduce using rule 105 (Block -> LBRACE RBRACE .)
    DO              reduce using rule 105 (Block -> LBRACE RBRACE .)
    BREAK           reduce using rule 105 (Block -> LBRACE RBRACE .)
    CONTINUE        reduce using rule 105 (Block -> LBRACE RBRACE .)
    RETURN          reduce using rule 105 (Block -> LBRACE RBRACE .)
    INC             reduce using rule 105 (Block -> LBRACE RBRACE .)
    DEC             reduce using rule 105 (Block -> LBRACE RBRACE .)
    NEW             reduce using rule 105 (Block -> LBRACE RBRACE .)
    SUPER           reduce using rule 105 (Block -> LBRACE RBRACE .)
    THIS            reduce using rule 105 (Block -> LBRACE RBRACE .)
    LPAREN          reduce using rule 105 (Block -> LBRACE RBRACE .)
    DECIMAL_LITERAL reduce using rule 105 (Block -> LBRACE RBRACE .)
    HEX_LITERAL     reduce using rule 105 (Block -> LBRACE RBRACE .)
    BINARY_LITERAL  reduce using rule 105 (Block -> LBRACE RBRACE .)
    FLOAT_LITERAL   reduce using rule 105 (Block -> LBRACE RBRACE .)
    BOOL_LITERAL    reduce using rule 105 (Block -> LBRACE RBRACE .)
    CHAR_LITERAL    reduce using rule 105 (Block -> LBRACE RBRACE .)
    STRING_LITERAL  reduce using rule 105 (Block -> LBRACE RBRACE .)
    CASE            reduce using rule 105 (Block -> LBRACE RBRACE .)
    DEFAULT         reduce using rule 105 (Block -> LBRACE RBRACE .)
    ELSE            reduce using rule 105 (Block -> LBRACE RBRACE .)


state 177

    (106) Block -> LBRACE BlockStatements . RBRACE
    (108) BlockStatements -> BlockStatements . BlockStatement
    (109) BlockStatement -> . LocalVariableDeclarationStatement
    (110) BlockStatement -> . Statement
    (111) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMI
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (112) LocalVariableDeclaration -> . Type VariableDeclarators
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RBRACE          shift and go to state 275
    IDENTIFIER      shift and go to state 130
    IF              shift and go to state 131
    WHILE           shift and go to state 133
    FOR             shift and go to state 134
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    BOOLEAN         shift and go to state 65
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    BYTE            shift and go to state 71
    SHORT           shift and go to state 72
    INT             shift and go to state 73
    LONG            shift and go to state 74
    CHAR            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    BlockStatement                 shift and go to state 185
    LocalVariableDeclarationStatement shift and go to state 111
    Statement                      shift and go to state 112
    LocalVariableDeclaration       shift and go to state 113
    StatementWithoutTrailingSubstatement shift and go to state 115
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    Type                           shift and go to state 121
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    PrimitiveType                  shift and go to state 60
    ReferenceType                  shift and go to state 61
    StatementExpression            shift and go to state 135
    NumericType                    shift and go to state 64
    ArrayType                      shift and go to state 66
    ClassType                      shift and go to state 67
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    IntegralType                   shift and go to state 68
    FloatingPointType              shift and go to state 69
    Name                           shift and go to state 148
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Primary                        shift and go to state 153
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 178

    (94) ConstructorDeclarator -> SimpleName LPAREN decl_mark . FormalParameterList RPAREN
    (86) FormalParameterList -> . FormalParameter
    (87) FormalParameterList -> . FormalParameterList COMMA FormalParameter
    (88) FormalParameter -> . Type VariableDeclaratorId
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER

    BOOLEAN         shift and go to state 65
    BYTE            shift and go to state 71
    SHORT           shift and go to state 72
    INT             shift and go to state 73
    LONG            shift and go to state 74
    CHAR            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    IDENTIFIER      shift and go to state 63

    SimpleName                     shift and go to state 155
    FormalParameterList            shift and go to state 276
    FormalParameter                shift and go to state 269
    Type                           shift and go to state 270
    PrimitiveType                  shift and go to state 60
    ReferenceType                  shift and go to state 61
    NumericType                    shift and go to state 64
    ArrayType                      shift and go to state 66
    ClassType                      shift and go to state 67
    IntegralType                   shift and go to state 68
    FloatingPointType              shift and go to state 69
    Name                           shift and go to state 70
    QualifiedName                  shift and go to state 78

state 179

    (95) ConstructorDeclarator -> SimpleName decl_mark LPAREN . RPAREN

    RPAREN          shift and go to state 277


state 180

    (209) Dims -> Dims LBRACK . RBRACK

    RBRACK          shift and go to state 278


state 181

    (208) Dims -> LBRACK RBRACK .

    LBRACK          reduce using rule 208 (Dims -> LBRACK RBRACK .)
    IDENTIFIER      reduce using rule 208 (Dims -> LBRACK RBRACK .)
    ASSIGN          reduce using rule 208 (Dims -> LBRACK RBRACK .)
    SEMI            reduce using rule 208 (Dims -> LBRACK RBRACK .)
    COMMA           reduce using rule 208 (Dims -> LBRACK RBRACK .)
    RPAREN          reduce using rule 208 (Dims -> LBRACK RBRACK .)
    DOT             reduce using rule 208 (Dims -> LBRACK RBRACK .)
    INC             reduce using rule 208 (Dims -> LBRACK RBRACK .)
    DEC             reduce using rule 208 (Dims -> LBRACK RBRACK .)
    MUL             reduce using rule 208 (Dims -> LBRACK RBRACK .)
    DIV             reduce using rule 208 (Dims -> LBRACK RBRACK .)
    MOD             reduce using rule 208 (Dims -> LBRACK RBRACK .)
    ADD             reduce using rule 208 (Dims -> LBRACK RBRACK .)
    SUB             reduce using rule 208 (Dims -> LBRACK RBRACK .)
    LSHIFT          reduce using rule 208 (Dims -> LBRACK RBRACK .)
    RSHIFT          reduce using rule 208 (Dims -> LBRACK RBRACK .)
    URSHIFT         reduce using rule 208 (Dims -> LBRACK RBRACK .)
    LT              reduce using rule 208 (Dims -> LBRACK RBRACK .)
    GT              reduce using rule 208 (Dims -> LBRACK RBRACK .)
    LE              reduce using rule 208 (Dims -> LBRACK RBRACK .)
    GE              reduce using rule 208 (Dims -> LBRACK RBRACK .)
    EQUAL           reduce using rule 208 (Dims -> LBRACK RBRACK .)
    NOTEQUAL        reduce using rule 208 (Dims -> LBRACK RBRACK .)
    BITAND          reduce using rule 208 (Dims -> LBRACK RBRACK .)
    CARET           reduce using rule 208 (Dims -> LBRACK RBRACK .)
    BITOR           reduce using rule 208 (Dims -> LBRACK RBRACK .)
    AND             reduce using rule 208 (Dims -> LBRACK RBRACK .)
    QUESTION        reduce using rule 208 (Dims -> LBRACK RBRACK .)
    OR              reduce using rule 208 (Dims -> LBRACK RBRACK .)
    RBRACK          reduce using rule 208 (Dims -> LBRACK RBRACK .)
    RBRACE          reduce using rule 208 (Dims -> LBRACK RBRACK .)
    COLON           reduce using rule 208 (Dims -> LBRACK RBRACK .)


state 182

    (30) QualifiedName -> Name DOT IDENTIFIER .

    DOT             reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    LBRACK          reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    IDENTIFIER      reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    LPAREN          reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    ASSIGN          reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    ADD_ASSIGN      reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    SUB_ASSIGN      reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    MUL_ASSIGN      reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    AND_ASSIGN      reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    OR_ASSIGN       reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    URSHIFT_ASSIGN  reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    INC             reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    DEC             reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    MUL             reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    DIV             reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    MOD             reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    ADD             reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    SUB             reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    LSHIFT          reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    RSHIFT          reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    URSHIFT         reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    LT              reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    GT              reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    LE              reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    GE              reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    EQUAL           reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    NOTEQUAL        reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    BITAND          reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    CARET           reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    BITOR           reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    AND             reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    QUESTION        reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    OR              reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    RPAREN          reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    SEMI            reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    COMMA           reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    RBRACK          reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    RBRACE          reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)
    COLON           reduce using rule 30 (QualifiedName -> Name DOT IDENTIFIER .)


state 183

    (69) FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .

    RBRACE          reduce using rule 69 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    VOID            reduce using rule 69 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    STATIC          reduce using rule 69 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    FINAL           reduce using rule 69 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    PRIVATE         reduce using rule 69 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    PROTECTED       reduce using rule 69 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    PUBLIC          reduce using rule 69 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    IDENTIFIER      reduce using rule 69 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    BOOLEAN         reduce using rule 69 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    BYTE            reduce using rule 69 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    SHORT           reduce using rule 69 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    INT             reduce using rule 69 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    LONG            reduce using rule 69 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    CHAR            reduce using rule 69 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    FLOAT           reduce using rule 69 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)
    DOUBLE          reduce using rule 69 (FieldDeclaration -> Modifiers Type VariableDeclarators SEMI .)


state 184

    (97) ConstructorBody -> LBRACE BlockStatements RBRACE .

    RBRACE          reduce using rule 97 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    VOID            reduce using rule 97 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    STATIC          reduce using rule 97 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    FINAL           reduce using rule 97 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    PRIVATE         reduce using rule 97 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    PROTECTED       reduce using rule 97 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    PUBLIC          reduce using rule 97 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    IDENTIFIER      reduce using rule 97 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    BOOLEAN         reduce using rule 97 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    BYTE            reduce using rule 97 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    SHORT           reduce using rule 97 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    INT             reduce using rule 97 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    LONG            reduce using rule 97 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    CHAR            reduce using rule 97 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    FLOAT           reduce using rule 97 (ConstructorBody -> LBRACE BlockStatements RBRACE .)
    DOUBLE          reduce using rule 97 (ConstructorBody -> LBRACE BlockStatements RBRACE .)


state 185

    (108) BlockStatements -> BlockStatements BlockStatement .

    RBRACE          reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    IDENTIFIER      reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    IF              reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    WHILE           reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    FOR             reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    LBRACE          reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    SEMI            reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    SWITCH          reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    DO              reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    BREAK           reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    CONTINUE        reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    RETURN          reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    BOOLEAN         reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    INC             reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    DEC             reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    NEW             reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    BYTE            reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    SHORT           reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    INT             reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    LONG            reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    CHAR            reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    FLOAT           reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    DOUBLE          reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    SUPER           reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    THIS            reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    LPAREN          reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    DECIMAL_LITERAL reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    HEX_LITERAL     reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    BINARY_LITERAL  reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    FLOAT_LITERAL   reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    BOOL_LITERAL    reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    CHAR_LITERAL    reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    STRING_LITERAL  reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    CASE            reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)
    DEFAULT         reduce using rule 108 (BlockStatements -> BlockStatements BlockStatement .)


state 186

    (111) LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .

    RBRACE          reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    IDENTIFIER      reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    IF              reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    WHILE           reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    FOR             reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    LBRACE          reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    SEMI            reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    SWITCH          reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    DO              reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    BREAK           reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    CONTINUE        reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    RETURN          reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    BOOLEAN         reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    INC             reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    DEC             reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    NEW             reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    BYTE            reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    SHORT           reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    INT             reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    LONG            reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    CHAR            reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    FLOAT           reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    DOUBLE          reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    SUPER           reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    THIS            reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    LPAREN          reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    DECIMAL_LITERAL reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    HEX_LITERAL     reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    BINARY_LITERAL  reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    FLOAT_LITERAL   reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    BOOL_LITERAL    reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    CHAR_LITERAL    reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    STRING_LITERAL  reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    CASE            reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)
    DEFAULT         reduce using rule 111 (LocalVariableDeclarationStatement -> LocalVariableDeclaration SEMI .)


state 187

    (112) LocalVariableDeclaration -> Type VariableDeclarators .
    (72) VariableDeclarators -> VariableDeclarators . COMMA VariableDeclarator

    SEMI            reduce using rule 112 (LocalVariableDeclaration -> Type VariableDeclarators .)
    COMMA           shift and go to state 172


state 188

    (75) VariableDeclaratorId -> IDENTIFIER .
    (76) VariableDeclaratorId -> IDENTIFIER . Dims
    (208) Dims -> . LBRACK RBRACK
    (209) Dims -> . Dims LBRACK RBRACK

    ASSIGN          reduce using rule 75 (VariableDeclaratorId -> IDENTIFIER .)
    COMMA           reduce using rule 75 (VariableDeclaratorId -> IDENTIFIER .)
    SEMI            reduce using rule 75 (VariableDeclaratorId -> IDENTIFIER .)
    RPAREN          reduce using rule 75 (VariableDeclaratorId -> IDENTIFIER .)
    LBRACK          shift and go to state 99

    Dims                           shift and go to state 174

state 189

    (133) LabeledStatement -> IDENTIFIER COLON . Statement
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 130
    IF              shift and go to state 131
    WHILE           shift and go to state 133
    FOR             shift and go to state 134
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 279
    StatementWithoutTrailingSubstatement shift and go to state 115
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 190

    (143) IfThenStatement -> IF begin_scope . LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> IF begin_scope . LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope

    LPAREN          shift and go to state 281


state 191

    (192) PrimaryNoNewArray -> LPAREN . Expression RPAREN
    (235) CastExpression -> LPAREN . PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> LPAREN . PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> LPAREN . Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> LPAREN . Name Dims RPAREN UnaryExpressionNotAddSub
    (288) Expression -> . AssignmentExpression
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    BOOLEAN         shift and go to state 65
    IDENTIFIER      shift and go to state 63
    BYTE            shift and go to state 71
    SHORT           shift and go to state 72
    INT             shift and go to state 73
    LONG            shift and go to state 74
    CHAR            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    Expression                     shift and go to state 282
    PrimitiveType                  shift and go to state 283
    UnaryExpression                shift and go to state 214
    UnaryExpressionNotAddSub       shift and go to state 217
    Name                           shift and go to state 284
    AssignmentExpression           shift and go to state 193
    NumericType                    shift and go to state 64
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    IntegralType                   shift and go to state 68
    FloatingPointType              shift and go to state 69
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 192

    (192) PrimaryNoNewArray -> LPAREN Expression . RPAREN

    RPAREN          shift and go to state 285


state 193

    (288) Expression -> AssignmentExpression .

    RPAREN          reduce using rule 288 (Expression -> AssignmentExpression .)
    SEMI            reduce using rule 288 (Expression -> AssignmentExpression .)
    COMMA           reduce using rule 288 (Expression -> AssignmentExpression .)
    RBRACK          reduce using rule 288 (Expression -> AssignmentExpression .)
    RBRACE          reduce using rule 288 (Expression -> AssignmentExpression .)
    COLON           reduce using rule 288 (Expression -> AssignmentExpression .)


state 194

    (270) AssignmentExpression -> ConditionalExpression .

    RPAREN          reduce using rule 270 (AssignmentExpression -> ConditionalExpression .)
    SEMI            reduce using rule 270 (AssignmentExpression -> ConditionalExpression .)
    COMMA           reduce using rule 270 (AssignmentExpression -> ConditionalExpression .)
    RBRACK          reduce using rule 270 (AssignmentExpression -> ConditionalExpression .)
    RBRACE          reduce using rule 270 (AssignmentExpression -> ConditionalExpression .)
    COLON           reduce using rule 270 (AssignmentExpression -> ConditionalExpression .)


state 195

    (271) AssignmentExpression -> Assignment .

    RPAREN          reduce using rule 271 (AssignmentExpression -> Assignment .)
    SEMI            reduce using rule 271 (AssignmentExpression -> Assignment .)
    COMMA           reduce using rule 271 (AssignmentExpression -> Assignment .)
    RBRACK          reduce using rule 271 (AssignmentExpression -> Assignment .)
    RBRACE          reduce using rule 271 (AssignmentExpression -> Assignment .)
    COLON           reduce using rule 271 (AssignmentExpression -> Assignment .)


state 196

    (268) ConditionalExpression -> ConditionalOrExpression .
    (269) ConditionalExpression -> ConditionalOrExpression . QUESTION Expression COLON ConditionalExpression
    (267) ConditionalOrExpression -> ConditionalOrExpression . OR ConditionalAndExpression

    RPAREN          reduce using rule 268 (ConditionalExpression -> ConditionalOrExpression .)
    SEMI            reduce using rule 268 (ConditionalExpression -> ConditionalOrExpression .)
    COMMA           reduce using rule 268 (ConditionalExpression -> ConditionalOrExpression .)
    RBRACK          reduce using rule 268 (ConditionalExpression -> ConditionalOrExpression .)
    RBRACE          reduce using rule 268 (ConditionalExpression -> ConditionalOrExpression .)
    COLON           reduce using rule 268 (ConditionalExpression -> ConditionalOrExpression .)
    QUESTION        shift and go to state 286
    OR              shift and go to state 287


state 197

    (266) ConditionalOrExpression -> ConditionalAndExpression .
    (265) ConditionalAndExpression -> ConditionalAndExpression . AND InclusiveOrExpression

    QUESTION        reduce using rule 266 (ConditionalOrExpression -> ConditionalAndExpression .)
    OR              reduce using rule 266 (ConditionalOrExpression -> ConditionalAndExpression .)
    RPAREN          reduce using rule 266 (ConditionalOrExpression -> ConditionalAndExpression .)
    SEMI            reduce using rule 266 (ConditionalOrExpression -> ConditionalAndExpression .)
    COMMA           reduce using rule 266 (ConditionalOrExpression -> ConditionalAndExpression .)
    RBRACK          reduce using rule 266 (ConditionalOrExpression -> ConditionalAndExpression .)
    RBRACE          reduce using rule 266 (ConditionalOrExpression -> ConditionalAndExpression .)
    COLON           reduce using rule 266 (ConditionalOrExpression -> ConditionalAndExpression .)
    AND             shift and go to state 288


state 198

    (273) LeftHandSide -> Name .
    (216) ArrayAccess -> Name . LBRACK Expression RBRACK
    (30) QualifiedName -> Name . DOT IDENTIFIER
    (212) MethodInvocation -> Name . LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> Name . LPAREN RPAREN
    (219) PostfixExpression -> Name .

    ASSIGN          reduce using rule 273 (LeftHandSide -> Name .)
    ADD_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    SUB_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    MUL_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    DIV_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    AND_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    OR_ASSIGN       reduce using rule 273 (LeftHandSide -> Name .)
    XOR_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    MOD_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    LSHIFT_ASSIGN   reduce using rule 273 (LeftHandSide -> Name .)
    RSHIFT_ASSIGN   reduce using rule 273 (LeftHandSide -> Name .)
    URSHIFT_ASSIGN  reduce using rule 273 (LeftHandSide -> Name .)
    LBRACK          shift and go to state 289
    DOT             shift and go to state 103
    LPAREN          shift and go to state 235
    INC             reduce using rule 219 (PostfixExpression -> Name .)
    DEC             reduce using rule 219 (PostfixExpression -> Name .)
    MUL             reduce using rule 219 (PostfixExpression -> Name .)
    DIV             reduce using rule 219 (PostfixExpression -> Name .)
    MOD             reduce using rule 219 (PostfixExpression -> Name .)
    ADD             reduce using rule 219 (PostfixExpression -> Name .)
    SUB             reduce using rule 219 (PostfixExpression -> Name .)
    LSHIFT          reduce using rule 219 (PostfixExpression -> Name .)
    RSHIFT          reduce using rule 219 (PostfixExpression -> Name .)
    URSHIFT         reduce using rule 219 (PostfixExpression -> Name .)
    LT              reduce using rule 219 (PostfixExpression -> Name .)
    GT              reduce using rule 219 (PostfixExpression -> Name .)
    LE              reduce using rule 219 (PostfixExpression -> Name .)
    GE              reduce using rule 219 (PostfixExpression -> Name .)
    EQUAL           reduce using rule 219 (PostfixExpression -> Name .)
    NOTEQUAL        reduce using rule 219 (PostfixExpression -> Name .)
    BITAND          reduce using rule 219 (PostfixExpression -> Name .)
    CARET           reduce using rule 219 (PostfixExpression -> Name .)
    BITOR           reduce using rule 219 (PostfixExpression -> Name .)
    AND             reduce using rule 219 (PostfixExpression -> Name .)
    QUESTION        reduce using rule 219 (PostfixExpression -> Name .)
    OR              reduce using rule 219 (PostfixExpression -> Name .)
    RPAREN          reduce using rule 219 (PostfixExpression -> Name .)
    SEMI            reduce using rule 219 (PostfixExpression -> Name .)
    COMMA           reduce using rule 219 (PostfixExpression -> Name .)
    RBRACK          reduce using rule 219 (PostfixExpression -> Name .)
    RBRACE          reduce using rule 219 (PostfixExpression -> Name .)
    COLON           reduce using rule 219 (PostfixExpression -> Name .)


state 199

    (264) ConditionalAndExpression -> InclusiveOrExpression .
    (263) InclusiveOrExpression -> InclusiveOrExpression . BITOR ExclusiveOrExpression

    AND             reduce using rule 264 (ConditionalAndExpression -> InclusiveOrExpression .)
    QUESTION        reduce using rule 264 (ConditionalAndExpression -> InclusiveOrExpression .)
    OR              reduce using rule 264 (ConditionalAndExpression -> InclusiveOrExpression .)
    RPAREN          reduce using rule 264 (ConditionalAndExpression -> InclusiveOrExpression .)
    SEMI            reduce using rule 264 (ConditionalAndExpression -> InclusiveOrExpression .)
    COMMA           reduce using rule 264 (ConditionalAndExpression -> InclusiveOrExpression .)
    RBRACK          reduce using rule 264 (ConditionalAndExpression -> InclusiveOrExpression .)
    RBRACE          reduce using rule 264 (ConditionalAndExpression -> InclusiveOrExpression .)
    COLON           reduce using rule 264 (ConditionalAndExpression -> InclusiveOrExpression .)
    BITOR           shift and go to state 290


state 200

    (210) FieldAccess -> Primary . DOT Name
    (214) MethodInvocation -> Primary . DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> Primary . DOT IDENTIFIER LPAREN RPAREN
    (218) PostfixExpression -> Primary .

    DOT             shift and go to state 291
    INC             reduce using rule 218 (PostfixExpression -> Primary .)
    DEC             reduce using rule 218 (PostfixExpression -> Primary .)
    MUL             reduce using rule 218 (PostfixExpression -> Primary .)
    DIV             reduce using rule 218 (PostfixExpression -> Primary .)
    MOD             reduce using rule 218 (PostfixExpression -> Primary .)
    ADD             reduce using rule 218 (PostfixExpression -> Primary .)
    SUB             reduce using rule 218 (PostfixExpression -> Primary .)
    LSHIFT          reduce using rule 218 (PostfixExpression -> Primary .)
    RSHIFT          reduce using rule 218 (PostfixExpression -> Primary .)
    URSHIFT         reduce using rule 218 (PostfixExpression -> Primary .)
    LT              reduce using rule 218 (PostfixExpression -> Primary .)
    GT              reduce using rule 218 (PostfixExpression -> Primary .)
    LE              reduce using rule 218 (PostfixExpression -> Primary .)
    GE              reduce using rule 218 (PostfixExpression -> Primary .)
    EQUAL           reduce using rule 218 (PostfixExpression -> Primary .)
    NOTEQUAL        reduce using rule 218 (PostfixExpression -> Primary .)
    BITAND          reduce using rule 218 (PostfixExpression -> Primary .)
    CARET           reduce using rule 218 (PostfixExpression -> Primary .)
    BITOR           reduce using rule 218 (PostfixExpression -> Primary .)
    AND             reduce using rule 218 (PostfixExpression -> Primary .)
    QUESTION        reduce using rule 218 (PostfixExpression -> Primary .)
    OR              reduce using rule 218 (PostfixExpression -> Primary .)
    RPAREN          reduce using rule 218 (PostfixExpression -> Primary .)
    SEMI            reduce using rule 218 (PostfixExpression -> Primary .)
    COMMA           reduce using rule 218 (PostfixExpression -> Primary .)
    RBRACK          reduce using rule 218 (PostfixExpression -> Primary .)
    RBRACE          reduce using rule 218 (PostfixExpression -> Primary .)
    COLON           reduce using rule 218 (PostfixExpression -> Primary .)


state 201

    (217) ArrayAccess -> PrimaryNoNewArray . LBRACK Expression RBRACK
    (188) Primary -> PrimaryNoNewArray .

    LBRACK          shift and go to state 263
    DOT             reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    INC             reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    DEC             reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    MUL             reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    DIV             reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    MOD             reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    ADD             reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    SUB             reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    LSHIFT          reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    RSHIFT          reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    URSHIFT         reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    LT              reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    GT              reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    LE              reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    GE              reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    EQUAL           reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    NOTEQUAL        reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    BITAND          reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    CARET           reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    BITOR           reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    AND             reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    QUESTION        reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    OR              reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    RPAREN          reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    SEMI            reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    COMMA           reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    RBRACK          reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    RBRACE          reduce using rule 188 (Primary -> PrimaryNoNewArray .)
    COLON           reduce using rule 188 (Primary -> PrimaryNoNewArray .)


state 202

    (262) InclusiveOrExpression -> ExclusiveOrExpression .
    (261) ExclusiveOrExpression -> ExclusiveOrExpression . CARET AndExpression

    BITOR           reduce using rule 262 (InclusiveOrExpression -> ExclusiveOrExpression .)
    AND             reduce using rule 262 (InclusiveOrExpression -> ExclusiveOrExpression .)
    QUESTION        reduce using rule 262 (InclusiveOrExpression -> ExclusiveOrExpression .)
    OR              reduce using rule 262 (InclusiveOrExpression -> ExclusiveOrExpression .)
    RPAREN          reduce using rule 262 (InclusiveOrExpression -> ExclusiveOrExpression .)
    SEMI            reduce using rule 262 (InclusiveOrExpression -> ExclusiveOrExpression .)
    COMMA           reduce using rule 262 (InclusiveOrExpression -> ExclusiveOrExpression .)
    RBRACK          reduce using rule 262 (InclusiveOrExpression -> ExclusiveOrExpression .)
    RBRACE          reduce using rule 262 (InclusiveOrExpression -> ExclusiveOrExpression .)
    COLON           reduce using rule 262 (InclusiveOrExpression -> ExclusiveOrExpression .)
    CARET           shift and go to state 292


state 203

    (193) PrimaryNoNewArray -> ClassInstanceCreationExpression .

    LBRACK          reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    DOT             reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    INC             reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    DEC             reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    MUL             reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    DIV             reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    MOD             reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    ADD             reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    SUB             reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    LSHIFT          reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    RSHIFT          reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    URSHIFT         reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    LT              reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    GT              reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    LE              reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    GE              reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    EQUAL           reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    NOTEQUAL        reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    BITAND          reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    CARET           reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    BITOR           reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    AND             reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    QUESTION        reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    OR              reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    RPAREN          reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    SEMI            reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    COMMA           reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    RBRACK          reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    RBRACE          reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)
    COLON           reduce using rule 193 (PrimaryNoNewArray -> ClassInstanceCreationExpression .)


state 204

    (195) PrimaryNoNewArray -> MethodInvocation .

    LBRACK          reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    DOT             reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    INC             reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    DEC             reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    MUL             reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    DIV             reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    MOD             reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    ADD             reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    SUB             reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    LSHIFT          reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    RSHIFT          reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    URSHIFT         reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    LT              reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    GT              reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    LE              reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    GE              reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    EQUAL           reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    NOTEQUAL        reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    BITAND          reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    CARET           reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    BITOR           reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    AND             reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    QUESTION        reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    OR              reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    RPAREN          reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    SEMI            reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    COMMA           reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    RBRACK          reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    RBRACE          reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)
    COLON           reduce using rule 195 (PrimaryNoNewArray -> MethodInvocation .)


state 205

    (260) ExclusiveOrExpression -> AndExpression .
    (259) AndExpression -> AndExpression . BITAND EqualityExpression

    CARET           reduce using rule 260 (ExclusiveOrExpression -> AndExpression .)
    BITOR           reduce using rule 260 (ExclusiveOrExpression -> AndExpression .)
    AND             reduce using rule 260 (ExclusiveOrExpression -> AndExpression .)
    QUESTION        reduce using rule 260 (ExclusiveOrExpression -> AndExpression .)
    OR              reduce using rule 260 (ExclusiveOrExpression -> AndExpression .)
    RPAREN          reduce using rule 260 (ExclusiveOrExpression -> AndExpression .)
    SEMI            reduce using rule 260 (ExclusiveOrExpression -> AndExpression .)
    COMMA           reduce using rule 260 (ExclusiveOrExpression -> AndExpression .)
    RBRACK          reduce using rule 260 (ExclusiveOrExpression -> AndExpression .)
    RBRACE          reduce using rule 260 (ExclusiveOrExpression -> AndExpression .)
    COLON           reduce using rule 260 (ExclusiveOrExpression -> AndExpression .)
    BITAND          shift and go to state 293


state 206

    (201) ArrayCreationExpression -> NEW . PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> NEW . PrimitiveType DimExprs
    (203) ArrayCreationExpression -> NEW . ClassType DimExprs Dims
    (204) ArrayCreationExpression -> NEW . ClassType DimExprs
    (197) ClassInstanceCreationExpression -> NEW . ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> NEW . ClassType LPAREN ArgumentList RPAREN
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (24) ClassType -> . Name
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER

    BOOLEAN         shift and go to state 65
    BYTE            shift and go to state 71
    SHORT           shift and go to state 72
    INT             shift and go to state 73
    LONG            shift and go to state 74
    CHAR            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    IDENTIFIER      shift and go to state 63

    PrimitiveType                  shift and go to state 261
    ClassType                      shift and go to state 294
    NumericType                    shift and go to state 64
    Name                           shift and go to state 262
    IntegralType                   shift and go to state 68
    FloatingPointType              shift and go to state 69
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78

state 207

    (258) AndExpression -> EqualityExpression .
    (256) EqualityExpression -> EqualityExpression . EQUAL RelationalExpression
    (257) EqualityExpression -> EqualityExpression . NOTEQUAL RelationalExpression

    BITAND          reduce using rule 258 (AndExpression -> EqualityExpression .)
    CARET           reduce using rule 258 (AndExpression -> EqualityExpression .)
    BITOR           reduce using rule 258 (AndExpression -> EqualityExpression .)
    AND             reduce using rule 258 (AndExpression -> EqualityExpression .)
    QUESTION        reduce using rule 258 (AndExpression -> EqualityExpression .)
    OR              reduce using rule 258 (AndExpression -> EqualityExpression .)
    RPAREN          reduce using rule 258 (AndExpression -> EqualityExpression .)
    SEMI            reduce using rule 258 (AndExpression -> EqualityExpression .)
    COMMA           reduce using rule 258 (AndExpression -> EqualityExpression .)
    RBRACK          reduce using rule 258 (AndExpression -> EqualityExpression .)
    RBRACE          reduce using rule 258 (AndExpression -> EqualityExpression .)
    COLON           reduce using rule 258 (AndExpression -> EqualityExpression .)
    EQUAL           shift and go to state 295
    NOTEQUAL        shift and go to state 296


state 208

    (255) EqualityExpression -> RelationalExpression .
    (251) RelationalExpression -> RelationalExpression . LT ShiftExpression
    (252) RelationalExpression -> RelationalExpression . GT ShiftExpression
    (253) RelationalExpression -> RelationalExpression . LE ShiftExpression
    (254) RelationalExpression -> RelationalExpression . GE ShiftExpression

    EQUAL           reduce using rule 255 (EqualityExpression -> RelationalExpression .)
    NOTEQUAL        reduce using rule 255 (EqualityExpression -> RelationalExpression .)
    BITAND          reduce using rule 255 (EqualityExpression -> RelationalExpression .)
    CARET           reduce using rule 255 (EqualityExpression -> RelationalExpression .)
    BITOR           reduce using rule 255 (EqualityExpression -> RelationalExpression .)
    AND             reduce using rule 255 (EqualityExpression -> RelationalExpression .)
    QUESTION        reduce using rule 255 (EqualityExpression -> RelationalExpression .)
    OR              reduce using rule 255 (EqualityExpression -> RelationalExpression .)
    RPAREN          reduce using rule 255 (EqualityExpression -> RelationalExpression .)
    SEMI            reduce using rule 255 (EqualityExpression -> RelationalExpression .)
    COMMA           reduce using rule 255 (EqualityExpression -> RelationalExpression .)
    RBRACK          reduce using rule 255 (EqualityExpression -> RelationalExpression .)
    RBRACE          reduce using rule 255 (EqualityExpression -> RelationalExpression .)
    COLON           reduce using rule 255 (EqualityExpression -> RelationalExpression .)
    LT              shift and go to state 297
    GT              shift and go to state 298
    LE              shift and go to state 299
    GE              shift and go to state 300


state 209

    (250) RelationalExpression -> ShiftExpression .
    (247) ShiftExpression -> ShiftExpression . LSHIFT AdditiveExpression
    (248) ShiftExpression -> ShiftExpression . RSHIFT AdditiveExpression
    (249) ShiftExpression -> ShiftExpression . URSHIFT AdditiveExpression

    LT              reduce using rule 250 (RelationalExpression -> ShiftExpression .)
    GT              reduce using rule 250 (RelationalExpression -> ShiftExpression .)
    LE              reduce using rule 250 (RelationalExpression -> ShiftExpression .)
    GE              reduce using rule 250 (RelationalExpression -> ShiftExpression .)
    EQUAL           reduce using rule 250 (RelationalExpression -> ShiftExpression .)
    NOTEQUAL        reduce using rule 250 (RelationalExpression -> ShiftExpression .)
    BITAND          reduce using rule 250 (RelationalExpression -> ShiftExpression .)
    CARET           reduce using rule 250 (RelationalExpression -> ShiftExpression .)
    BITOR           reduce using rule 250 (RelationalExpression -> ShiftExpression .)
    AND             reduce using rule 250 (RelationalExpression -> ShiftExpression .)
    QUESTION        reduce using rule 250 (RelationalExpression -> ShiftExpression .)
    OR              reduce using rule 250 (RelationalExpression -> ShiftExpression .)
    RPAREN          reduce using rule 250 (RelationalExpression -> ShiftExpression .)
    SEMI            reduce using rule 250 (RelationalExpression -> ShiftExpression .)
    COMMA           reduce using rule 250 (RelationalExpression -> ShiftExpression .)
    RBRACK          reduce using rule 250 (RelationalExpression -> ShiftExpression .)
    RBRACE          reduce using rule 250 (RelationalExpression -> ShiftExpression .)
    COLON           reduce using rule 250 (RelationalExpression -> ShiftExpression .)
    LSHIFT          shift and go to state 301
    RSHIFT          shift and go to state 302
    URSHIFT         shift and go to state 303


state 210

    (246) ShiftExpression -> AdditiveExpression .
    (244) AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression
    (245) AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression

    LSHIFT          reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    RSHIFT          reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    URSHIFT         reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    LT              reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    GT              reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    LE              reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    GE              reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    EQUAL           reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    NOTEQUAL        reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    BITAND          reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    CARET           reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    BITOR           reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    AND             reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    QUESTION        reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    OR              reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    RPAREN          reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    SEMI            reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    COMMA           reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    RBRACK          reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    RBRACE          reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    COLON           reduce using rule 246 (ShiftExpression -> AdditiveExpression .)
    ADD             shift and go to state 304
    SUB             shift and go to state 305


state 211

    (243) AdditiveExpression -> MultiplicativeExpression .
    (240) MultiplicativeExpression -> MultiplicativeExpression . MUL UnaryExpression
    (241) MultiplicativeExpression -> MultiplicativeExpression . DIV UnaryExpression
    (242) MultiplicativeExpression -> MultiplicativeExpression . MOD UnaryExpression

    ADD             reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    SUB             reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    LSHIFT          reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    RSHIFT          reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    URSHIFT         reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    LT              reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    GT              reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    LE              reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    GE              reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    EQUAL           reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    NOTEQUAL        reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    BITAND          reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    CARET           reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    BITOR           reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    AND             reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    QUESTION        reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    OR              reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    RPAREN          reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    SEMI            reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    COMMA           reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    RBRACK          reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    RBRACE          reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    COLON           reduce using rule 243 (AdditiveExpression -> MultiplicativeExpression .)
    MUL             shift and go to state 306
    DIV             shift and go to state 307
    MOD             shift and go to state 308


state 212

    (226) UnaryExpression -> ADD . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    UnaryExpression                shift and go to state 309
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 213

    (227) UnaryExpression -> SUB . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    UnaryExpression                shift and go to state 310
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 214

    (239) MultiplicativeExpression -> UnaryExpression .

    MUL             reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    DIV             reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    MOD             reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    ADD             reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    SUB             reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    LSHIFT          reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    RSHIFT          reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    URSHIFT         reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    LT              reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    GT              reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    LE              reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    GE              reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    EQUAL           reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    NOTEQUAL        reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    BITAND          reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    CARET           reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    BITOR           reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    AND             reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    QUESTION        reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    OR              reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    RPAREN          reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    SEMI            reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    COMMA           reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    RBRACK          reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    RBRACE          reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)
    COLON           reduce using rule 239 (MultiplicativeExpression -> UnaryExpression .)


state 215

    (224) UnaryExpression -> PreIncrementExpression .

    MUL             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    DIV             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    MOD             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    ADD             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    SUB             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    LSHIFT          reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    RSHIFT          reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    URSHIFT         reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    LT              reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    GT              reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    LE              reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    GE              reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    EQUAL           reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    NOTEQUAL        reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    BITAND          reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    CARET           reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    BITOR           reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    AND             reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    QUESTION        reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    OR              reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    RPAREN          reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    SEMI            reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    COMMA           reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    RBRACK          reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    RBRACE          reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)
    COLON           reduce using rule 224 (UnaryExpression -> PreIncrementExpression .)


state 216

    (225) UnaryExpression -> PreDecrementExpression .

    MUL             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    DIV             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    MOD             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    ADD             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    SUB             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    LSHIFT          reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    RSHIFT          reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    URSHIFT         reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    LT              reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    GT              reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    LE              reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    GE              reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    EQUAL           reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    NOTEQUAL        reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    BITAND          reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    CARET           reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    BITOR           reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    AND             reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    QUESTION        reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    OR              reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    RPAREN          reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    SEMI            reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    COMMA           reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    RBRACK          reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    RBRACE          reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)
    COLON           reduce using rule 225 (UnaryExpression -> PreDecrementExpression .)


state 217

    (228) UnaryExpression -> UnaryExpressionNotAddSub .

    MUL             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    DIV             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    MOD             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    ADD             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    SUB             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    LSHIFT          reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    RSHIFT          reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    URSHIFT         reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    LT              reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    GT              reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    LE              reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    GE              reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    EQUAL           reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    NOTEQUAL        reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    BITAND          reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    CARET           reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    BITOR           reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    AND             reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    QUESTION        reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    OR              reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    RPAREN          reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    SEMI            reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    COMMA           reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    RBRACK          reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    RBRACE          reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)
    COLON           reduce using rule 228 (UnaryExpression -> UnaryExpressionNotAddSub .)


state 218

    (231) UnaryExpressionNotAddSub -> PostfixExpression .
    (222) PostIncrementExpression -> PostfixExpression . INC
    (223) PostDecrementExpression -> PostfixExpression . DEC

    MUL             reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    DIV             reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    MOD             reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    ADD             reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    SUB             reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    LSHIFT          reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    RSHIFT          reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    URSHIFT         reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    LT              reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    GT              reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    LE              reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    GE              reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    EQUAL           reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    NOTEQUAL        reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    BITAND          reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    CARET           reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    BITOR           reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    AND             reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    QUESTION        reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    OR              reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    RPAREN          reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    SEMI            reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    COMMA           reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    RBRACK          reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    RBRACE          reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    COLON           reduce using rule 231 (UnaryExpressionNotAddSub -> PostfixExpression .)
    INC             shift and go to state 257
    DEC             shift and go to state 258


state 219

    (232) UnaryExpressionNotAddSub -> BANG . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    UnaryExpression                shift and go to state 311
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 220

    (233) UnaryExpressionNotAddSub -> TILDE . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    UnaryExpression                shift and go to state 312
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 221

    (234) UnaryExpressionNotAddSub -> CastExpression .

    MUL             reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    DIV             reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    MOD             reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    ADD             reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    SUB             reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    LSHIFT          reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    RSHIFT          reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    URSHIFT         reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    LT              reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    GT              reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    LE              reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    GE              reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    EQUAL           reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    NOTEQUAL        reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    BITAND          reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    CARET           reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    BITOR           reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    AND             reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    QUESTION        reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    OR              reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    RPAREN          reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    SEMI            reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    COMMA           reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    RBRACK          reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    RBRACE          reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)
    COLON           reduce using rule 234 (UnaryExpressionNotAddSub -> CastExpression .)


state 222

    (220) PostfixExpression -> PostIncrementExpression .

    INC             reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    DEC             reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    MUL             reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    DIV             reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    MOD             reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    ADD             reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    SUB             reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    LSHIFT          reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    RSHIFT          reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    URSHIFT         reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    LT              reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    GT              reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    LE              reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    GE              reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    EQUAL           reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    NOTEQUAL        reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    BITAND          reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    CARET           reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    BITOR           reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    AND             reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    QUESTION        reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    OR              reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    RPAREN          reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    SEMI            reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    COMMA           reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    RBRACK          reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    RBRACE          reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)
    COLON           reduce using rule 220 (PostfixExpression -> PostIncrementExpression .)


state 223

    (221) PostfixExpression -> PostDecrementExpression .

    INC             reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    DEC             reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    MUL             reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    DIV             reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    MOD             reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    ADD             reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    SUB             reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    LSHIFT          reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    RSHIFT          reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    URSHIFT         reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    LT              reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    GT              reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    LE              reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    GE              reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    EQUAL           reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    NOTEQUAL        reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    BITAND          reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    CARET           reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    BITOR           reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    AND             reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    QUESTION        reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    OR              reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    RPAREN          reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    SEMI            reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    COMMA           reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    RBRACK          reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    RBRACE          reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)
    COLON           reduce using rule 221 (PostfixExpression -> PostDecrementExpression .)


state 224

    (158) WhileStatement -> WHILE begin_scope . LPAREN Expression RPAREN Statement end_scope

    LPAREN          shift and go to state 313


state 225

    (161) ForStatement -> FOR begin_scope . LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> FOR begin_scope . LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> FOR begin_scope . LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope . LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> FOR begin_scope . LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> FOR begin_scope . LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> FOR begin_scope . LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> FOR begin_scope . LPAREN SEMI SEMI RPAREN Statement end_scope

    LPAREN          shift and go to state 314


state 226

    (135) ExpressionStatement -> StatementExpression SEMI .

    RBRACE          reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    IDENTIFIER      reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    IF              reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    WHILE           reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    FOR             reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    LBRACE          reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    SEMI            reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    SWITCH          reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    DO              reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    BREAK           reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    CONTINUE        reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    RETURN          reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    BOOLEAN         reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    INC             reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    DEC             reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    NEW             reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    BYTE            reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    SHORT           reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    INT             reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    LONG            reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    CHAR            reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    FLOAT           reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    DOUBLE          reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    SUPER           reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    THIS            reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    LPAREN          reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    DECIMAL_LITERAL reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    HEX_LITERAL     reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    BINARY_LITERAL  reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    FLOAT_LITERAL   reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    BOOL_LITERAL    reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    CHAR_LITERAL    reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    STRING_LITERAL  reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    CASE            reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    DEFAULT         reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)
    ELSE            reduce using rule 135 (ExpressionStatement -> StatementExpression SEMI .)


state 227

    (146) SwitchStatement -> SWITCH LPAREN . Expression RPAREN SwitchBlock
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    Expression                     shift and go to state 315
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 228

    (160) DoStatement -> DO begin_scope . Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 130
    IF              shift and go to state 131
    WHILE           shift and go to state 133
    FOR             shift and go to state 134
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 316
    StatementWithoutTrailingSubstatement shift and go to state 115
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 229

    (182) BreakStatement -> BREAK IDENTIFIER . SEMI

    SEMI            shift and go to state 317


state 230

    (183) BreakStatement -> BREAK SEMI .

    RBRACE          reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    IDENTIFIER      reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    IF              reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    WHILE           reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    FOR             reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    LBRACE          reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    SEMI            reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    SWITCH          reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    DO              reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    BREAK           reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    CONTINUE        reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    RETURN          reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    BOOLEAN         reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    INC             reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    DEC             reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    NEW             reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    BYTE            reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    SHORT           reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    INT             reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    LONG            reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    CHAR            reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    FLOAT           reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    DOUBLE          reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    SUPER           reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    THIS            reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    LPAREN          reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    DECIMAL_LITERAL reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    HEX_LITERAL     reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    BINARY_LITERAL  reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    FLOAT_LITERAL   reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    BOOL_LITERAL    reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    CHAR_LITERAL    reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    STRING_LITERAL  reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    CASE            reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    DEFAULT         reduce using rule 183 (BreakStatement -> BREAK SEMI .)
    ELSE            reduce using rule 183 (BreakStatement -> BREAK SEMI .)


state 231

    (184) ContinueStatement -> CONTINUE IDENTIFIER . SEMI

    SEMI            shift and go to state 318


state 232

    (185) ContinueStatement -> CONTINUE SEMI .

    RBRACE          reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    IDENTIFIER      reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    IF              reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    WHILE           reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    FOR             reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    LBRACE          reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    SEMI            reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    SWITCH          reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    DO              reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    BREAK           reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    CONTINUE        reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    RETURN          reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    BOOLEAN         reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    INC             reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    DEC             reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    NEW             reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    BYTE            reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    SHORT           reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    INT             reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    LONG            reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    CHAR            reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    FLOAT           reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    DOUBLE          reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    SUPER           reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    THIS            reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    LPAREN          reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    DECIMAL_LITERAL reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    HEX_LITERAL     reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    BINARY_LITERAL  reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    FLOAT_LITERAL   reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    BOOL_LITERAL    reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    CHAR_LITERAL    reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    STRING_LITERAL  reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    CASE            reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    DEFAULT         reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)
    ELSE            reduce using rule 185 (ContinueStatement -> CONTINUE SEMI .)


state 233

    (186) ReturnStatement -> RETURN Expression . SEMI

    SEMI            shift and go to state 319


state 234

    (187) ReturnStatement -> RETURN SEMI .

    RBRACE          reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    IDENTIFIER      reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    IF              reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    WHILE           reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    FOR             reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    LBRACE          reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    SEMI            reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    SWITCH          reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    DO              reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    BREAK           reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    CONTINUE        reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    RETURN          reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    BOOLEAN         reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    INC             reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    DEC             reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    NEW             reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    BYTE            reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    SHORT           reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    INT             reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    LONG            reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    CHAR            reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    FLOAT           reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    DOUBLE          reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    SUPER           reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    THIS            reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    LPAREN          reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    DECIMAL_LITERAL reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    HEX_LITERAL     reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    BINARY_LITERAL  reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    FLOAT_LITERAL   reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    BOOL_LITERAL    reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    CHAR_LITERAL    reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    STRING_LITERAL  reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    CASE            reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    DEFAULT         reduce using rule 187 (ReturnStatement -> RETURN SEMI .)
    ELSE            reduce using rule 187 (ReturnStatement -> RETURN SEMI .)


state 235

    (212) MethodInvocation -> Name LPAREN . ArgumentList RPAREN
    (213) MethodInvocation -> Name LPAREN . RPAREN
    (199) ArgumentList -> . Expression
    (200) ArgumentList -> . ArgumentList COMMA Expression
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    RPAREN          shift and go to state 321
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    Name                           shift and go to state 198
    ArgumentList                   shift and go to state 320
    Expression                     shift and go to state 322
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 236

    (216) ArrayAccess -> Name LBRACK . Expression RBRACK
    (208) Dims -> LBRACK . RBRACK
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    RBRACK          shift and go to state 181
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    Name                           shift and go to state 198
    Expression                     shift and go to state 323
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 237

    (272) Assignment -> LeftHandSide AssignmentOperator . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    LeftHandSide                   shift and go to state 149
    AssignmentExpression           shift and go to state 324
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 238

    (276) AssignmentOperator -> ASSIGN .

    SUPER           reduce using rule 276 (AssignmentOperator -> ASSIGN .)
    IDENTIFIER      reduce using rule 276 (AssignmentOperator -> ASSIGN .)
    THIS            reduce using rule 276 (AssignmentOperator -> ASSIGN .)
    LPAREN          reduce using rule 276 (AssignmentOperator -> ASSIGN .)
    NEW             reduce using rule 276 (AssignmentOperator -> ASSIGN .)
    DECIMAL_LITERAL reduce using rule 276 (AssignmentOperator -> ASSIGN .)
    HEX_LITERAL     reduce using rule 276 (AssignmentOperator -> ASSIGN .)
    BINARY_LITERAL  reduce using rule 276 (AssignmentOperator -> ASSIGN .)
    FLOAT_LITERAL   reduce using rule 276 (AssignmentOperator -> ASSIGN .)
    BOOL_LITERAL    reduce using rule 276 (AssignmentOperator -> ASSIGN .)
    CHAR_LITERAL    reduce using rule 276 (AssignmentOperator -> ASSIGN .)
    STRING_LITERAL  reduce using rule 276 (AssignmentOperator -> ASSIGN .)
    ADD             reduce using rule 276 (AssignmentOperator -> ASSIGN .)
    SUB             reduce using rule 276 (AssignmentOperator -> ASSIGN .)
    INC             reduce using rule 276 (AssignmentOperator -> ASSIGN .)
    DEC             reduce using rule 276 (AssignmentOperator -> ASSIGN .)
    BANG            reduce using rule 276 (AssignmentOperator -> ASSIGN .)
    TILDE           reduce using rule 276 (AssignmentOperator -> ASSIGN .)


state 239

    (277) AssignmentOperator -> ADD_ASSIGN .

    SUPER           reduce using rule 277 (AssignmentOperator -> ADD_ASSIGN .)
    IDENTIFIER      reduce using rule 277 (AssignmentOperator -> ADD_ASSIGN .)
    THIS            reduce using rule 277 (AssignmentOperator -> ADD_ASSIGN .)
    LPAREN          reduce using rule 277 (AssignmentOperator -> ADD_ASSIGN .)
    NEW             reduce using rule 277 (AssignmentOperator -> ADD_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 277 (AssignmentOperator -> ADD_ASSIGN .)
    HEX_LITERAL     reduce using rule 277 (AssignmentOperator -> ADD_ASSIGN .)
    BINARY_LITERAL  reduce using rule 277 (AssignmentOperator -> ADD_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 277 (AssignmentOperator -> ADD_ASSIGN .)
    BOOL_LITERAL    reduce using rule 277 (AssignmentOperator -> ADD_ASSIGN .)
    CHAR_LITERAL    reduce using rule 277 (AssignmentOperator -> ADD_ASSIGN .)
    STRING_LITERAL  reduce using rule 277 (AssignmentOperator -> ADD_ASSIGN .)
    ADD             reduce using rule 277 (AssignmentOperator -> ADD_ASSIGN .)
    SUB             reduce using rule 277 (AssignmentOperator -> ADD_ASSIGN .)
    INC             reduce using rule 277 (AssignmentOperator -> ADD_ASSIGN .)
    DEC             reduce using rule 277 (AssignmentOperator -> ADD_ASSIGN .)
    BANG            reduce using rule 277 (AssignmentOperator -> ADD_ASSIGN .)
    TILDE           reduce using rule 277 (AssignmentOperator -> ADD_ASSIGN .)


state 240

    (278) AssignmentOperator -> SUB_ASSIGN .

    SUPER           reduce using rule 278 (AssignmentOperator -> SUB_ASSIGN .)
    IDENTIFIER      reduce using rule 278 (AssignmentOperator -> SUB_ASSIGN .)
    THIS            reduce using rule 278 (AssignmentOperator -> SUB_ASSIGN .)
    LPAREN          reduce using rule 278 (AssignmentOperator -> SUB_ASSIGN .)
    NEW             reduce using rule 278 (AssignmentOperator -> SUB_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 278 (AssignmentOperator -> SUB_ASSIGN .)
    HEX_LITERAL     reduce using rule 278 (AssignmentOperator -> SUB_ASSIGN .)
    BINARY_LITERAL  reduce using rule 278 (AssignmentOperator -> SUB_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 278 (AssignmentOperator -> SUB_ASSIGN .)
    BOOL_LITERAL    reduce using rule 278 (AssignmentOperator -> SUB_ASSIGN .)
    CHAR_LITERAL    reduce using rule 278 (AssignmentOperator -> SUB_ASSIGN .)
    STRING_LITERAL  reduce using rule 278 (AssignmentOperator -> SUB_ASSIGN .)
    ADD             reduce using rule 278 (AssignmentOperator -> SUB_ASSIGN .)
    SUB             reduce using rule 278 (AssignmentOperator -> SUB_ASSIGN .)
    INC             reduce using rule 278 (AssignmentOperator -> SUB_ASSIGN .)
    DEC             reduce using rule 278 (AssignmentOperator -> SUB_ASSIGN .)
    BANG            reduce using rule 278 (AssignmentOperator -> SUB_ASSIGN .)
    TILDE           reduce using rule 278 (AssignmentOperator -> SUB_ASSIGN .)


state 241

    (279) AssignmentOperator -> MUL_ASSIGN .

    SUPER           reduce using rule 279 (AssignmentOperator -> MUL_ASSIGN .)
    IDENTIFIER      reduce using rule 279 (AssignmentOperator -> MUL_ASSIGN .)
    THIS            reduce using rule 279 (AssignmentOperator -> MUL_ASSIGN .)
    LPAREN          reduce using rule 279 (AssignmentOperator -> MUL_ASSIGN .)
    NEW             reduce using rule 279 (AssignmentOperator -> MUL_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 279 (AssignmentOperator -> MUL_ASSIGN .)
    HEX_LITERAL     reduce using rule 279 (AssignmentOperator -> MUL_ASSIGN .)
    BINARY_LITERAL  reduce using rule 279 (AssignmentOperator -> MUL_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 279 (AssignmentOperator -> MUL_ASSIGN .)
    BOOL_LITERAL    reduce using rule 279 (AssignmentOperator -> MUL_ASSIGN .)
    CHAR_LITERAL    reduce using rule 279 (AssignmentOperator -> MUL_ASSIGN .)
    STRING_LITERAL  reduce using rule 279 (AssignmentOperator -> MUL_ASSIGN .)
    ADD             reduce using rule 279 (AssignmentOperator -> MUL_ASSIGN .)
    SUB             reduce using rule 279 (AssignmentOperator -> MUL_ASSIGN .)
    INC             reduce using rule 279 (AssignmentOperator -> MUL_ASSIGN .)
    DEC             reduce using rule 279 (AssignmentOperator -> MUL_ASSIGN .)
    BANG            reduce using rule 279 (AssignmentOperator -> MUL_ASSIGN .)
    TILDE           reduce using rule 279 (AssignmentOperator -> MUL_ASSIGN .)


state 242

    (280) AssignmentOperator -> DIV_ASSIGN .

    SUPER           reduce using rule 280 (AssignmentOperator -> DIV_ASSIGN .)
    IDENTIFIER      reduce using rule 280 (AssignmentOperator -> DIV_ASSIGN .)
    THIS            reduce using rule 280 (AssignmentOperator -> DIV_ASSIGN .)
    LPAREN          reduce using rule 280 (AssignmentOperator -> DIV_ASSIGN .)
    NEW             reduce using rule 280 (AssignmentOperator -> DIV_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 280 (AssignmentOperator -> DIV_ASSIGN .)
    HEX_LITERAL     reduce using rule 280 (AssignmentOperator -> DIV_ASSIGN .)
    BINARY_LITERAL  reduce using rule 280 (AssignmentOperator -> DIV_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 280 (AssignmentOperator -> DIV_ASSIGN .)
    BOOL_LITERAL    reduce using rule 280 (AssignmentOperator -> DIV_ASSIGN .)
    CHAR_LITERAL    reduce using rule 280 (AssignmentOperator -> DIV_ASSIGN .)
    STRING_LITERAL  reduce using rule 280 (AssignmentOperator -> DIV_ASSIGN .)
    ADD             reduce using rule 280 (AssignmentOperator -> DIV_ASSIGN .)
    SUB             reduce using rule 280 (AssignmentOperator -> DIV_ASSIGN .)
    INC             reduce using rule 280 (AssignmentOperator -> DIV_ASSIGN .)
    DEC             reduce using rule 280 (AssignmentOperator -> DIV_ASSIGN .)
    BANG            reduce using rule 280 (AssignmentOperator -> DIV_ASSIGN .)
    TILDE           reduce using rule 280 (AssignmentOperator -> DIV_ASSIGN .)


state 243

    (281) AssignmentOperator -> AND_ASSIGN .

    SUPER           reduce using rule 281 (AssignmentOperator -> AND_ASSIGN .)
    IDENTIFIER      reduce using rule 281 (AssignmentOperator -> AND_ASSIGN .)
    THIS            reduce using rule 281 (AssignmentOperator -> AND_ASSIGN .)
    LPAREN          reduce using rule 281 (AssignmentOperator -> AND_ASSIGN .)
    NEW             reduce using rule 281 (AssignmentOperator -> AND_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 281 (AssignmentOperator -> AND_ASSIGN .)
    HEX_LITERAL     reduce using rule 281 (AssignmentOperator -> AND_ASSIGN .)
    BINARY_LITERAL  reduce using rule 281 (AssignmentOperator -> AND_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 281 (AssignmentOperator -> AND_ASSIGN .)
    BOOL_LITERAL    reduce using rule 281 (AssignmentOperator -> AND_ASSIGN .)
    CHAR_LITERAL    reduce using rule 281 (AssignmentOperator -> AND_ASSIGN .)
    STRING_LITERAL  reduce using rule 281 (AssignmentOperator -> AND_ASSIGN .)
    ADD             reduce using rule 281 (AssignmentOperator -> AND_ASSIGN .)
    SUB             reduce using rule 281 (AssignmentOperator -> AND_ASSIGN .)
    INC             reduce using rule 281 (AssignmentOperator -> AND_ASSIGN .)
    DEC             reduce using rule 281 (AssignmentOperator -> AND_ASSIGN .)
    BANG            reduce using rule 281 (AssignmentOperator -> AND_ASSIGN .)
    TILDE           reduce using rule 281 (AssignmentOperator -> AND_ASSIGN .)


state 244

    (282) AssignmentOperator -> OR_ASSIGN .

    SUPER           reduce using rule 282 (AssignmentOperator -> OR_ASSIGN .)
    IDENTIFIER      reduce using rule 282 (AssignmentOperator -> OR_ASSIGN .)
    THIS            reduce using rule 282 (AssignmentOperator -> OR_ASSIGN .)
    LPAREN          reduce using rule 282 (AssignmentOperator -> OR_ASSIGN .)
    NEW             reduce using rule 282 (AssignmentOperator -> OR_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 282 (AssignmentOperator -> OR_ASSIGN .)
    HEX_LITERAL     reduce using rule 282 (AssignmentOperator -> OR_ASSIGN .)
    BINARY_LITERAL  reduce using rule 282 (AssignmentOperator -> OR_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 282 (AssignmentOperator -> OR_ASSIGN .)
    BOOL_LITERAL    reduce using rule 282 (AssignmentOperator -> OR_ASSIGN .)
    CHAR_LITERAL    reduce using rule 282 (AssignmentOperator -> OR_ASSIGN .)
    STRING_LITERAL  reduce using rule 282 (AssignmentOperator -> OR_ASSIGN .)
    ADD             reduce using rule 282 (AssignmentOperator -> OR_ASSIGN .)
    SUB             reduce using rule 282 (AssignmentOperator -> OR_ASSIGN .)
    INC             reduce using rule 282 (AssignmentOperator -> OR_ASSIGN .)
    DEC             reduce using rule 282 (AssignmentOperator -> OR_ASSIGN .)
    BANG            reduce using rule 282 (AssignmentOperator -> OR_ASSIGN .)
    TILDE           reduce using rule 282 (AssignmentOperator -> OR_ASSIGN .)


state 245

    (283) AssignmentOperator -> XOR_ASSIGN .

    SUPER           reduce using rule 283 (AssignmentOperator -> XOR_ASSIGN .)
    IDENTIFIER      reduce using rule 283 (AssignmentOperator -> XOR_ASSIGN .)
    THIS            reduce using rule 283 (AssignmentOperator -> XOR_ASSIGN .)
    LPAREN          reduce using rule 283 (AssignmentOperator -> XOR_ASSIGN .)
    NEW             reduce using rule 283 (AssignmentOperator -> XOR_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 283 (AssignmentOperator -> XOR_ASSIGN .)
    HEX_LITERAL     reduce using rule 283 (AssignmentOperator -> XOR_ASSIGN .)
    BINARY_LITERAL  reduce using rule 283 (AssignmentOperator -> XOR_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 283 (AssignmentOperator -> XOR_ASSIGN .)
    BOOL_LITERAL    reduce using rule 283 (AssignmentOperator -> XOR_ASSIGN .)
    CHAR_LITERAL    reduce using rule 283 (AssignmentOperator -> XOR_ASSIGN .)
    STRING_LITERAL  reduce using rule 283 (AssignmentOperator -> XOR_ASSIGN .)
    ADD             reduce using rule 283 (AssignmentOperator -> XOR_ASSIGN .)
    SUB             reduce using rule 283 (AssignmentOperator -> XOR_ASSIGN .)
    INC             reduce using rule 283 (AssignmentOperator -> XOR_ASSIGN .)
    DEC             reduce using rule 283 (AssignmentOperator -> XOR_ASSIGN .)
    BANG            reduce using rule 283 (AssignmentOperator -> XOR_ASSIGN .)
    TILDE           reduce using rule 283 (AssignmentOperator -> XOR_ASSIGN .)


state 246

    (284) AssignmentOperator -> MOD_ASSIGN .

    SUPER           reduce using rule 284 (AssignmentOperator -> MOD_ASSIGN .)
    IDENTIFIER      reduce using rule 284 (AssignmentOperator -> MOD_ASSIGN .)
    THIS            reduce using rule 284 (AssignmentOperator -> MOD_ASSIGN .)
    LPAREN          reduce using rule 284 (AssignmentOperator -> MOD_ASSIGN .)
    NEW             reduce using rule 284 (AssignmentOperator -> MOD_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 284 (AssignmentOperator -> MOD_ASSIGN .)
    HEX_LITERAL     reduce using rule 284 (AssignmentOperator -> MOD_ASSIGN .)
    BINARY_LITERAL  reduce using rule 284 (AssignmentOperator -> MOD_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 284 (AssignmentOperator -> MOD_ASSIGN .)
    BOOL_LITERAL    reduce using rule 284 (AssignmentOperator -> MOD_ASSIGN .)
    CHAR_LITERAL    reduce using rule 284 (AssignmentOperator -> MOD_ASSIGN .)
    STRING_LITERAL  reduce using rule 284 (AssignmentOperator -> MOD_ASSIGN .)
    ADD             reduce using rule 284 (AssignmentOperator -> MOD_ASSIGN .)
    SUB             reduce using rule 284 (AssignmentOperator -> MOD_ASSIGN .)
    INC             reduce using rule 284 (AssignmentOperator -> MOD_ASSIGN .)
    DEC             reduce using rule 284 (AssignmentOperator -> MOD_ASSIGN .)
    BANG            reduce using rule 284 (AssignmentOperator -> MOD_ASSIGN .)
    TILDE           reduce using rule 284 (AssignmentOperator -> MOD_ASSIGN .)


state 247

    (285) AssignmentOperator -> LSHIFT_ASSIGN .

    SUPER           reduce using rule 285 (AssignmentOperator -> LSHIFT_ASSIGN .)
    IDENTIFIER      reduce using rule 285 (AssignmentOperator -> LSHIFT_ASSIGN .)
    THIS            reduce using rule 285 (AssignmentOperator -> LSHIFT_ASSIGN .)
    LPAREN          reduce using rule 285 (AssignmentOperator -> LSHIFT_ASSIGN .)
    NEW             reduce using rule 285 (AssignmentOperator -> LSHIFT_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 285 (AssignmentOperator -> LSHIFT_ASSIGN .)
    HEX_LITERAL     reduce using rule 285 (AssignmentOperator -> LSHIFT_ASSIGN .)
    BINARY_LITERAL  reduce using rule 285 (AssignmentOperator -> LSHIFT_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 285 (AssignmentOperator -> LSHIFT_ASSIGN .)
    BOOL_LITERAL    reduce using rule 285 (AssignmentOperator -> LSHIFT_ASSIGN .)
    CHAR_LITERAL    reduce using rule 285 (AssignmentOperator -> LSHIFT_ASSIGN .)
    STRING_LITERAL  reduce using rule 285 (AssignmentOperator -> LSHIFT_ASSIGN .)
    ADD             reduce using rule 285 (AssignmentOperator -> LSHIFT_ASSIGN .)
    SUB             reduce using rule 285 (AssignmentOperator -> LSHIFT_ASSIGN .)
    INC             reduce using rule 285 (AssignmentOperator -> LSHIFT_ASSIGN .)
    DEC             reduce using rule 285 (AssignmentOperator -> LSHIFT_ASSIGN .)
    BANG            reduce using rule 285 (AssignmentOperator -> LSHIFT_ASSIGN .)
    TILDE           reduce using rule 285 (AssignmentOperator -> LSHIFT_ASSIGN .)


state 248

    (286) AssignmentOperator -> RSHIFT_ASSIGN .

    SUPER           reduce using rule 286 (AssignmentOperator -> RSHIFT_ASSIGN .)
    IDENTIFIER      reduce using rule 286 (AssignmentOperator -> RSHIFT_ASSIGN .)
    THIS            reduce using rule 286 (AssignmentOperator -> RSHIFT_ASSIGN .)
    LPAREN          reduce using rule 286 (AssignmentOperator -> RSHIFT_ASSIGN .)
    NEW             reduce using rule 286 (AssignmentOperator -> RSHIFT_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 286 (AssignmentOperator -> RSHIFT_ASSIGN .)
    HEX_LITERAL     reduce using rule 286 (AssignmentOperator -> RSHIFT_ASSIGN .)
    BINARY_LITERAL  reduce using rule 286 (AssignmentOperator -> RSHIFT_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 286 (AssignmentOperator -> RSHIFT_ASSIGN .)
    BOOL_LITERAL    reduce using rule 286 (AssignmentOperator -> RSHIFT_ASSIGN .)
    CHAR_LITERAL    reduce using rule 286 (AssignmentOperator -> RSHIFT_ASSIGN .)
    STRING_LITERAL  reduce using rule 286 (AssignmentOperator -> RSHIFT_ASSIGN .)
    ADD             reduce using rule 286 (AssignmentOperator -> RSHIFT_ASSIGN .)
    SUB             reduce using rule 286 (AssignmentOperator -> RSHIFT_ASSIGN .)
    INC             reduce using rule 286 (AssignmentOperator -> RSHIFT_ASSIGN .)
    DEC             reduce using rule 286 (AssignmentOperator -> RSHIFT_ASSIGN .)
    BANG            reduce using rule 286 (AssignmentOperator -> RSHIFT_ASSIGN .)
    TILDE           reduce using rule 286 (AssignmentOperator -> RSHIFT_ASSIGN .)


state 249

    (287) AssignmentOperator -> URSHIFT_ASSIGN .

    SUPER           reduce using rule 287 (AssignmentOperator -> URSHIFT_ASSIGN .)
    IDENTIFIER      reduce using rule 287 (AssignmentOperator -> URSHIFT_ASSIGN .)
    THIS            reduce using rule 287 (AssignmentOperator -> URSHIFT_ASSIGN .)
    LPAREN          reduce using rule 287 (AssignmentOperator -> URSHIFT_ASSIGN .)
    NEW             reduce using rule 287 (AssignmentOperator -> URSHIFT_ASSIGN .)
    DECIMAL_LITERAL reduce using rule 287 (AssignmentOperator -> URSHIFT_ASSIGN .)
    HEX_LITERAL     reduce using rule 287 (AssignmentOperator -> URSHIFT_ASSIGN .)
    BINARY_LITERAL  reduce using rule 287 (AssignmentOperator -> URSHIFT_ASSIGN .)
    FLOAT_LITERAL   reduce using rule 287 (AssignmentOperator -> URSHIFT_ASSIGN .)
    BOOL_LITERAL    reduce using rule 287 (AssignmentOperator -> URSHIFT_ASSIGN .)
    CHAR_LITERAL    reduce using rule 287 (AssignmentOperator -> URSHIFT_ASSIGN .)
    STRING_LITERAL  reduce using rule 287 (AssignmentOperator -> URSHIFT_ASSIGN .)
    ADD             reduce using rule 287 (AssignmentOperator -> URSHIFT_ASSIGN .)
    SUB             reduce using rule 287 (AssignmentOperator -> URSHIFT_ASSIGN .)
    INC             reduce using rule 287 (AssignmentOperator -> URSHIFT_ASSIGN .)
    DEC             reduce using rule 287 (AssignmentOperator -> URSHIFT_ASSIGN .)
    BANG            reduce using rule 287 (AssignmentOperator -> URSHIFT_ASSIGN .)
    TILDE           reduce using rule 287 (AssignmentOperator -> URSHIFT_ASSIGN .)


state 250

    (229) PreIncrementExpression -> INC UnaryExpression .

    SEMI            reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    MUL             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    DIV             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    MOD             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    ADD             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    SUB             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    LSHIFT          reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    RSHIFT          reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    URSHIFT         reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    LT              reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    GT              reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    LE              reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    GE              reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    EQUAL           reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    NOTEQUAL        reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    BITAND          reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    CARET           reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    BITOR           reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    AND             reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    QUESTION        reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    OR              reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    RPAREN          reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    COMMA           reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    RBRACK          reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    RBRACE          reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)
    COLON           reduce using rule 229 (PreIncrementExpression -> INC UnaryExpression .)


state 251

    (218) PostfixExpression -> Primary .
    (210) FieldAccess -> Primary . DOT Name
    (214) MethodInvocation -> Primary . DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> Primary . DOT IDENTIFIER LPAREN RPAREN

    INC             reduce using rule 218 (PostfixExpression -> Primary .)
    DEC             reduce using rule 218 (PostfixExpression -> Primary .)
    SEMI            reduce using rule 218 (PostfixExpression -> Primary .)
    MUL             reduce using rule 218 (PostfixExpression -> Primary .)
    DIV             reduce using rule 218 (PostfixExpression -> Primary .)
    MOD             reduce using rule 218 (PostfixExpression -> Primary .)
    ADD             reduce using rule 218 (PostfixExpression -> Primary .)
    SUB             reduce using rule 218 (PostfixExpression -> Primary .)
    LSHIFT          reduce using rule 218 (PostfixExpression -> Primary .)
    RSHIFT          reduce using rule 218 (PostfixExpression -> Primary .)
    URSHIFT         reduce using rule 218 (PostfixExpression -> Primary .)
    LT              reduce using rule 218 (PostfixExpression -> Primary .)
    GT              reduce using rule 218 (PostfixExpression -> Primary .)
    LE              reduce using rule 218 (PostfixExpression -> Primary .)
    GE              reduce using rule 218 (PostfixExpression -> Primary .)
    EQUAL           reduce using rule 218 (PostfixExpression -> Primary .)
    NOTEQUAL        reduce using rule 218 (PostfixExpression -> Primary .)
    BITAND          reduce using rule 218 (PostfixExpression -> Primary .)
    CARET           reduce using rule 218 (PostfixExpression -> Primary .)
    BITOR           reduce using rule 218 (PostfixExpression -> Primary .)
    AND             reduce using rule 218 (PostfixExpression -> Primary .)
    QUESTION        reduce using rule 218 (PostfixExpression -> Primary .)
    OR              reduce using rule 218 (PostfixExpression -> Primary .)
    RPAREN          reduce using rule 218 (PostfixExpression -> Primary .)
    COMMA           reduce using rule 218 (PostfixExpression -> Primary .)
    RBRACK          reduce using rule 218 (PostfixExpression -> Primary .)
    RBRACE          reduce using rule 218 (PostfixExpression -> Primary .)
    COLON           reduce using rule 218 (PostfixExpression -> Primary .)
    DOT             shift and go to state 291


state 252

    (219) PostfixExpression -> Name .
    (30) QualifiedName -> Name . DOT IDENTIFIER
    (212) MethodInvocation -> Name . LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> Name . LPAREN RPAREN
    (216) ArrayAccess -> Name . LBRACK Expression RBRACK

    INC             reduce using rule 219 (PostfixExpression -> Name .)
    DEC             reduce using rule 219 (PostfixExpression -> Name .)
    SEMI            reduce using rule 219 (PostfixExpression -> Name .)
    MUL             reduce using rule 219 (PostfixExpression -> Name .)
    DIV             reduce using rule 219 (PostfixExpression -> Name .)
    MOD             reduce using rule 219 (PostfixExpression -> Name .)
    ADD             reduce using rule 219 (PostfixExpression -> Name .)
    SUB             reduce using rule 219 (PostfixExpression -> Name .)
    LSHIFT          reduce using rule 219 (PostfixExpression -> Name .)
    RSHIFT          reduce using rule 219 (PostfixExpression -> Name .)
    URSHIFT         reduce using rule 219 (PostfixExpression -> Name .)
    LT              reduce using rule 219 (PostfixExpression -> Name .)
    GT              reduce using rule 219 (PostfixExpression -> Name .)
    LE              reduce using rule 219 (PostfixExpression -> Name .)
    GE              reduce using rule 219 (PostfixExpression -> Name .)
    EQUAL           reduce using rule 219 (PostfixExpression -> Name .)
    NOTEQUAL        reduce using rule 219 (PostfixExpression -> Name .)
    BITAND          reduce using rule 219 (PostfixExpression -> Name .)
    CARET           reduce using rule 219 (PostfixExpression -> Name .)
    BITOR           reduce using rule 219 (PostfixExpression -> Name .)
    AND             reduce using rule 219 (PostfixExpression -> Name .)
    QUESTION        reduce using rule 219 (PostfixExpression -> Name .)
    OR              reduce using rule 219 (PostfixExpression -> Name .)
    RPAREN          reduce using rule 219 (PostfixExpression -> Name .)
    COMMA           reduce using rule 219 (PostfixExpression -> Name .)
    RBRACK          reduce using rule 219 (PostfixExpression -> Name .)
    RBRACE          reduce using rule 219 (PostfixExpression -> Name .)
    COLON           reduce using rule 219 (PostfixExpression -> Name .)
    DOT             shift and go to state 103
    LPAREN          shift and go to state 235
    LBRACK          shift and go to state 289


state 253

    (235) CastExpression -> LPAREN . PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> LPAREN . PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> LPAREN . Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> LPAREN . Name Dims RPAREN UnaryExpressionNotAddSub
    (192) PrimaryNoNewArray -> LPAREN . Expression RPAREN
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (288) Expression -> . AssignmentExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    BOOLEAN         shift and go to state 65
    IDENTIFIER      shift and go to state 63
    BYTE            shift and go to state 71
    SHORT           shift and go to state 72
    INT             shift and go to state 73
    LONG            shift and go to state 74
    CHAR            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    PrimitiveType                  shift and go to state 283
    UnaryExpression                shift and go to state 214
    Expression                     shift and go to state 325
    UnaryExpressionNotAddSub       shift and go to state 217
    Name                           shift and go to state 284
    NumericType                    shift and go to state 64
    AssignmentExpression           shift and go to state 193
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    IntegralType                   shift and go to state 68
    FloatingPointType              shift and go to state 69
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 254

    (194) PrimaryNoNewArray -> FieldAccess .

    LBRACK          reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    DOT             reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    INC             reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    DEC             reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    SEMI            reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    MUL             reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    DIV             reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    MOD             reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    ADD             reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    SUB             reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    LSHIFT          reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    RSHIFT          reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    URSHIFT         reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    LT              reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    GT              reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    LE              reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    GE              reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    EQUAL           reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    NOTEQUAL        reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    BITAND          reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    CARET           reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    BITOR           reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    AND             reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    QUESTION        reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    OR              reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    RPAREN          reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    COMMA           reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    RBRACK          reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    RBRACE          reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)
    COLON           reduce using rule 194 (PrimaryNoNewArray -> FieldAccess .)


state 255

    (196) PrimaryNoNewArray -> ArrayAccess .

    LBRACK          reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    DOT             reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    INC             reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    DEC             reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    SEMI            reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    MUL             reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    DIV             reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    MOD             reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    ADD             reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    SUB             reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    LSHIFT          reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    RSHIFT          reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    URSHIFT         reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    LT              reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    GT              reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    LE              reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    GE              reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    EQUAL           reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    NOTEQUAL        reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    BITAND          reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    CARET           reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    BITOR           reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    AND             reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    QUESTION        reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    OR              reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    RPAREN          reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    COMMA           reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    RBRACK          reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    RBRACE          reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)
    COLON           reduce using rule 196 (PrimaryNoNewArray -> ArrayAccess .)


state 256

    (230) PreDecrementExpression -> DEC UnaryExpression .

    SEMI            reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    MUL             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    DIV             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    MOD             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    ADD             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    SUB             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    LSHIFT          reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    RSHIFT          reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    URSHIFT         reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    LT              reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    GT              reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    LE              reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    GE              reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    EQUAL           reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    NOTEQUAL        reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    BITAND          reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    CARET           reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    BITOR           reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    AND             reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    QUESTION        reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    OR              reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    RPAREN          reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    COMMA           reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    RBRACK          reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    RBRACE          reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)
    COLON           reduce using rule 230 (PreDecrementExpression -> DEC UnaryExpression .)


state 257

    (222) PostIncrementExpression -> PostfixExpression INC .

    SEMI            reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    INC             reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    DEC             reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    MUL             reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    DIV             reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    MOD             reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    ADD             reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    SUB             reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    LSHIFT          reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    RSHIFT          reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    URSHIFT         reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    LT              reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    GT              reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    LE              reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    GE              reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    EQUAL           reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    NOTEQUAL        reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    BITAND          reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    CARET           reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    BITOR           reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    AND             reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    QUESTION        reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    OR              reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    RPAREN          reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    COMMA           reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    RBRACK          reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    RBRACE          reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)
    COLON           reduce using rule 222 (PostIncrementExpression -> PostfixExpression INC .)


state 258

    (223) PostDecrementExpression -> PostfixExpression DEC .

    SEMI            reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    INC             reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    DEC             reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    MUL             reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    DIV             reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    MOD             reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    ADD             reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    SUB             reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    LSHIFT          reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    RSHIFT          reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    URSHIFT         reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    LT              reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    GT              reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    LE              reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    GE              reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    EQUAL           reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    NOTEQUAL        reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    BITAND          reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    CARET           reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    BITOR           reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    AND             reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    QUESTION        reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    OR              reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    RPAREN          reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    COMMA           reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    RBRACK          reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    RBRACE          reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)
    COLON           reduce using rule 223 (PostDecrementExpression -> PostfixExpression DEC .)


state 259

    (214) MethodInvocation -> Primary DOT . IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> Primary DOT . IDENTIFIER LPAREN RPAREN
    (210) FieldAccess -> Primary DOT . Name
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER

    IDENTIFIER      shift and go to state 326

    Name                           shift and go to state 327
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78

state 260

    (197) ClassInstanceCreationExpression -> NEW ClassType . LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> NEW ClassType . LPAREN ArgumentList RPAREN
    (203) ArrayCreationExpression -> NEW ClassType . DimExprs Dims
    (204) ArrayCreationExpression -> NEW ClassType . DimExprs
    (205) DimExprs -> . DimExpr
    (206) DimExprs -> . DimExprs DimExpr
    (207) DimExpr -> . LBRACK Expression RBRACK

    LPAREN          shift and go to state 328
    LBRACK          shift and go to state 331

    DimExprs                       shift and go to state 329
    DimExpr                        shift and go to state 330

state 261

    (201) ArrayCreationExpression -> NEW PrimitiveType . DimExprs Dims
    (202) ArrayCreationExpression -> NEW PrimitiveType . DimExprs
    (205) DimExprs -> . DimExpr
    (206) DimExprs -> . DimExprs DimExpr
    (207) DimExpr -> . LBRACK Expression RBRACK

    LBRACK          shift and go to state 331

    DimExprs                       shift and go to state 332
    DimExpr                        shift and go to state 330

state 262

    (24) ClassType -> Name .
    (30) QualifiedName -> Name . DOT IDENTIFIER

    LPAREN          reduce using rule 24 (ClassType -> Name .)
    LBRACK          reduce using rule 24 (ClassType -> Name .)
    DOT             shift and go to state 103


state 263

    (217) ArrayAccess -> PrimaryNoNewArray LBRACK . Expression RBRACK
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    PrimaryNoNewArray              shift and go to state 201
    Expression                     shift and go to state 333
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 264

    (211) FieldAccess -> SUPER DOT . Name
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER

    IDENTIFIER      shift and go to state 63

    Name                           shift and go to state 334
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78

state 265

    (91) StaticInitializer -> begin_scope STATIC Block end_scope .

    RBRACE          reduce using rule 91 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    VOID            reduce using rule 91 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    STATIC          reduce using rule 91 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    FINAL           reduce using rule 91 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    PRIVATE         reduce using rule 91 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    PROTECTED       reduce using rule 91 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    PUBLIC          reduce using rule 91 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    IDENTIFIER      reduce using rule 91 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    BOOLEAN         reduce using rule 91 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    BYTE            reduce using rule 91 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    SHORT           reduce using rule 91 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    INT             reduce using rule 91 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    LONG            reduce using rule 91 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    CHAR            reduce using rule 91 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    FLOAT           reduce using rule 91 (StaticInitializer -> begin_scope STATIC Block end_scope .)
    DOUBLE          reduce using rule 91 (StaticInitializer -> begin_scope STATIC Block end_scope .)


state 266

    (72) VariableDeclarators -> VariableDeclarators COMMA VariableDeclarator .

    SEMI            reduce using rule 72 (VariableDeclarators -> VariableDeclarators COMMA VariableDeclarator .)
    COMMA           reduce using rule 72 (VariableDeclarators -> VariableDeclarators COMMA VariableDeclarator .)


state 267

    (84) MethodDeclarator -> IDENTIFIER LPAREN RPAREN .

    SEMI            reduce using rule 84 (MethodDeclarator -> IDENTIFIER LPAREN RPAREN .)
    LBRACE          reduce using rule 84 (MethodDeclarator -> IDENTIFIER LPAREN RPAREN .)


state 268

    (85) MethodDeclarator -> IDENTIFIER LPAREN FormalParameterList . RPAREN
    (87) FormalParameterList -> FormalParameterList . COMMA FormalParameter

    RPAREN          shift and go to state 335
    COMMA           shift and go to state 336


state 269

    (86) FormalParameterList -> FormalParameter .

    RPAREN          reduce using rule 86 (FormalParameterList -> FormalParameter .)
    COMMA           reduce using rule 86 (FormalParameterList -> FormalParameter .)


state 270

    (88) FormalParameter -> Type . VariableDeclaratorId
    (75) VariableDeclaratorId -> . IDENTIFIER
    (76) VariableDeclaratorId -> . IDENTIFIER Dims

    IDENTIFIER      shift and go to state 188

    VariableDeclaratorId           shift and go to state 337

state 271

    (74) VariableDeclarator -> VariableDeclaratorId ASSIGN VariableInitializer .

    SEMI            reduce using rule 74 (VariableDeclarator -> VariableDeclaratorId ASSIGN VariableInitializer .)
    COMMA           reduce using rule 74 (VariableDeclarator -> VariableDeclaratorId ASSIGN VariableInitializer .)


state 272

    (77) VariableInitializer -> Expression .

    SEMI            reduce using rule 77 (VariableInitializer -> Expression .)
    COMMA           reduce using rule 77 (VariableInitializer -> Expression .)
    RBRACE          reduce using rule 77 (VariableInitializer -> Expression .)


state 273

    (78) VariableInitializer -> ArrayInitializer .

    SEMI            reduce using rule 78 (VariableInitializer -> ArrayInitializer .)
    COMMA           reduce using rule 78 (VariableInitializer -> ArrayInitializer .)
    RBRACE          reduce using rule 78 (VariableInitializer -> ArrayInitializer .)


state 274

    (101) ArrayInitializer -> LBRACE . VariableInitializers RBRACE
    (102) ArrayInitializer -> LBRACE . RBRACE
    (103) VariableInitializers -> . VariableInitializer
    (104) VariableInitializers -> . VariableInitializers COMMA VariableInitializer
    (77) VariableInitializer -> . Expression
    (78) VariableInitializer -> . ArrayInitializer
    (288) Expression -> . AssignmentExpression
    (101) ArrayInitializer -> . LBRACE VariableInitializers RBRACE
    (102) ArrayInitializer -> . LBRACE RBRACE
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    RBRACE          shift and go to state 339
    LBRACE          shift and go to state 274
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    VariableInitializers           shift and go to state 338
    VariableInitializer            shift and go to state 340
    Expression                     shift and go to state 272
    ArrayInitializer               shift and go to state 273
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 275

    (106) Block -> LBRACE BlockStatements RBRACE .

    RBRACE          reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    VOID            reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    STATIC          reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    FINAL           reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    PRIVATE         reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    PROTECTED       reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    PUBLIC          reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    IDENTIFIER      reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    BOOLEAN         reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    BYTE            reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    SHORT           reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    INT             reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    LONG            reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    CHAR            reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    FLOAT           reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    DOUBLE          reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    IF              reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    WHILE           reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    FOR             reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    LBRACE          reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    SEMI            reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    SWITCH          reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    DO              reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    BREAK           reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    CONTINUE        reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    RETURN          reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    INC             reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    DEC             reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    NEW             reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    SUPER           reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    THIS            reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    LPAREN          reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    DECIMAL_LITERAL reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    HEX_LITERAL     reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    BINARY_LITERAL  reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    FLOAT_LITERAL   reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    BOOL_LITERAL    reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    CHAR_LITERAL    reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    STRING_LITERAL  reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    CASE            reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    DEFAULT         reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)
    ELSE            reduce using rule 106 (Block -> LBRACE BlockStatements RBRACE .)


state 276

    (94) ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList . RPAREN
    (87) FormalParameterList -> FormalParameterList . COMMA FormalParameter

    RPAREN          shift and go to state 341
    COMMA           shift and go to state 336


state 277

    (95) ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .

    LBRACE          reduce using rule 95 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    RBRACE          reduce using rule 95 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    VOID            reduce using rule 95 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    STATIC          reduce using rule 95 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    FINAL           reduce using rule 95 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    PRIVATE         reduce using rule 95 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    PROTECTED       reduce using rule 95 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    PUBLIC          reduce using rule 95 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    IDENTIFIER      reduce using rule 95 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    BOOLEAN         reduce using rule 95 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    BYTE            reduce using rule 95 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    SHORT           reduce using rule 95 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    INT             reduce using rule 95 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    LONG            reduce using rule 95 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    CHAR            reduce using rule 95 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    FLOAT           reduce using rule 95 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)
    DOUBLE          reduce using rule 95 (ConstructorDeclarator -> SimpleName decl_mark LPAREN RPAREN .)


state 278

    (209) Dims -> Dims LBRACK RBRACK .

    LBRACK          reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    IDENTIFIER      reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    ASSIGN          reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    SEMI            reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    COMMA           reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    RPAREN          reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    DOT             reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    INC             reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    DEC             reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    MUL             reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    DIV             reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    MOD             reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    ADD             reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    SUB             reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    LSHIFT          reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    RSHIFT          reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    URSHIFT         reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    LT              reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    GT              reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    LE              reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    GE              reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    EQUAL           reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    NOTEQUAL        reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    BITAND          reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    CARET           reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    BITOR           reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    AND             reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    QUESTION        reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    OR              reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    RBRACK          reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    RBRACE          reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)
    COLON           reduce using rule 209 (Dims -> Dims LBRACK RBRACK .)


state 279

    (133) LabeledStatement -> IDENTIFIER COLON Statement .

    RBRACE          reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    IDENTIFIER      reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    IF              reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    WHILE           reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    FOR             reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    LBRACE          reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    SEMI            reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    SWITCH          reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    DO              reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    BREAK           reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    CONTINUE        reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    RETURN          reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    BOOLEAN         reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    INC             reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    DEC             reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    NEW             reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    BYTE            reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    SHORT           reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    INT             reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    LONG            reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    CHAR            reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    FLOAT           reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    DOUBLE          reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    SUPER           reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    THIS            reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    LPAREN          reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    DECIMAL_LITERAL reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    HEX_LITERAL     reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    BINARY_LITERAL  reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    FLOAT_LITERAL   reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    BOOL_LITERAL    reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    CHAR_LITERAL    reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    STRING_LITERAL  reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    CASE            reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)
    DEFAULT         reduce using rule 133 (LabeledStatement -> IDENTIFIER COLON Statement .)


state 280

    (212) MethodInvocation -> Name . LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> Name . LPAREN RPAREN
    (273) LeftHandSide -> Name .
    (219) PostfixExpression -> Name .
    (216) ArrayAccess -> Name . LBRACK Expression RBRACK
    (30) QualifiedName -> Name . DOT IDENTIFIER

    LPAREN          shift and go to state 235
    ASSIGN          reduce using rule 273 (LeftHandSide -> Name .)
    ADD_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    SUB_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    MUL_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    DIV_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    AND_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    OR_ASSIGN       reduce using rule 273 (LeftHandSide -> Name .)
    XOR_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    MOD_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    LSHIFT_ASSIGN   reduce using rule 273 (LeftHandSide -> Name .)
    RSHIFT_ASSIGN   reduce using rule 273 (LeftHandSide -> Name .)
    URSHIFT_ASSIGN  reduce using rule 273 (LeftHandSide -> Name .)
    INC             reduce using rule 219 (PostfixExpression -> Name .)
    DEC             reduce using rule 219 (PostfixExpression -> Name .)
    LBRACK          shift and go to state 289
    DOT             shift and go to state 103


state 281

    (143) IfThenStatement -> IF begin_scope LPAREN . Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> IF begin_scope LPAREN . Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    Expression                     shift and go to state 342
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 282

    (192) PrimaryNoNewArray -> LPAREN Expression . RPAREN
    (237) CastExpression -> LPAREN Expression . RPAREN UnaryExpressionNotAddSub

    RPAREN          shift and go to state 343


state 283

    (235) CastExpression -> LPAREN PrimitiveType . Dims RPAREN UnaryExpression
    (236) CastExpression -> LPAREN PrimitiveType . RPAREN UnaryExpression
    (208) Dims -> . LBRACK RBRACK
    (209) Dims -> . Dims LBRACK RBRACK

    RPAREN          shift and go to state 345
    LBRACK          shift and go to state 99

    Dims                           shift and go to state 344

state 284

    (238) CastExpression -> LPAREN Name . Dims RPAREN UnaryExpressionNotAddSub
    (30) QualifiedName -> Name . DOT IDENTIFIER
    (273) LeftHandSide -> Name .
    (216) ArrayAccess -> Name . LBRACK Expression RBRACK
    (212) MethodInvocation -> Name . LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> Name . LPAREN RPAREN
    (219) PostfixExpression -> Name .
    (208) Dims -> . LBRACK RBRACK
    (209) Dims -> . Dims LBRACK RBRACK

    DOT             shift and go to state 103
    ASSIGN          reduce using rule 273 (LeftHandSide -> Name .)
    ADD_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    SUB_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    MUL_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    DIV_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    AND_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    OR_ASSIGN       reduce using rule 273 (LeftHandSide -> Name .)
    XOR_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    MOD_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    LSHIFT_ASSIGN   reduce using rule 273 (LeftHandSide -> Name .)
    RSHIFT_ASSIGN   reduce using rule 273 (LeftHandSide -> Name .)
    URSHIFT_ASSIGN  reduce using rule 273 (LeftHandSide -> Name .)
    LBRACK          shift and go to state 236
    LPAREN          shift and go to state 235
    INC             reduce using rule 219 (PostfixExpression -> Name .)
    DEC             reduce using rule 219 (PostfixExpression -> Name .)
    MUL             reduce using rule 219 (PostfixExpression -> Name .)
    DIV             reduce using rule 219 (PostfixExpression -> Name .)
    MOD             reduce using rule 219 (PostfixExpression -> Name .)
    ADD             reduce using rule 219 (PostfixExpression -> Name .)
    SUB             reduce using rule 219 (PostfixExpression -> Name .)
    LSHIFT          reduce using rule 219 (PostfixExpression -> Name .)
    RSHIFT          reduce using rule 219 (PostfixExpression -> Name .)
    URSHIFT         reduce using rule 219 (PostfixExpression -> Name .)
    LT              reduce using rule 219 (PostfixExpression -> Name .)
    GT              reduce using rule 219 (PostfixExpression -> Name .)
    LE              reduce using rule 219 (PostfixExpression -> Name .)
    GE              reduce using rule 219 (PostfixExpression -> Name .)
    EQUAL           reduce using rule 219 (PostfixExpression -> Name .)
    NOTEQUAL        reduce using rule 219 (PostfixExpression -> Name .)
    BITAND          reduce using rule 219 (PostfixExpression -> Name .)
    CARET           reduce using rule 219 (PostfixExpression -> Name .)
    BITOR           reduce using rule 219 (PostfixExpression -> Name .)
    AND             reduce using rule 219 (PostfixExpression -> Name .)
    QUESTION        reduce using rule 219 (PostfixExpression -> Name .)
    OR              reduce using rule 219 (PostfixExpression -> Name .)
    RPAREN          reduce using rule 219 (PostfixExpression -> Name .)

    Dims                           shift and go to state 346

state 285

    (192) PrimaryNoNewArray -> LPAREN Expression RPAREN .

    LBRACK          reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    DOT             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    INC             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    DEC             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)


state 286

    (269) ConditionalExpression -> ConditionalOrExpression QUESTION . Expression COLON ConditionalExpression
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    ConditionalOrExpression        shift and go to state 196
    Expression                     shift and go to state 347
    ConditionalExpression          shift and go to state 194
    AssignmentExpression           shift and go to state 193
    Assignment                     shift and go to state 195
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 287

    (267) ConditionalOrExpression -> ConditionalOrExpression OR . ConditionalAndExpression
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    ConditionalAndExpression       shift and go to state 348
    InclusiveOrExpression          shift and go to state 199
    ExclusiveOrExpression          shift and go to state 202
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 288

    (265) ConditionalAndExpression -> ConditionalAndExpression AND . InclusiveOrExpression
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    InclusiveOrExpression          shift and go to state 349
    ExclusiveOrExpression          shift and go to state 202
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 289

    (216) ArrayAccess -> Name LBRACK . Expression RBRACK
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    Name                           shift and go to state 198
    Expression                     shift and go to state 323
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 290

    (263) InclusiveOrExpression -> InclusiveOrExpression BITOR . ExclusiveOrExpression
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    ExclusiveOrExpression          shift and go to state 350
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 291

    (210) FieldAccess -> Primary DOT . Name
    (214) MethodInvocation -> Primary DOT . IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> Primary DOT . IDENTIFIER LPAREN RPAREN
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER

    IDENTIFIER      shift and go to state 326

    Name                           shift and go to state 327
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78

state 292

    (261) ExclusiveOrExpression -> ExclusiveOrExpression CARET . AndExpression
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    AndExpression                  shift and go to state 351
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 293

    (259) AndExpression -> AndExpression BITAND . EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    EqualityExpression             shift and go to state 352
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 294

    (203) ArrayCreationExpression -> NEW ClassType . DimExprs Dims
    (204) ArrayCreationExpression -> NEW ClassType . DimExprs
    (197) ClassInstanceCreationExpression -> NEW ClassType . LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> NEW ClassType . LPAREN ArgumentList RPAREN
    (205) DimExprs -> . DimExpr
    (206) DimExprs -> . DimExprs DimExpr
    (207) DimExpr -> . LBRACK Expression RBRACK

    LPAREN          shift and go to state 328
    LBRACK          shift and go to state 331

    DimExprs                       shift and go to state 329
    DimExpr                        shift and go to state 330

state 295

    (256) EqualityExpression -> EqualityExpression EQUAL . RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    RelationalExpression           shift and go to state 353
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 296

    (257) EqualityExpression -> EqualityExpression NOTEQUAL . RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    RelationalExpression           shift and go to state 354
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 297

    (251) RelationalExpression -> RelationalExpression LT . ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    ShiftExpression                shift and go to state 355
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 298

    (252) RelationalExpression -> RelationalExpression GT . ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    ShiftExpression                shift and go to state 356
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 299

    (253) RelationalExpression -> RelationalExpression LE . ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    ShiftExpression                shift and go to state 357
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 300

    (254) RelationalExpression -> RelationalExpression GE . ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    ShiftExpression                shift and go to state 358
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 301

    (247) ShiftExpression -> ShiftExpression LSHIFT . AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    AdditiveExpression             shift and go to state 359
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 302

    (248) ShiftExpression -> ShiftExpression RSHIFT . AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    AdditiveExpression             shift and go to state 360
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 303

    (249) ShiftExpression -> ShiftExpression URSHIFT . AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    AdditiveExpression             shift and go to state 361
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 304

    (244) AdditiveExpression -> AdditiveExpression ADD . MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    MultiplicativeExpression       shift and go to state 362
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 305

    (245) AdditiveExpression -> AdditiveExpression SUB . MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    MultiplicativeExpression       shift and go to state 363
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 306

    (240) MultiplicativeExpression -> MultiplicativeExpression MUL . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    UnaryExpression                shift and go to state 364
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 307

    (241) MultiplicativeExpression -> MultiplicativeExpression DIV . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    UnaryExpression                shift and go to state 365
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 308

    (242) MultiplicativeExpression -> MultiplicativeExpression MOD . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    UnaryExpression                shift and go to state 366
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 309

    (226) UnaryExpression -> ADD UnaryExpression .

    MUL             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    DIV             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    MOD             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    ADD             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    SUB             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    LSHIFT          reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    RSHIFT          reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    URSHIFT         reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    LT              reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    GT              reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    LE              reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    GE              reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    EQUAL           reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    NOTEQUAL        reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    BITAND          reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    CARET           reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    BITOR           reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    AND             reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    QUESTION        reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    OR              reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    RPAREN          reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    SEMI            reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    COMMA           reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    RBRACK          reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    RBRACE          reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)
    COLON           reduce using rule 226 (UnaryExpression -> ADD UnaryExpression .)


state 310

    (227) UnaryExpression -> SUB UnaryExpression .

    MUL             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    DIV             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    MOD             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    ADD             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    SUB             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    LSHIFT          reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    RSHIFT          reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    URSHIFT         reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    LT              reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    GT              reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    LE              reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    GE              reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    EQUAL           reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    NOTEQUAL        reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    BITAND          reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    CARET           reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    BITOR           reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    AND             reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    QUESTION        reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    OR              reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    RPAREN          reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    SEMI            reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    COMMA           reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    RBRACK          reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    RBRACE          reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)
    COLON           reduce using rule 227 (UnaryExpression -> SUB UnaryExpression .)


state 311

    (232) UnaryExpressionNotAddSub -> BANG UnaryExpression .

    MUL             reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    DIV             reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    MOD             reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    ADD             reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    SUB             reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    LSHIFT          reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    RSHIFT          reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    URSHIFT         reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    LT              reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    GT              reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    LE              reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    GE              reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    EQUAL           reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    NOTEQUAL        reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    BITAND          reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    CARET           reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    BITOR           reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    AND             reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    QUESTION        reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    OR              reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    RPAREN          reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    SEMI            reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    COMMA           reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    RBRACK          reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    RBRACE          reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)
    COLON           reduce using rule 232 (UnaryExpressionNotAddSub -> BANG UnaryExpression .)


state 312

    (233) UnaryExpressionNotAddSub -> TILDE UnaryExpression .

    MUL             reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    DIV             reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    MOD             reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    ADD             reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    SUB             reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    LSHIFT          reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    RSHIFT          reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    URSHIFT         reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    LT              reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    GT              reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    LE              reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    GE              reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    EQUAL           reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    NOTEQUAL        reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    BITAND          reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    CARET           reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    BITOR           reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    AND             reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    QUESTION        reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    OR              reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    RPAREN          reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    SEMI            reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    COMMA           reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    RBRACK          reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    RBRACE          reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)
    COLON           reduce using rule 233 (UnaryExpressionNotAddSub -> TILDE UnaryExpression .)


state 313

    (158) WhileStatement -> WHILE begin_scope LPAREN . Expression RPAREN Statement end_scope
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    Expression                     shift and go to state 367
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 314

    (161) ForStatement -> FOR begin_scope LPAREN . ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> FOR begin_scope LPAREN . SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> FOR begin_scope LPAREN . ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope LPAREN . ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> FOR begin_scope LPAREN . ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> FOR begin_scope LPAREN . SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> FOR begin_scope LPAREN . SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> FOR begin_scope LPAREN . SEMI SEMI RPAREN Statement end_scope
    (177) ForInit -> . StatementExpressionList
    (178) ForInit -> . LocalVariableDeclaration
    (180) StatementExpressionList -> . StatementExpression
    (181) StatementExpressionList -> . StatementExpressionList COMMA StatementExpression
    (112) LocalVariableDeclaration -> . Type VariableDeclarators
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    SEMI            shift and go to state 369
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    BOOLEAN         shift and go to state 65
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    BYTE            shift and go to state 71
    SHORT           shift and go to state 72
    INT             shift and go to state 73
    LONG            shift and go to state 74
    CHAR            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    ForInit                        shift and go to state 368
    StatementExpressionList        shift and go to state 370
    LocalVariableDeclaration       shift and go to state 371
    StatementExpression            shift and go to state 372
    Type                           shift and go to state 121
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    PrimitiveType                  shift and go to state 60
    ReferenceType                  shift and go to state 61
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 373
    Primary                        shift and go to state 153
    ClassType                      shift and go to state 67
    NumericType                    shift and go to state 64
    ArrayType                      shift and go to state 66
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    IntegralType                   shift and go to state 68
    FloatingPointType              shift and go to state 69
    Literal                        shift and go to state 161

state 315

    (146) SwitchStatement -> SWITCH LPAREN Expression . RPAREN SwitchBlock

    RPAREN          shift and go to state 374


state 316

    (160) DoStatement -> DO begin_scope Statement . WHILE LPAREN Expression RPAREN end_scope SEMI

    WHILE           shift and go to state 375


state 317

    (182) BreakStatement -> BREAK IDENTIFIER SEMI .

    RBRACE          reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    IDENTIFIER      reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    IF              reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    WHILE           reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    FOR             reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    LBRACE          reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    SEMI            reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    SWITCH          reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    DO              reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    BREAK           reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    CONTINUE        reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    RETURN          reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    BOOLEAN         reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    INC             reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    DEC             reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    NEW             reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    BYTE            reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    SHORT           reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    INT             reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    LONG            reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    CHAR            reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    FLOAT           reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    DOUBLE          reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    SUPER           reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    THIS            reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    LPAREN          reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    DECIMAL_LITERAL reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    HEX_LITERAL     reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    BINARY_LITERAL  reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    FLOAT_LITERAL   reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    BOOL_LITERAL    reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    CHAR_LITERAL    reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    STRING_LITERAL  reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    CASE            reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    DEFAULT         reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)
    ELSE            reduce using rule 182 (BreakStatement -> BREAK IDENTIFIER SEMI .)


state 318

    (184) ContinueStatement -> CONTINUE IDENTIFIER SEMI .

    RBRACE          reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    IDENTIFIER      reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    IF              reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    WHILE           reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    FOR             reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    LBRACE          reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    SEMI            reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    SWITCH          reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    DO              reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    BREAK           reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    CONTINUE        reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    RETURN          reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    BOOLEAN         reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    INC             reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    DEC             reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    NEW             reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    BYTE            reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    SHORT           reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    INT             reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    LONG            reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    CHAR            reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    FLOAT           reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    DOUBLE          reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    SUPER           reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    THIS            reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    LPAREN          reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    DECIMAL_LITERAL reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    HEX_LITERAL     reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    BINARY_LITERAL  reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    FLOAT_LITERAL   reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    BOOL_LITERAL    reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    CHAR_LITERAL    reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    STRING_LITERAL  reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    CASE            reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    DEFAULT         reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)
    ELSE            reduce using rule 184 (ContinueStatement -> CONTINUE IDENTIFIER SEMI .)


state 319

    (186) ReturnStatement -> RETURN Expression SEMI .

    RBRACE          reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    IDENTIFIER      reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    IF              reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    WHILE           reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    FOR             reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    LBRACE          reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    SEMI            reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    SWITCH          reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    DO              reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    BREAK           reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    CONTINUE        reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    RETURN          reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    BOOLEAN         reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    INC             reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    DEC             reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    NEW             reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    BYTE            reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    SHORT           reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    INT             reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    LONG            reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    CHAR            reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    FLOAT           reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    DOUBLE          reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    SUPER           reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    THIS            reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    LPAREN          reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    DECIMAL_LITERAL reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    HEX_LITERAL     reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    BINARY_LITERAL  reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    FLOAT_LITERAL   reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    BOOL_LITERAL    reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    CHAR_LITERAL    reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    STRING_LITERAL  reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    CASE            reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    DEFAULT         reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)
    ELSE            reduce using rule 186 (ReturnStatement -> RETURN Expression SEMI .)


state 320

    (212) MethodInvocation -> Name LPAREN ArgumentList . RPAREN
    (200) ArgumentList -> ArgumentList . COMMA Expression

    RPAREN          shift and go to state 376
    COMMA           shift and go to state 377


state 321

    (213) MethodInvocation -> Name LPAREN RPAREN .

    SEMI            reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    LBRACK          reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    DOT             reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    INC             reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    DEC             reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    MUL             reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    DIV             reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    MOD             reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    ADD             reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    SUB             reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    LSHIFT          reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    RSHIFT          reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    URSHIFT         reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    LT              reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    GT              reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    LE              reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    GE              reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    EQUAL           reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    BITAND          reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    CARET           reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    BITOR           reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    AND             reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    QUESTION        reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    OR              reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    RPAREN          reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    COMMA           reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    RBRACK          reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    RBRACE          reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)
    COLON           reduce using rule 213 (MethodInvocation -> Name LPAREN RPAREN .)


state 322

    (199) ArgumentList -> Expression .

    RPAREN          reduce using rule 199 (ArgumentList -> Expression .)
    COMMA           reduce using rule 199 (ArgumentList -> Expression .)


state 323

    (216) ArrayAccess -> Name LBRACK Expression . RBRACK

    RBRACK          shift and go to state 378


state 324

    (272) Assignment -> LeftHandSide AssignmentOperator AssignmentExpression .

    SEMI            reduce using rule 272 (Assignment -> LeftHandSide AssignmentOperator AssignmentExpression .)
    RPAREN          reduce using rule 272 (Assignment -> LeftHandSide AssignmentOperator AssignmentExpression .)
    COMMA           reduce using rule 272 (Assignment -> LeftHandSide AssignmentOperator AssignmentExpression .)
    RBRACK          reduce using rule 272 (Assignment -> LeftHandSide AssignmentOperator AssignmentExpression .)
    RBRACE          reduce using rule 272 (Assignment -> LeftHandSide AssignmentOperator AssignmentExpression .)
    COLON           reduce using rule 272 (Assignment -> LeftHandSide AssignmentOperator AssignmentExpression .)


state 325

    (237) CastExpression -> LPAREN Expression . RPAREN UnaryExpressionNotAddSub
    (192) PrimaryNoNewArray -> LPAREN Expression . RPAREN

    RPAREN          shift and go to state 379


state 326

    (214) MethodInvocation -> Primary DOT IDENTIFIER . LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> Primary DOT IDENTIFIER . LPAREN RPAREN
    (29) SimpleName -> IDENTIFIER .

    LPAREN          shift and go to state 380
    DOT             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    ASSIGN          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    ADD_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    SUB_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    MUL_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    AND_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    OR_ASSIGN       reduce using rule 29 (SimpleName -> IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 29 (SimpleName -> IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 29 (SimpleName -> IDENTIFIER .)
    URSHIFT_ASSIGN  reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LBRACK          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    INC             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DEC             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    MUL             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DIV             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    MOD             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    ADD             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    SUB             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LSHIFT          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    RSHIFT          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    URSHIFT         reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LT              reduce using rule 29 (SimpleName -> IDENTIFIER .)
    GT              reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LE              reduce using rule 29 (SimpleName -> IDENTIFIER .)
    GE              reduce using rule 29 (SimpleName -> IDENTIFIER .)
    EQUAL           reduce using rule 29 (SimpleName -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 29 (SimpleName -> IDENTIFIER .)
    BITAND          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    CARET           reduce using rule 29 (SimpleName -> IDENTIFIER .)
    BITOR           reduce using rule 29 (SimpleName -> IDENTIFIER .)
    AND             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    QUESTION        reduce using rule 29 (SimpleName -> IDENTIFIER .)
    OR              reduce using rule 29 (SimpleName -> IDENTIFIER .)
    RPAREN          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    SEMI            reduce using rule 29 (SimpleName -> IDENTIFIER .)
    COMMA           reduce using rule 29 (SimpleName -> IDENTIFIER .)
    RBRACK          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    RBRACE          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    COLON           reduce using rule 29 (SimpleName -> IDENTIFIER .)


state 327

    (210) FieldAccess -> Primary DOT Name .
    (30) QualifiedName -> Name . DOT IDENTIFIER

  ! shift/reduce conflict for DOT resolved as shift
    ASSIGN          reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    ADD_ASSIGN      reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    SUB_ASSIGN      reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    MUL_ASSIGN      reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    DIV_ASSIGN      reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    AND_ASSIGN      reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    OR_ASSIGN       reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    XOR_ASSIGN      reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    MOD_ASSIGN      reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    LSHIFT_ASSIGN   reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    RSHIFT_ASSIGN   reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    URSHIFT_ASSIGN  reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    LBRACK          reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    INC             reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    DEC             reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    MUL             reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    DIV             reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    MOD             reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    ADD             reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    SUB             reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    LSHIFT          reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    RSHIFT          reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    URSHIFT         reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    LT              reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    GT              reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    LE              reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    GE              reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    EQUAL           reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    NOTEQUAL        reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    BITAND          reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    CARET           reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    BITOR           reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    AND             reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    QUESTION        reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    OR              reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    RPAREN          reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    SEMI            reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    COMMA           reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    RBRACK          reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    RBRACE          reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    COLON           reduce using rule 210 (FieldAccess -> Primary DOT Name .)
    DOT             shift and go to state 103

  ! DOT             [ reduce using rule 210 (FieldAccess -> Primary DOT Name .) ]


state 328

    (197) ClassInstanceCreationExpression -> NEW ClassType LPAREN . RPAREN
    (198) ClassInstanceCreationExpression -> NEW ClassType LPAREN . ArgumentList RPAREN
    (199) ArgumentList -> . Expression
    (200) ArgumentList -> . ArgumentList COMMA Expression
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    RPAREN          shift and go to state 381
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    ArgumentList                   shift and go to state 382
    Expression                     shift and go to state 322
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 329

    (203) ArrayCreationExpression -> NEW ClassType DimExprs . Dims
    (204) ArrayCreationExpression -> NEW ClassType DimExprs .
    (206) DimExprs -> DimExprs . DimExpr
    (208) Dims -> . LBRACK RBRACK
    (209) Dims -> . Dims LBRACK RBRACK
    (207) DimExpr -> . LBRACK Expression RBRACK

    DOT             reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    INC             reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    DEC             reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    MUL             reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    DIV             reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    MOD             reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    ADD             reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    SUB             reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    LSHIFT          reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    RSHIFT          reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    URSHIFT         reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    LT              reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    GT              reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    LE              reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    GE              reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    EQUAL           reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    NOTEQUAL        reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    BITAND          reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    CARET           reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    BITOR           reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    AND             reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    QUESTION        reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    OR              reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    RPAREN          reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    SEMI            reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    COMMA           reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    RBRACK          reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    RBRACE          reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    COLON           reduce using rule 204 (ArrayCreationExpression -> NEW ClassType DimExprs .)
    LBRACK          shift and go to state 385

    Dims                           shift and go to state 383
    DimExpr                        shift and go to state 384

state 330

    (205) DimExprs -> DimExpr .

    LBRACK          reduce using rule 205 (DimExprs -> DimExpr .)
    DOT             reduce using rule 205 (DimExprs -> DimExpr .)
    INC             reduce using rule 205 (DimExprs -> DimExpr .)
    DEC             reduce using rule 205 (DimExprs -> DimExpr .)
    MUL             reduce using rule 205 (DimExprs -> DimExpr .)
    DIV             reduce using rule 205 (DimExprs -> DimExpr .)
    MOD             reduce using rule 205 (DimExprs -> DimExpr .)
    ADD             reduce using rule 205 (DimExprs -> DimExpr .)
    SUB             reduce using rule 205 (DimExprs -> DimExpr .)
    LSHIFT          reduce using rule 205 (DimExprs -> DimExpr .)
    RSHIFT          reduce using rule 205 (DimExprs -> DimExpr .)
    URSHIFT         reduce using rule 205 (DimExprs -> DimExpr .)
    LT              reduce using rule 205 (DimExprs -> DimExpr .)
    GT              reduce using rule 205 (DimExprs -> DimExpr .)
    LE              reduce using rule 205 (DimExprs -> DimExpr .)
    GE              reduce using rule 205 (DimExprs -> DimExpr .)
    EQUAL           reduce using rule 205 (DimExprs -> DimExpr .)
    NOTEQUAL        reduce using rule 205 (DimExprs -> DimExpr .)
    BITAND          reduce using rule 205 (DimExprs -> DimExpr .)
    CARET           reduce using rule 205 (DimExprs -> DimExpr .)
    BITOR           reduce using rule 205 (DimExprs -> DimExpr .)
    AND             reduce using rule 205 (DimExprs -> DimExpr .)
    QUESTION        reduce using rule 205 (DimExprs -> DimExpr .)
    OR              reduce using rule 205 (DimExprs -> DimExpr .)
    RPAREN          reduce using rule 205 (DimExprs -> DimExpr .)
    SEMI            reduce using rule 205 (DimExprs -> DimExpr .)
    COMMA           reduce using rule 205 (DimExprs -> DimExpr .)
    RBRACK          reduce using rule 205 (DimExprs -> DimExpr .)
    RBRACE          reduce using rule 205 (DimExprs -> DimExpr .)
    COLON           reduce using rule 205 (DimExprs -> DimExpr .)


state 331

    (207) DimExpr -> LBRACK . Expression RBRACK
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    Expression                     shift and go to state 386
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 332

    (201) ArrayCreationExpression -> NEW PrimitiveType DimExprs . Dims
    (202) ArrayCreationExpression -> NEW PrimitiveType DimExprs .
    (206) DimExprs -> DimExprs . DimExpr
    (208) Dims -> . LBRACK RBRACK
    (209) Dims -> . Dims LBRACK RBRACK
    (207) DimExpr -> . LBRACK Expression RBRACK

    DOT             reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    INC             reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    DEC             reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    MUL             reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    DIV             reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    MOD             reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    ADD             reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    SUB             reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    LSHIFT          reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    RSHIFT          reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    URSHIFT         reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    LT              reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    GT              reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    LE              reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    GE              reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    EQUAL           reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    NOTEQUAL        reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    BITAND          reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    CARET           reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    BITOR           reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    AND             reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    QUESTION        reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    OR              reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    RPAREN          reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    SEMI            reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    COMMA           reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    RBRACK          reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    RBRACE          reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    COLON           reduce using rule 202 (ArrayCreationExpression -> NEW PrimitiveType DimExprs .)
    LBRACK          shift and go to state 385

    Dims                           shift and go to state 387
    DimExpr                        shift and go to state 384

state 333

    (217) ArrayAccess -> PrimaryNoNewArray LBRACK Expression . RBRACK

    RBRACK          shift and go to state 388


state 334

    (211) FieldAccess -> SUPER DOT Name .
    (30) QualifiedName -> Name . DOT IDENTIFIER

  ! shift/reduce conflict for DOT resolved as shift
    ASSIGN          reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    ADD_ASSIGN      reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    SUB_ASSIGN      reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    MUL_ASSIGN      reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    DIV_ASSIGN      reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    AND_ASSIGN      reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    OR_ASSIGN       reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    XOR_ASSIGN      reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    MOD_ASSIGN      reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    LSHIFT_ASSIGN   reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    RSHIFT_ASSIGN   reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    URSHIFT_ASSIGN  reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    LBRACK          reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    INC             reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    DEC             reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    MUL             reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    DIV             reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    MOD             reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    ADD             reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    SUB             reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    LSHIFT          reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    RSHIFT          reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    URSHIFT         reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    LT              reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    GT              reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    LE              reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    GE              reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    EQUAL           reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    NOTEQUAL        reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    BITAND          reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    CARET           reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    BITOR           reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    AND             reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    QUESTION        reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    OR              reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    RPAREN          reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    SEMI            reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    COMMA           reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    RBRACK          reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    RBRACE          reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    COLON           reduce using rule 211 (FieldAccess -> SUPER DOT Name .)
    DOT             shift and go to state 103

  ! DOT             [ reduce using rule 211 (FieldAccess -> SUPER DOT Name .) ]


state 335

    (85) MethodDeclarator -> IDENTIFIER LPAREN FormalParameterList RPAREN .

    SEMI            reduce using rule 85 (MethodDeclarator -> IDENTIFIER LPAREN FormalParameterList RPAREN .)
    LBRACE          reduce using rule 85 (MethodDeclarator -> IDENTIFIER LPAREN FormalParameterList RPAREN .)


state 336

    (87) FormalParameterList -> FormalParameterList COMMA . FormalParameter
    (88) FormalParameter -> . Type VariableDeclaratorId
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER

    BOOLEAN         shift and go to state 65
    BYTE            shift and go to state 71
    SHORT           shift and go to state 72
    INT             shift and go to state 73
    LONG            shift and go to state 74
    CHAR            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    IDENTIFIER      shift and go to state 63

    FormalParameter                shift and go to state 389
    Type                           shift and go to state 270
    PrimitiveType                  shift and go to state 60
    ReferenceType                  shift and go to state 61
    NumericType                    shift and go to state 64
    ArrayType                      shift and go to state 66
    ClassType                      shift and go to state 67
    IntegralType                   shift and go to state 68
    FloatingPointType              shift and go to state 69
    Name                           shift and go to state 70
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78

state 337

    (88) FormalParameter -> Type VariableDeclaratorId .

    RPAREN          reduce using rule 88 (FormalParameter -> Type VariableDeclaratorId .)
    COMMA           reduce using rule 88 (FormalParameter -> Type VariableDeclaratorId .)


state 338

    (101) ArrayInitializer -> LBRACE VariableInitializers . RBRACE
    (104) VariableInitializers -> VariableInitializers . COMMA VariableInitializer

    RBRACE          shift and go to state 390
    COMMA           shift and go to state 391


state 339

    (102) ArrayInitializer -> LBRACE RBRACE .

    SEMI            reduce using rule 102 (ArrayInitializer -> LBRACE RBRACE .)
    COMMA           reduce using rule 102 (ArrayInitializer -> LBRACE RBRACE .)
    RBRACE          reduce using rule 102 (ArrayInitializer -> LBRACE RBRACE .)


state 340

    (103) VariableInitializers -> VariableInitializer .

    RBRACE          reduce using rule 103 (VariableInitializers -> VariableInitializer .)
    COMMA           reduce using rule 103 (VariableInitializers -> VariableInitializer .)


state 341

    (94) ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .

    LBRACE          reduce using rule 94 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    RBRACE          reduce using rule 94 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    VOID            reduce using rule 94 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    STATIC          reduce using rule 94 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    FINAL           reduce using rule 94 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    PRIVATE         reduce using rule 94 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    PROTECTED       reduce using rule 94 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    PUBLIC          reduce using rule 94 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    IDENTIFIER      reduce using rule 94 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    BOOLEAN         reduce using rule 94 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    BYTE            reduce using rule 94 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    SHORT           reduce using rule 94 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    INT             reduce using rule 94 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    LONG            reduce using rule 94 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    CHAR            reduce using rule 94 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    FLOAT           reduce using rule 94 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)
    DOUBLE          reduce using rule 94 (ConstructorDeclarator -> SimpleName LPAREN decl_mark FormalParameterList RPAREN .)


state 342

    (143) IfThenStatement -> IF begin_scope LPAREN Expression . RPAREN Statement end_scope
    (144) IfThenElseStatement -> IF begin_scope LPAREN Expression . RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope

    RPAREN          shift and go to state 392


state 343

    (192) PrimaryNoNewArray -> LPAREN Expression RPAREN .
    (237) CastExpression -> LPAREN Expression RPAREN . UnaryExpressionNotAddSub
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    LBRACK          reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    DOT             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    INC             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    DEC             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    MUL             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    DIV             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    ADD             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    SUB             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    LSHIFT          reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RSHIFT          reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    URSHIFT         reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    LT              reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    GT              reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    LE              reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    GE              reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    EQUAL           reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    NOTEQUAL        reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    BITAND          reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    CARET           reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    BITOR           reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    AND             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    QUESTION        reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    OR              reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    SEMI            reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RBRACE          reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    UnaryExpressionNotAddSub       shift and go to state 393
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 344

    (235) CastExpression -> LPAREN PrimitiveType Dims . RPAREN UnaryExpression
    (209) Dims -> Dims . LBRACK RBRACK

    RPAREN          shift and go to state 394
    LBRACK          shift and go to state 180


state 345

    (236) CastExpression -> LPAREN PrimitiveType RPAREN . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    UnaryExpression                shift and go to state 395
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 346

    (238) CastExpression -> LPAREN Name Dims . RPAREN UnaryExpressionNotAddSub
    (209) Dims -> Dims . LBRACK RBRACK

    RPAREN          shift and go to state 396
    LBRACK          shift and go to state 180


state 347

    (269) ConditionalExpression -> ConditionalOrExpression QUESTION Expression . COLON ConditionalExpression

    COLON           shift and go to state 397


state 348

    (267) ConditionalOrExpression -> ConditionalOrExpression OR ConditionalAndExpression .
    (265) ConditionalAndExpression -> ConditionalAndExpression . AND InclusiveOrExpression

    QUESTION        reduce using rule 267 (ConditionalOrExpression -> ConditionalOrExpression OR ConditionalAndExpression .)
    OR              reduce using rule 267 (ConditionalOrExpression -> ConditionalOrExpression OR ConditionalAndExpression .)
    RPAREN          reduce using rule 267 (ConditionalOrExpression -> ConditionalOrExpression OR ConditionalAndExpression .)
    SEMI            reduce using rule 267 (ConditionalOrExpression -> ConditionalOrExpression OR ConditionalAndExpression .)
    COMMA           reduce using rule 267 (ConditionalOrExpression -> ConditionalOrExpression OR ConditionalAndExpression .)
    RBRACK          reduce using rule 267 (ConditionalOrExpression -> ConditionalOrExpression OR ConditionalAndExpression .)
    RBRACE          reduce using rule 267 (ConditionalOrExpression -> ConditionalOrExpression OR ConditionalAndExpression .)
    COLON           reduce using rule 267 (ConditionalOrExpression -> ConditionalOrExpression OR ConditionalAndExpression .)
    AND             shift and go to state 288


state 349

    (265) ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression .
    (263) InclusiveOrExpression -> InclusiveOrExpression . BITOR ExclusiveOrExpression

    AND             reduce using rule 265 (ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression .)
    QUESTION        reduce using rule 265 (ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression .)
    OR              reduce using rule 265 (ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression .)
    RPAREN          reduce using rule 265 (ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression .)
    SEMI            reduce using rule 265 (ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression .)
    COMMA           reduce using rule 265 (ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression .)
    RBRACK          reduce using rule 265 (ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression .)
    RBRACE          reduce using rule 265 (ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression .)
    COLON           reduce using rule 265 (ConditionalAndExpression -> ConditionalAndExpression AND InclusiveOrExpression .)
    BITOR           shift and go to state 290


state 350

    (263) InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .
    (261) ExclusiveOrExpression -> ExclusiveOrExpression . CARET AndExpression

    BITOR           reduce using rule 263 (InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .)
    AND             reduce using rule 263 (InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .)
    QUESTION        reduce using rule 263 (InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .)
    OR              reduce using rule 263 (InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .)
    RPAREN          reduce using rule 263 (InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .)
    SEMI            reduce using rule 263 (InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .)
    COMMA           reduce using rule 263 (InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .)
    RBRACK          reduce using rule 263 (InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .)
    RBRACE          reduce using rule 263 (InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .)
    COLON           reduce using rule 263 (InclusiveOrExpression -> InclusiveOrExpression BITOR ExclusiveOrExpression .)
    CARET           shift and go to state 292


state 351

    (261) ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .
    (259) AndExpression -> AndExpression . BITAND EqualityExpression

    CARET           reduce using rule 261 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    BITOR           reduce using rule 261 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    AND             reduce using rule 261 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    QUESTION        reduce using rule 261 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    OR              reduce using rule 261 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    RPAREN          reduce using rule 261 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    SEMI            reduce using rule 261 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    COMMA           reduce using rule 261 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    RBRACK          reduce using rule 261 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    RBRACE          reduce using rule 261 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    COLON           reduce using rule 261 (ExclusiveOrExpression -> ExclusiveOrExpression CARET AndExpression .)
    BITAND          shift and go to state 293


state 352

    (259) AndExpression -> AndExpression BITAND EqualityExpression .
    (256) EqualityExpression -> EqualityExpression . EQUAL RelationalExpression
    (257) EqualityExpression -> EqualityExpression . NOTEQUAL RelationalExpression

    BITAND          reduce using rule 259 (AndExpression -> AndExpression BITAND EqualityExpression .)
    CARET           reduce using rule 259 (AndExpression -> AndExpression BITAND EqualityExpression .)
    BITOR           reduce using rule 259 (AndExpression -> AndExpression BITAND EqualityExpression .)
    AND             reduce using rule 259 (AndExpression -> AndExpression BITAND EqualityExpression .)
    QUESTION        reduce using rule 259 (AndExpression -> AndExpression BITAND EqualityExpression .)
    OR              reduce using rule 259 (AndExpression -> AndExpression BITAND EqualityExpression .)
    RPAREN          reduce using rule 259 (AndExpression -> AndExpression BITAND EqualityExpression .)
    SEMI            reduce using rule 259 (AndExpression -> AndExpression BITAND EqualityExpression .)
    COMMA           reduce using rule 259 (AndExpression -> AndExpression BITAND EqualityExpression .)
    RBRACK          reduce using rule 259 (AndExpression -> AndExpression BITAND EqualityExpression .)
    RBRACE          reduce using rule 259 (AndExpression -> AndExpression BITAND EqualityExpression .)
    COLON           reduce using rule 259 (AndExpression -> AndExpression BITAND EqualityExpression .)
    EQUAL           shift and go to state 295
    NOTEQUAL        shift and go to state 296


state 353

    (256) EqualityExpression -> EqualityExpression EQUAL RelationalExpression .
    (251) RelationalExpression -> RelationalExpression . LT ShiftExpression
    (252) RelationalExpression -> RelationalExpression . GT ShiftExpression
    (253) RelationalExpression -> RelationalExpression . LE ShiftExpression
    (254) RelationalExpression -> RelationalExpression . GE ShiftExpression

    EQUAL           reduce using rule 256 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    NOTEQUAL        reduce using rule 256 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    BITAND          reduce using rule 256 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    CARET           reduce using rule 256 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    BITOR           reduce using rule 256 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    AND             reduce using rule 256 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    QUESTION        reduce using rule 256 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    OR              reduce using rule 256 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    RPAREN          reduce using rule 256 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    SEMI            reduce using rule 256 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    COMMA           reduce using rule 256 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    RBRACK          reduce using rule 256 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    RBRACE          reduce using rule 256 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    COLON           reduce using rule 256 (EqualityExpression -> EqualityExpression EQUAL RelationalExpression .)
    LT              shift and go to state 297
    GT              shift and go to state 298
    LE              shift and go to state 299
    GE              shift and go to state 300


state 354

    (257) EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .
    (251) RelationalExpression -> RelationalExpression . LT ShiftExpression
    (252) RelationalExpression -> RelationalExpression . GT ShiftExpression
    (253) RelationalExpression -> RelationalExpression . LE ShiftExpression
    (254) RelationalExpression -> RelationalExpression . GE ShiftExpression

    EQUAL           reduce using rule 257 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    NOTEQUAL        reduce using rule 257 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    BITAND          reduce using rule 257 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    CARET           reduce using rule 257 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    BITOR           reduce using rule 257 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    AND             reduce using rule 257 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    QUESTION        reduce using rule 257 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    OR              reduce using rule 257 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    RPAREN          reduce using rule 257 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    SEMI            reduce using rule 257 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    COMMA           reduce using rule 257 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    RBRACK          reduce using rule 257 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    RBRACE          reduce using rule 257 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    COLON           reduce using rule 257 (EqualityExpression -> EqualityExpression NOTEQUAL RelationalExpression .)
    LT              shift and go to state 297
    GT              shift and go to state 298
    LE              shift and go to state 299
    GE              shift and go to state 300


state 355

    (251) RelationalExpression -> RelationalExpression LT ShiftExpression .
    (247) ShiftExpression -> ShiftExpression . LSHIFT AdditiveExpression
    (248) ShiftExpression -> ShiftExpression . RSHIFT AdditiveExpression
    (249) ShiftExpression -> ShiftExpression . URSHIFT AdditiveExpression

    LT              reduce using rule 251 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    GT              reduce using rule 251 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    LE              reduce using rule 251 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    GE              reduce using rule 251 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    EQUAL           reduce using rule 251 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    NOTEQUAL        reduce using rule 251 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    BITAND          reduce using rule 251 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    CARET           reduce using rule 251 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    BITOR           reduce using rule 251 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    AND             reduce using rule 251 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    QUESTION        reduce using rule 251 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    OR              reduce using rule 251 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    RPAREN          reduce using rule 251 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    SEMI            reduce using rule 251 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    COMMA           reduce using rule 251 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    RBRACK          reduce using rule 251 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    RBRACE          reduce using rule 251 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    COLON           reduce using rule 251 (RelationalExpression -> RelationalExpression LT ShiftExpression .)
    LSHIFT          shift and go to state 301
    RSHIFT          shift and go to state 302
    URSHIFT         shift and go to state 303


state 356

    (252) RelationalExpression -> RelationalExpression GT ShiftExpression .
    (247) ShiftExpression -> ShiftExpression . LSHIFT AdditiveExpression
    (248) ShiftExpression -> ShiftExpression . RSHIFT AdditiveExpression
    (249) ShiftExpression -> ShiftExpression . URSHIFT AdditiveExpression

    LT              reduce using rule 252 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    GT              reduce using rule 252 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    LE              reduce using rule 252 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    GE              reduce using rule 252 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    EQUAL           reduce using rule 252 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    NOTEQUAL        reduce using rule 252 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    BITAND          reduce using rule 252 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    CARET           reduce using rule 252 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    BITOR           reduce using rule 252 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    AND             reduce using rule 252 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    QUESTION        reduce using rule 252 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    OR              reduce using rule 252 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    RPAREN          reduce using rule 252 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    SEMI            reduce using rule 252 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    COMMA           reduce using rule 252 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    RBRACK          reduce using rule 252 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    RBRACE          reduce using rule 252 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    COLON           reduce using rule 252 (RelationalExpression -> RelationalExpression GT ShiftExpression .)
    LSHIFT          shift and go to state 301
    RSHIFT          shift and go to state 302
    URSHIFT         shift and go to state 303


state 357

    (253) RelationalExpression -> RelationalExpression LE ShiftExpression .
    (247) ShiftExpression -> ShiftExpression . LSHIFT AdditiveExpression
    (248) ShiftExpression -> ShiftExpression . RSHIFT AdditiveExpression
    (249) ShiftExpression -> ShiftExpression . URSHIFT AdditiveExpression

    LT              reduce using rule 253 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    GT              reduce using rule 253 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    LE              reduce using rule 253 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    GE              reduce using rule 253 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    EQUAL           reduce using rule 253 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    NOTEQUAL        reduce using rule 253 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    BITAND          reduce using rule 253 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    CARET           reduce using rule 253 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    BITOR           reduce using rule 253 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    AND             reduce using rule 253 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    QUESTION        reduce using rule 253 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    OR              reduce using rule 253 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    RPAREN          reduce using rule 253 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    SEMI            reduce using rule 253 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    COMMA           reduce using rule 253 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    RBRACK          reduce using rule 253 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    RBRACE          reduce using rule 253 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    COLON           reduce using rule 253 (RelationalExpression -> RelationalExpression LE ShiftExpression .)
    LSHIFT          shift and go to state 301
    RSHIFT          shift and go to state 302
    URSHIFT         shift and go to state 303


state 358

    (254) RelationalExpression -> RelationalExpression GE ShiftExpression .
    (247) ShiftExpression -> ShiftExpression . LSHIFT AdditiveExpression
    (248) ShiftExpression -> ShiftExpression . RSHIFT AdditiveExpression
    (249) ShiftExpression -> ShiftExpression . URSHIFT AdditiveExpression

    LT              reduce using rule 254 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    GT              reduce using rule 254 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    LE              reduce using rule 254 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    GE              reduce using rule 254 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    EQUAL           reduce using rule 254 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    NOTEQUAL        reduce using rule 254 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    BITAND          reduce using rule 254 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    CARET           reduce using rule 254 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    BITOR           reduce using rule 254 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    AND             reduce using rule 254 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    QUESTION        reduce using rule 254 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    OR              reduce using rule 254 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    RPAREN          reduce using rule 254 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    SEMI            reduce using rule 254 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    COMMA           reduce using rule 254 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    RBRACK          reduce using rule 254 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    RBRACE          reduce using rule 254 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    COLON           reduce using rule 254 (RelationalExpression -> RelationalExpression GE ShiftExpression .)
    LSHIFT          shift and go to state 301
    RSHIFT          shift and go to state 302
    URSHIFT         shift and go to state 303


state 359

    (247) ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .
    (244) AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression
    (245) AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression

    LSHIFT          reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    RSHIFT          reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    URSHIFT         reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    LT              reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    GT              reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    LE              reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    GE              reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    EQUAL           reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    NOTEQUAL        reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    BITAND          reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    CARET           reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    BITOR           reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    AND             reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    QUESTION        reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    OR              reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    RPAREN          reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    SEMI            reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    COMMA           reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    RBRACK          reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    RBRACE          reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    COLON           reduce using rule 247 (ShiftExpression -> ShiftExpression LSHIFT AdditiveExpression .)
    ADD             shift and go to state 304
    SUB             shift and go to state 305


state 360

    (248) ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .
    (244) AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression
    (245) AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression

    LSHIFT          reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    RSHIFT          reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    URSHIFT         reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    LT              reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    GT              reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    LE              reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    GE              reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    EQUAL           reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    NOTEQUAL        reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    BITAND          reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    CARET           reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    BITOR           reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    AND             reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    QUESTION        reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    OR              reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    RPAREN          reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    SEMI            reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    COMMA           reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    RBRACK          reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    RBRACE          reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    COLON           reduce using rule 248 (ShiftExpression -> ShiftExpression RSHIFT AdditiveExpression .)
    ADD             shift and go to state 304
    SUB             shift and go to state 305


state 361

    (249) ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .
    (244) AdditiveExpression -> AdditiveExpression . ADD MultiplicativeExpression
    (245) AdditiveExpression -> AdditiveExpression . SUB MultiplicativeExpression

    LSHIFT          reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    RSHIFT          reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    URSHIFT         reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    LT              reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    GT              reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    LE              reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    GE              reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    EQUAL           reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    NOTEQUAL        reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    BITAND          reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    CARET           reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    BITOR           reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    AND             reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    QUESTION        reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    OR              reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    RPAREN          reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    SEMI            reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    COMMA           reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    RBRACK          reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    RBRACE          reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    COLON           reduce using rule 249 (ShiftExpression -> ShiftExpression URSHIFT AdditiveExpression .)
    ADD             shift and go to state 304
    SUB             shift and go to state 305


state 362

    (244) AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .
    (240) MultiplicativeExpression -> MultiplicativeExpression . MUL UnaryExpression
    (241) MultiplicativeExpression -> MultiplicativeExpression . DIV UnaryExpression
    (242) MultiplicativeExpression -> MultiplicativeExpression . MOD UnaryExpression

    ADD             reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    SUB             reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    LSHIFT          reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    RSHIFT          reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    URSHIFT         reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    LT              reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    GT              reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    LE              reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    GE              reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    EQUAL           reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    NOTEQUAL        reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    BITAND          reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    CARET           reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    BITOR           reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    AND             reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    QUESTION        reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    OR              reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    RPAREN          reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    SEMI            reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    COMMA           reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    RBRACK          reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    RBRACE          reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    COLON           reduce using rule 244 (AdditiveExpression -> AdditiveExpression ADD MultiplicativeExpression .)
    MUL             shift and go to state 306
    DIV             shift and go to state 307
    MOD             shift and go to state 308


state 363

    (245) AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .
    (240) MultiplicativeExpression -> MultiplicativeExpression . MUL UnaryExpression
    (241) MultiplicativeExpression -> MultiplicativeExpression . DIV UnaryExpression
    (242) MultiplicativeExpression -> MultiplicativeExpression . MOD UnaryExpression

    ADD             reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    SUB             reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    LSHIFT          reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    RSHIFT          reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    URSHIFT         reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    LT              reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    GT              reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    LE              reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    GE              reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    EQUAL           reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    NOTEQUAL        reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    BITAND          reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    CARET           reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    BITOR           reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    AND             reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    QUESTION        reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    OR              reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    RPAREN          reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    SEMI            reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    COMMA           reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    RBRACK          reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    RBRACE          reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    COLON           reduce using rule 245 (AdditiveExpression -> AdditiveExpression SUB MultiplicativeExpression .)
    MUL             shift and go to state 306
    DIV             shift and go to state 307
    MOD             shift and go to state 308


state 364

    (240) MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .

    MUL             reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    DIV             reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    MOD             reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    ADD             reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    SUB             reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    LSHIFT          reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    RSHIFT          reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    URSHIFT         reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    LT              reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    GT              reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    LE              reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    GE              reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    EQUAL           reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    NOTEQUAL        reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    BITAND          reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    CARET           reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    BITOR           reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    AND             reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    QUESTION        reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    OR              reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    RPAREN          reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    SEMI            reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    COMMA           reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    RBRACK          reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    RBRACE          reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)
    COLON           reduce using rule 240 (MultiplicativeExpression -> MultiplicativeExpression MUL UnaryExpression .)


state 365

    (241) MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .

    MUL             reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    DIV             reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    MOD             reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    ADD             reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    SUB             reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    LSHIFT          reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    RSHIFT          reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    URSHIFT         reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    LT              reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    GT              reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    LE              reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    GE              reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    EQUAL           reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    NOTEQUAL        reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    BITAND          reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    CARET           reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    BITOR           reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    AND             reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    QUESTION        reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    OR              reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    RPAREN          reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    SEMI            reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    COMMA           reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    RBRACK          reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    RBRACE          reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)
    COLON           reduce using rule 241 (MultiplicativeExpression -> MultiplicativeExpression DIV UnaryExpression .)


state 366

    (242) MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .

    MUL             reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    DIV             reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    MOD             reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    ADD             reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    SUB             reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    LSHIFT          reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    RSHIFT          reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    URSHIFT         reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    LT              reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    GT              reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    LE              reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    GE              reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    EQUAL           reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    NOTEQUAL        reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    BITAND          reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    CARET           reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    BITOR           reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    AND             reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    QUESTION        reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    OR              reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    RPAREN          reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    SEMI            reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    COMMA           reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    RBRACK          reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    RBRACE          reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)
    COLON           reduce using rule 242 (MultiplicativeExpression -> MultiplicativeExpression MOD UnaryExpression .)


state 367

    (158) WhileStatement -> WHILE begin_scope LPAREN Expression . RPAREN Statement end_scope

    RPAREN          shift and go to state 398


state 368

    (161) ForStatement -> FOR begin_scope LPAREN ForInit . SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> FOR begin_scope LPAREN ForInit . SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope LPAREN ForInit . SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> FOR begin_scope LPAREN ForInit . SEMI SEMI RPAREN Statement end_scope

    SEMI            shift and go to state 399


state 369

    (162) ForStatement -> FOR begin_scope LPAREN SEMI . Expression SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> FOR begin_scope LPAREN SEMI . Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> FOR begin_scope LPAREN SEMI . SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> FOR begin_scope LPAREN SEMI . SEMI RPAREN Statement end_scope
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    SEMI            shift and go to state 400
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    Expression                     shift and go to state 401
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 370

    (177) ForInit -> StatementExpressionList .
    (181) StatementExpressionList -> StatementExpressionList . COMMA StatementExpression

    SEMI            reduce using rule 177 (ForInit -> StatementExpressionList .)
    COMMA           shift and go to state 402


state 371

    (178) ForInit -> LocalVariableDeclaration .

    SEMI            reduce using rule 178 (ForInit -> LocalVariableDeclaration .)


state 372

    (180) StatementExpressionList -> StatementExpression .

    COMMA           reduce using rule 180 (StatementExpressionList -> StatementExpression .)
    SEMI            reduce using rule 180 (StatementExpressionList -> StatementExpression .)
    RPAREN          reduce using rule 180 (StatementExpressionList -> StatementExpression .)


state 373

    (212) MethodInvocation -> Name . LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> Name . LPAREN RPAREN
    (273) LeftHandSide -> Name .
    (219) PostfixExpression -> Name .
    (26) ArrayType -> Name . Dims
    (24) ClassType -> Name .
    (216) ArrayAccess -> Name . LBRACK Expression RBRACK
    (30) QualifiedName -> Name . DOT IDENTIFIER
    (208) Dims -> . LBRACK RBRACK
    (209) Dims -> . Dims LBRACK RBRACK

    LPAREN          shift and go to state 235
    ASSIGN          reduce using rule 273 (LeftHandSide -> Name .)
    ADD_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    SUB_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    MUL_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    DIV_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    AND_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    OR_ASSIGN       reduce using rule 273 (LeftHandSide -> Name .)
    XOR_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    MOD_ASSIGN      reduce using rule 273 (LeftHandSide -> Name .)
    LSHIFT_ASSIGN   reduce using rule 273 (LeftHandSide -> Name .)
    RSHIFT_ASSIGN   reduce using rule 273 (LeftHandSide -> Name .)
    URSHIFT_ASSIGN  reduce using rule 273 (LeftHandSide -> Name .)
    INC             reduce using rule 219 (PostfixExpression -> Name .)
    DEC             reduce using rule 219 (PostfixExpression -> Name .)
    IDENTIFIER      reduce using rule 24 (ClassType -> Name .)
    LBRACK          shift and go to state 236
    DOT             shift and go to state 103

    Dims                           shift and go to state 102

state 374

    (146) SwitchStatement -> SWITCH LPAREN Expression RPAREN . SwitchBlock
    (147) SwitchBlock -> . LBRACE RBRACE
    (148) SwitchBlock -> . LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE
    (149) SwitchBlock -> . LBRACE SwitchBlockStatementGroups RBRACE
    (150) SwitchBlock -> . LBRACE begin_scope SwitchLabels end_scope RBRACE

    LBRACE          shift and go to state 404

    SwitchBlock                    shift and go to state 403

state 375

    (160) DoStatement -> DO begin_scope Statement WHILE . LPAREN Expression RPAREN end_scope SEMI

    LPAREN          shift and go to state 405


state 376

    (212) MethodInvocation -> Name LPAREN ArgumentList RPAREN .

    SEMI            reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    LBRACK          reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    DOT             reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    INC             reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    DEC             reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    MUL             reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    DIV             reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    MOD             reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    ADD             reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    SUB             reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    LSHIFT          reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    RSHIFT          reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    URSHIFT         reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    LT              reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    GT              reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    LE              reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    GE              reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    EQUAL           reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    NOTEQUAL        reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    BITAND          reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    CARET           reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    BITOR           reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    AND             reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    QUESTION        reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    OR              reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    RPAREN          reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    COMMA           reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    RBRACK          reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    RBRACE          reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)
    COLON           reduce using rule 212 (MethodInvocation -> Name LPAREN ArgumentList RPAREN .)


state 377

    (200) ArgumentList -> ArgumentList COMMA . Expression
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    Expression                     shift and go to state 406
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 378

    (216) ArrayAccess -> Name LBRACK Expression RBRACK .

    ASSIGN          reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    DIV_ASSIGN      reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    AND_ASSIGN      reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    OR_ASSIGN       reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    MOD_ASSIGN      reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    LSHIFT_ASSIGN   reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    RSHIFT_ASSIGN   reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    URSHIFT_ASSIGN  reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    LBRACK          reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    DOT             reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    INC             reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    DEC             reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    MUL             reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    DIV             reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    MOD             reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    ADD             reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    SUB             reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    LSHIFT          reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    RSHIFT          reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    URSHIFT         reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    LT              reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    GT              reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    LE              reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    GE              reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    EQUAL           reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    NOTEQUAL        reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    BITAND          reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    CARET           reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    BITOR           reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    AND             reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    QUESTION        reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    OR              reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    SEMI            reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    COMMA           reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    RBRACE          reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)
    COLON           reduce using rule 216 (ArrayAccess -> Name LBRACK Expression RBRACK .)


state 379

    (237) CastExpression -> LPAREN Expression RPAREN . UnaryExpressionNotAddSub
    (192) PrimaryNoNewArray -> LPAREN Expression RPAREN .
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    LBRACK          reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    DOT             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    INC             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    DEC             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    SEMI            reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    MUL             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    DIV             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    ADD             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    SUB             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    LSHIFT          reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RSHIFT          reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    URSHIFT         reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    LT              reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    GT              reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    LE              reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    GE              reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    EQUAL           reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    NOTEQUAL        reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    BITAND          reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    CARET           reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    BITOR           reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    AND             reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    QUESTION        reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    OR              reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RBRACK          reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    RBRACE          reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 192 (PrimaryNoNewArray -> LPAREN Expression RPAREN .)
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    UnaryExpressionNotAddSub       shift and go to state 393
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 380

    (214) MethodInvocation -> Primary DOT IDENTIFIER LPAREN . ArgumentList RPAREN
    (215) MethodInvocation -> Primary DOT IDENTIFIER LPAREN . RPAREN
    (199) ArgumentList -> . Expression
    (200) ArgumentList -> . ArgumentList COMMA Expression
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    RPAREN          shift and go to state 408
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    Primary                        shift and go to state 200
    ArgumentList                   shift and go to state 407
    Expression                     shift and go to state 322
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 381

    (197) ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .

    SEMI            reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    LBRACK          reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    DOT             reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    INC             reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    DEC             reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    MUL             reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    DIV             reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    MOD             reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    ADD             reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    SUB             reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    LSHIFT          reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    RSHIFT          reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    URSHIFT         reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    LT              reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    GT              reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    LE              reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    GE              reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    EQUAL           reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    BITAND          reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    CARET           reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    BITOR           reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    AND             reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    QUESTION        reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    OR              reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    RPAREN          reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    COMMA           reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    RBRACK          reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    RBRACE          reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)
    COLON           reduce using rule 197 (ClassInstanceCreationExpression -> NEW ClassType LPAREN RPAREN .)


state 382

    (198) ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList . RPAREN
    (200) ArgumentList -> ArgumentList . COMMA Expression

    RPAREN          shift and go to state 409
    COMMA           shift and go to state 377


state 383

    (203) ArrayCreationExpression -> NEW ClassType DimExprs Dims .
    (209) Dims -> Dims . LBRACK RBRACK

    DOT             reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    INC             reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    DEC             reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    MUL             reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    DIV             reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    MOD             reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    ADD             reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    SUB             reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    LSHIFT          reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    RSHIFT          reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    URSHIFT         reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    LT              reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    GT              reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    LE              reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    GE              reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    EQUAL           reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    NOTEQUAL        reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    BITAND          reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    CARET           reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    BITOR           reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    AND             reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    QUESTION        reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    OR              reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    RPAREN          reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    SEMI            reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    COMMA           reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    RBRACK          reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    RBRACE          reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    COLON           reduce using rule 203 (ArrayCreationExpression -> NEW ClassType DimExprs Dims .)
    LBRACK          shift and go to state 180


state 384

    (206) DimExprs -> DimExprs DimExpr .

    LBRACK          reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    DOT             reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    INC             reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    DEC             reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    MUL             reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    DIV             reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    MOD             reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    ADD             reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    SUB             reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    LSHIFT          reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    RSHIFT          reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    URSHIFT         reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    LT              reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    GT              reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    LE              reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    GE              reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    EQUAL           reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    NOTEQUAL        reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    BITAND          reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    CARET           reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    BITOR           reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    AND             reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    QUESTION        reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    OR              reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    RPAREN          reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    SEMI            reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    COMMA           reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    RBRACK          reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    RBRACE          reduce using rule 206 (DimExprs -> DimExprs DimExpr .)
    COLON           reduce using rule 206 (DimExprs -> DimExprs DimExpr .)


state 385

    (208) Dims -> LBRACK . RBRACK
    (207) DimExpr -> LBRACK . Expression RBRACK
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    RBRACK          shift and go to state 181
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    Expression                     shift and go to state 386
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 386

    (207) DimExpr -> LBRACK Expression . RBRACK

    RBRACK          shift and go to state 410


state 387

    (201) ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .
    (209) Dims -> Dims . LBRACK RBRACK

    DOT             reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    INC             reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    DEC             reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    MUL             reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    DIV             reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    MOD             reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    ADD             reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    SUB             reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    LSHIFT          reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    RSHIFT          reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    URSHIFT         reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    LT              reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    GT              reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    LE              reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    GE              reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    EQUAL           reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    NOTEQUAL        reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    BITAND          reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    CARET           reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    BITOR           reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    AND             reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    QUESTION        reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    OR              reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    RPAREN          reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    SEMI            reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    COMMA           reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    RBRACK          reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    RBRACE          reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    COLON           reduce using rule 201 (ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims .)
    LBRACK          shift and go to state 180


state 388

    (217) ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .

    ASSIGN          reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    ADD_ASSIGN      reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SUB_ASSIGN      reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    MUL_ASSIGN      reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    DIV_ASSIGN      reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    AND_ASSIGN      reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    OR_ASSIGN       reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    XOR_ASSIGN      reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    MOD_ASSIGN      reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    LSHIFT_ASSIGN   reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    RSHIFT_ASSIGN   reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    URSHIFT_ASSIGN  reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    LBRACK          reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    DOT             reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    INC             reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    DEC             reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    MUL             reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    DIV             reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    MOD             reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    ADD             reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SUB             reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    LSHIFT          reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    RSHIFT          reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    URSHIFT         reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    LT              reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    GT              reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    LE              reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    GE              reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    EQUAL           reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    NOTEQUAL        reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    BITAND          reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    CARET           reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    BITOR           reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    AND             reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    QUESTION        reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    OR              reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    SEMI            reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    COMMA           reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    RBRACE          reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)
    COLON           reduce using rule 217 (ArrayAccess -> PrimaryNoNewArray LBRACK Expression RBRACK .)


state 389

    (87) FormalParameterList -> FormalParameterList COMMA FormalParameter .

    RPAREN          reduce using rule 87 (FormalParameterList -> FormalParameterList COMMA FormalParameter .)
    COMMA           reduce using rule 87 (FormalParameterList -> FormalParameterList COMMA FormalParameter .)


state 390

    (101) ArrayInitializer -> LBRACE VariableInitializers RBRACE .

    SEMI            reduce using rule 101 (ArrayInitializer -> LBRACE VariableInitializers RBRACE .)
    COMMA           reduce using rule 101 (ArrayInitializer -> LBRACE VariableInitializers RBRACE .)
    RBRACE          reduce using rule 101 (ArrayInitializer -> LBRACE VariableInitializers RBRACE .)


state 391

    (104) VariableInitializers -> VariableInitializers COMMA . VariableInitializer
    (77) VariableInitializer -> . Expression
    (78) VariableInitializer -> . ArrayInitializer
    (288) Expression -> . AssignmentExpression
    (101) ArrayInitializer -> . LBRACE VariableInitializers RBRACE
    (102) ArrayInitializer -> . LBRACE RBRACE
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    LBRACE          shift and go to state 274
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    VariableInitializer            shift and go to state 411
    Expression                     shift and go to state 272
    ArrayInitializer               shift and go to state 273
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 392

    (143) IfThenStatement -> IF begin_scope LPAREN Expression RPAREN . Statement end_scope
    (144) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN . StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (119) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (120) StatementNoShortIf -> . LabeledStatementNoShortIf
    (121) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (122) StatementNoShortIf -> . WhileStatementNoShortIf
    (123) StatementNoShortIf -> . ForStatementNoShortIf
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (134) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (145) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (159) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (175) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (176) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 420
    IF              shift and go to state 412
    WHILE           shift and go to state 421
    FOR             shift and go to state 422
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 413
    StatementNoShortIf             shift and go to state 414
    StatementWithoutTrailingSubstatement shift and go to state 415
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    LabeledStatementNoShortIf      shift and go to state 416
    IfThenElseStatementNoShortIf   shift and go to state 417
    WhileStatementNoShortIf        shift and go to state 418
    ForStatementNoShortIf          shift and go to state 419
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 393

    (237) CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .

    MUL             reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    DIV             reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    MOD             reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    ADD             reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    SUB             reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    LSHIFT          reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    RSHIFT          reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    URSHIFT         reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    LT              reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    GT              reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    LE              reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    GE              reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    EQUAL           reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    NOTEQUAL        reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    BITAND          reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    CARET           reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    BITOR           reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    AND             reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    QUESTION        reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    OR              reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    RPAREN          reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    SEMI            reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    COMMA           reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    RBRACK          reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    RBRACE          reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)
    COLON           reduce using rule 237 (CastExpression -> LPAREN Expression RPAREN UnaryExpressionNotAddSub .)


state 394

    (235) CastExpression -> LPAREN PrimitiveType Dims RPAREN . UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    UnaryExpression                shift and go to state 423
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 395

    (236) CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .

    MUL             reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    DIV             reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    MOD             reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    ADD             reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    SUB             reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    LSHIFT          reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    RSHIFT          reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    URSHIFT         reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    LT              reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    GT              reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    LE              reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    GE              reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    EQUAL           reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    NOTEQUAL        reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    BITAND          reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    CARET           reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    BITOR           reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    AND             reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    QUESTION        reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    OR              reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    RPAREN          reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    SEMI            reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    COMMA           reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    RBRACK          reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    RBRACE          reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)
    COLON           reduce using rule 236 (CastExpression -> LPAREN PrimitiveType RPAREN UnaryExpression .)


state 396

    (238) CastExpression -> LPAREN Name Dims RPAREN . UnaryExpressionNotAddSub
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    Name                           shift and go to state 252
    UnaryExpressionNotAddSub       shift and go to state 424
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 397

    (269) ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON . ConditionalExpression
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK

    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220
    LPAREN          shift and go to state 253
    THIS            shift and go to state 162
    NEW             shift and go to state 206
    IDENTIFIER      shift and go to state 63
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    SUPER           shift and go to state 160

    ConditionalOrExpression        shift and go to state 196
    ConditionalExpression          shift and go to state 425
    ConditionalAndExpression       shift and go to state 197
    InclusiveOrExpression          shift and go to state 199
    ExclusiveOrExpression          shift and go to state 202
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    Primary                        shift and go to state 251
    Name                           shift and go to state 252
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    FieldAccess                    shift and go to state 254
    MethodInvocation               shift and go to state 204
    ArrayAccess                    shift and go to state 255

state 398

    (158) WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN . Statement end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 130
    IF              shift and go to state 131
    WHILE           shift and go to state 133
    FOR             shift and go to state 134
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 426
    StatementWithoutTrailingSubstatement shift and go to state 115
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 399

    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI . Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> FOR begin_scope LPAREN ForInit SEMI . SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope LPAREN ForInit SEMI . Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> FOR begin_scope LPAREN ForInit SEMI . SEMI RPAREN Statement end_scope
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    SEMI            shift and go to state 427
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    Expression                     shift and go to state 428
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 400

    (167) ForStatement -> FOR begin_scope LPAREN SEMI SEMI . ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> FOR begin_scope LPAREN SEMI SEMI . RPAREN Statement end_scope
    (179) ForUpdate -> . StatementExpressionList
    (180) StatementExpressionList -> . StatementExpression
    (181) StatementExpressionList -> . StatementExpressionList COMMA StatementExpression
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RPAREN          shift and go to state 430
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    ForUpdate                      shift and go to state 429
    StatementExpressionList        shift and go to state 431
    StatementExpression            shift and go to state 372
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 401

    (162) ForStatement -> FOR begin_scope LPAREN SEMI Expression . SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> FOR begin_scope LPAREN SEMI Expression . SEMI RPAREN Statement end_scope

    SEMI            shift and go to state 432


state 402

    (181) StatementExpressionList -> StatementExpressionList COMMA . StatementExpression
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    StatementExpression            shift and go to state 433
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 403

    (146) SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .

    RBRACE          reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    IDENTIFIER      reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    IF              reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    WHILE           reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    FOR             reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    LBRACE          reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    SEMI            reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    SWITCH          reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    DO              reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    BREAK           reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    CONTINUE        reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    RETURN          reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    BOOLEAN         reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    INC             reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    DEC             reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    NEW             reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    BYTE            reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    SHORT           reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    INT             reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    LONG            reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    CHAR            reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    FLOAT           reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    DOUBLE          reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    SUPER           reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    THIS            reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    LPAREN          reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    DECIMAL_LITERAL reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    HEX_LITERAL     reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    BINARY_LITERAL  reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    FLOAT_LITERAL   reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    BOOL_LITERAL    reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    CHAR_LITERAL    reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    STRING_LITERAL  reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    CASE            reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    DEFAULT         reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)
    ELSE            reduce using rule 146 (SwitchStatement -> SWITCH LPAREN Expression RPAREN SwitchBlock .)


state 404

    (147) SwitchBlock -> LBRACE . RBRACE
    (148) SwitchBlock -> LBRACE . SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE
    (149) SwitchBlock -> LBRACE . SwitchBlockStatementGroups RBRACE
    (150) SwitchBlock -> LBRACE . begin_scope SwitchLabels end_scope RBRACE
    (151) SwitchBlockStatementGroups -> . SwitchBlockStatementGroup
    (152) SwitchBlockStatementGroups -> . SwitchBlockStatementGroups SwitchBlockStatementGroup
    (292) begin_scope -> .
    (153) SwitchBlockStatementGroup -> . begin_scope SwitchLabels BlockStatements end_scope

    RBRACE          shift and go to state 434
    CASE            reduce using rule 292 (begin_scope -> .)
    DEFAULT         reduce using rule 292 (begin_scope -> .)

    SwitchBlockStatementGroups     shift and go to state 435
    begin_scope                    shift and go to state 436
    SwitchBlockStatementGroup      shift and go to state 437

state 405

    (160) DoStatement -> DO begin_scope Statement WHILE LPAREN . Expression RPAREN end_scope SEMI
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    Expression                     shift and go to state 438
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 406

    (200) ArgumentList -> ArgumentList COMMA Expression .

    RPAREN          reduce using rule 200 (ArgumentList -> ArgumentList COMMA Expression .)
    COMMA           reduce using rule 200 (ArgumentList -> ArgumentList COMMA Expression .)


state 407

    (214) MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList . RPAREN
    (200) ArgumentList -> ArgumentList . COMMA Expression

    RPAREN          shift and go to state 439
    COMMA           shift and go to state 377


state 408

    (215) MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .

    SEMI            reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    LBRACK          reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    DOT             reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    INC             reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    DEC             reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    MUL             reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    DIV             reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    MOD             reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    ADD             reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    SUB             reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    LSHIFT          reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    RSHIFT          reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    URSHIFT         reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    LT              reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    GT              reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    LE              reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    GE              reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    EQUAL           reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    BITAND          reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    CARET           reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    BITOR           reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    QUESTION        reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    RBRACK          reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    RBRACE          reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)
    COLON           reduce using rule 215 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN RPAREN .)


state 409

    (198) ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .

    SEMI            reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    LBRACK          reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    DOT             reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    INC             reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    DEC             reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    MUL             reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    DIV             reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    MOD             reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    ADD             reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    SUB             reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    LSHIFT          reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    RSHIFT          reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    URSHIFT         reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    LT              reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    GT              reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    LE              reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    GE              reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    EQUAL           reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    NOTEQUAL        reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    BITAND          reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    CARET           reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    BITOR           reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    AND             reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    QUESTION        reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    OR              reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    RPAREN          reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    COMMA           reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    RBRACK          reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    RBRACE          reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)
    COLON           reduce using rule 198 (ClassInstanceCreationExpression -> NEW ClassType LPAREN ArgumentList RPAREN .)


state 410

    (207) DimExpr -> LBRACK Expression RBRACK .

    LBRACK          reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    DOT             reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    INC             reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    DEC             reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    MUL             reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    DIV             reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    MOD             reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    ADD             reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    SUB             reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    LSHIFT          reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    RSHIFT          reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    URSHIFT         reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    LT              reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    GT              reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    LE              reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    GE              reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    EQUAL           reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    NOTEQUAL        reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    BITAND          reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    CARET           reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    BITOR           reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    AND             reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    QUESTION        reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    OR              reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    RPAREN          reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    SEMI            reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    COMMA           reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    RBRACK          reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    RBRACE          reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)
    COLON           reduce using rule 207 (DimExpr -> LBRACK Expression RBRACK .)


state 411

    (104) VariableInitializers -> VariableInitializers COMMA VariableInitializer .

    RBRACE          reduce using rule 104 (VariableInitializers -> VariableInitializers COMMA VariableInitializer .)
    COMMA           reduce using rule 104 (VariableInitializers -> VariableInitializers COMMA VariableInitializer .)


state 412

    (143) IfThenStatement -> IF . begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> IF . begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (145) IfThenElseStatementNoShortIf -> IF . begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (292) begin_scope -> .

    LPAREN          reduce using rule 292 (begin_scope -> .)

    begin_scope                    shift and go to state 440

state 413

    (143) IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement . end_scope
    (293) end_scope -> .

    RBRACE          reduce using rule 293 (end_scope -> .)
    IDENTIFIER      reduce using rule 293 (end_scope -> .)
    IF              reduce using rule 293 (end_scope -> .)
    WHILE           reduce using rule 293 (end_scope -> .)
    FOR             reduce using rule 293 (end_scope -> .)
    LBRACE          reduce using rule 293 (end_scope -> .)
    SEMI            reduce using rule 293 (end_scope -> .)
    SWITCH          reduce using rule 293 (end_scope -> .)
    DO              reduce using rule 293 (end_scope -> .)
    BREAK           reduce using rule 293 (end_scope -> .)
    CONTINUE        reduce using rule 293 (end_scope -> .)
    RETURN          reduce using rule 293 (end_scope -> .)
    BOOLEAN         reduce using rule 293 (end_scope -> .)
    INC             reduce using rule 293 (end_scope -> .)
    DEC             reduce using rule 293 (end_scope -> .)
    NEW             reduce using rule 293 (end_scope -> .)
    BYTE            reduce using rule 293 (end_scope -> .)
    SHORT           reduce using rule 293 (end_scope -> .)
    INT             reduce using rule 293 (end_scope -> .)
    LONG            reduce using rule 293 (end_scope -> .)
    CHAR            reduce using rule 293 (end_scope -> .)
    FLOAT           reduce using rule 293 (end_scope -> .)
    DOUBLE          reduce using rule 293 (end_scope -> .)
    SUPER           reduce using rule 293 (end_scope -> .)
    THIS            reduce using rule 293 (end_scope -> .)
    LPAREN          reduce using rule 293 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 293 (end_scope -> .)
    HEX_LITERAL     reduce using rule 293 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 293 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 293 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 293 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 293 (end_scope -> .)
    STRING_LITERAL  reduce using rule 293 (end_scope -> .)
    CASE            reduce using rule 293 (end_scope -> .)
    DEFAULT         reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 441

state 414

    (144) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf . end_scope ELSE begin_scope Statement end_scope
    (293) end_scope -> .

    ELSE            reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 442

state 415

    (113) Statement -> StatementWithoutTrailingSubstatement .
    (119) StatementNoShortIf -> StatementWithoutTrailingSubstatement .

    RBRACE          reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    IDENTIFIER      reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    IF              reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    WHILE           reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    FOR             reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    LBRACE          reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    SEMI            reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    SWITCH          reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    DO              reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    BREAK           reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    CONTINUE        reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    RETURN          reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    BOOLEAN         reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    INC             reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    DEC             reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    NEW             reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    BYTE            reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    SHORT           reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    INT             reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    LONG            reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    CHAR            reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    FLOAT           reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    DOUBLE          reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    SUPER           reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    THIS            reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    LPAREN          reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    DECIMAL_LITERAL reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    HEX_LITERAL     reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    BINARY_LITERAL  reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    FLOAT_LITERAL   reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    BOOL_LITERAL    reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    CHAR_LITERAL    reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    STRING_LITERAL  reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    CASE            reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    DEFAULT         reduce using rule 113 (Statement -> StatementWithoutTrailingSubstatement .)
    ELSE            reduce using rule 119 (StatementNoShortIf -> StatementWithoutTrailingSubstatement .)


state 416

    (120) StatementNoShortIf -> LabeledStatementNoShortIf .

    ELSE            reduce using rule 120 (StatementNoShortIf -> LabeledStatementNoShortIf .)


state 417

    (121) StatementNoShortIf -> IfThenElseStatementNoShortIf .

    ELSE            reduce using rule 121 (StatementNoShortIf -> IfThenElseStatementNoShortIf .)


state 418

    (122) StatementNoShortIf -> WhileStatementNoShortIf .

    ELSE            reduce using rule 122 (StatementNoShortIf -> WhileStatementNoShortIf .)


state 419

    (123) StatementNoShortIf -> ForStatementNoShortIf .

    ELSE            reduce using rule 123 (StatementNoShortIf -> ForStatementNoShortIf .)


state 420

    (133) LabeledStatement -> IDENTIFIER . COLON Statement
    (134) LabeledStatementNoShortIf -> IDENTIFIER . COLON StatementNoShortIf
    (29) SimpleName -> IDENTIFIER .

    COLON           shift and go to state 443
    LPAREN          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LBRACK          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DOT             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    ASSIGN          reduce using rule 29 (SimpleName -> IDENTIFIER .)
    ADD_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    SUB_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    MUL_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DIV_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    AND_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    OR_ASSIGN       reduce using rule 29 (SimpleName -> IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 29 (SimpleName -> IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 29 (SimpleName -> IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 29 (SimpleName -> IDENTIFIER .)
    URSHIFT_ASSIGN  reduce using rule 29 (SimpleName -> IDENTIFIER .)
    INC             reduce using rule 29 (SimpleName -> IDENTIFIER .)
    DEC             reduce using rule 29 (SimpleName -> IDENTIFIER .)


state 421

    (158) WhileStatement -> WHILE . begin_scope LPAREN Expression RPAREN Statement end_scope
    (159) WhileStatementNoShortIf -> WHILE . begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (292) begin_scope -> .

    LPAREN          reduce using rule 292 (begin_scope -> .)

    begin_scope                    shift and go to state 444

state 422

    (161) ForStatement -> FOR . begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> FOR . begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> FOR . begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> FOR . begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> FOR . begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> FOR . begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> FOR . begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> FOR . begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (169) ForStatementNoShortIf -> FOR . begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> FOR . begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> FOR . begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> FOR . begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> FOR . begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> FOR . begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (175) ForStatementNoShortIf -> FOR . begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (176) ForStatementNoShortIf -> FOR . begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (292) begin_scope -> .

    LPAREN          reduce using rule 292 (begin_scope -> .)

    begin_scope                    shift and go to state 445

state 423

    (235) CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .

    MUL             reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    DIV             reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    MOD             reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    ADD             reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    SUB             reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    LSHIFT          reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    RSHIFT          reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    URSHIFT         reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    LT              reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    GT              reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    LE              reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    GE              reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    EQUAL           reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    NOTEQUAL        reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    BITAND          reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    CARET           reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    BITOR           reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    AND             reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    QUESTION        reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    OR              reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    RPAREN          reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    SEMI            reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    COMMA           reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    RBRACK          reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    RBRACE          reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)
    COLON           reduce using rule 235 (CastExpression -> LPAREN PrimitiveType Dims RPAREN UnaryExpression .)


state 424

    (238) CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .

    MUL             reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    DIV             reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    MOD             reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    ADD             reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    SUB             reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    LSHIFT          reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    RSHIFT          reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    URSHIFT         reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    LT              reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    GT              reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    LE              reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    GE              reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    EQUAL           reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    NOTEQUAL        reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    BITAND          reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    CARET           reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    BITOR           reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    AND             reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    QUESTION        reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    OR              reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    RPAREN          reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    SEMI            reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    COMMA           reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    RBRACK          reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    RBRACE          reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)
    COLON           reduce using rule 238 (CastExpression -> LPAREN Name Dims RPAREN UnaryExpressionNotAddSub .)


state 425

    (269) ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON ConditionalExpression .

    RPAREN          reduce using rule 269 (ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON ConditionalExpression .)
    SEMI            reduce using rule 269 (ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON ConditionalExpression .)
    COMMA           reduce using rule 269 (ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON ConditionalExpression .)
    RBRACK          reduce using rule 269 (ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON ConditionalExpression .)
    RBRACE          reduce using rule 269 (ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON ConditionalExpression .)
    COLON           reduce using rule 269 (ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON ConditionalExpression .)


state 426

    (158) WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement . end_scope
    (293) end_scope -> .

    RBRACE          reduce using rule 293 (end_scope -> .)
    IDENTIFIER      reduce using rule 293 (end_scope -> .)
    IF              reduce using rule 293 (end_scope -> .)
    WHILE           reduce using rule 293 (end_scope -> .)
    FOR             reduce using rule 293 (end_scope -> .)
    LBRACE          reduce using rule 293 (end_scope -> .)
    SEMI            reduce using rule 293 (end_scope -> .)
    SWITCH          reduce using rule 293 (end_scope -> .)
    DO              reduce using rule 293 (end_scope -> .)
    BREAK           reduce using rule 293 (end_scope -> .)
    CONTINUE        reduce using rule 293 (end_scope -> .)
    RETURN          reduce using rule 293 (end_scope -> .)
    BOOLEAN         reduce using rule 293 (end_scope -> .)
    INC             reduce using rule 293 (end_scope -> .)
    DEC             reduce using rule 293 (end_scope -> .)
    NEW             reduce using rule 293 (end_scope -> .)
    BYTE            reduce using rule 293 (end_scope -> .)
    SHORT           reduce using rule 293 (end_scope -> .)
    INT             reduce using rule 293 (end_scope -> .)
    LONG            reduce using rule 293 (end_scope -> .)
    CHAR            reduce using rule 293 (end_scope -> .)
    FLOAT           reduce using rule 293 (end_scope -> .)
    DOUBLE          reduce using rule 293 (end_scope -> .)
    SUPER           reduce using rule 293 (end_scope -> .)
    THIS            reduce using rule 293 (end_scope -> .)
    LPAREN          reduce using rule 293 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 293 (end_scope -> .)
    HEX_LITERAL     reduce using rule 293 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 293 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 293 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 293 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 293 (end_scope -> .)
    STRING_LITERAL  reduce using rule 293 (end_scope -> .)
    CASE            reduce using rule 293 (end_scope -> .)
    DEFAULT         reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 446

state 427

    (163) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI . ForUpdate RPAREN Statement end_scope
    (165) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI . RPAREN Statement end_scope
    (179) ForUpdate -> . StatementExpressionList
    (180) StatementExpressionList -> . StatementExpression
    (181) StatementExpressionList -> . StatementExpressionList COMMA StatementExpression
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RPAREN          shift and go to state 448
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    ForUpdate                      shift and go to state 447
    StatementExpressionList        shift and go to state 431
    StatementExpression            shift and go to state 372
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 428

    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression . SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression . SEMI RPAREN Statement end_scope

    SEMI            shift and go to state 449


state 429

    (167) ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate . RPAREN Statement end_scope

    RPAREN          shift and go to state 450


state 430

    (168) ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN . Statement end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 130
    IF              shift and go to state 131
    WHILE           shift and go to state 133
    FOR             shift and go to state 134
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 451
    StatementWithoutTrailingSubstatement shift and go to state 115
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 431

    (179) ForUpdate -> StatementExpressionList .
    (181) StatementExpressionList -> StatementExpressionList . COMMA StatementExpression

    RPAREN          reduce using rule 179 (ForUpdate -> StatementExpressionList .)
    COMMA           shift and go to state 402


state 432

    (162) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI . ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI . RPAREN Statement end_scope
    (179) ForUpdate -> . StatementExpressionList
    (180) StatementExpressionList -> . StatementExpression
    (181) StatementExpressionList -> . StatementExpressionList COMMA StatementExpression
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RPAREN          shift and go to state 453
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    ForUpdate                      shift and go to state 452
    StatementExpressionList        shift and go to state 431
    StatementExpression            shift and go to state 372
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 433

    (181) StatementExpressionList -> StatementExpressionList COMMA StatementExpression .

    COMMA           reduce using rule 181 (StatementExpressionList -> StatementExpressionList COMMA StatementExpression .)
    SEMI            reduce using rule 181 (StatementExpressionList -> StatementExpressionList COMMA StatementExpression .)
    RPAREN          reduce using rule 181 (StatementExpressionList -> StatementExpressionList COMMA StatementExpression .)


state 434

    (147) SwitchBlock -> LBRACE RBRACE .

    RBRACE          reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    IF              reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    WHILE           reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    FOR             reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    LBRACE          reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    SEMI            reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    SWITCH          reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    DO              reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    BREAK           reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    CONTINUE        reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    RETURN          reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    BOOLEAN         reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    INC             reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    DEC             reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    NEW             reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    BYTE            reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    SHORT           reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    INT             reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    LONG            reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    CHAR            reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    FLOAT           reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    DOUBLE          reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    SUPER           reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    THIS            reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    LPAREN          reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    DECIMAL_LITERAL reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    HEX_LITERAL     reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    BINARY_LITERAL  reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    FLOAT_LITERAL   reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    BOOL_LITERAL    reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    CHAR_LITERAL    reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    STRING_LITERAL  reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    CASE            reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    DEFAULT         reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)
    ELSE            reduce using rule 147 (SwitchBlock -> LBRACE RBRACE .)


state 435

    (148) SwitchBlock -> LBRACE SwitchBlockStatementGroups . begin_scope SwitchLabels end_scope RBRACE
    (149) SwitchBlock -> LBRACE SwitchBlockStatementGroups . RBRACE
    (152) SwitchBlockStatementGroups -> SwitchBlockStatementGroups . SwitchBlockStatementGroup
    (292) begin_scope -> .
    (153) SwitchBlockStatementGroup -> . begin_scope SwitchLabels BlockStatements end_scope

    RBRACE          shift and go to state 455
    CASE            reduce using rule 292 (begin_scope -> .)
    DEFAULT         reduce using rule 292 (begin_scope -> .)

    begin_scope                    shift and go to state 454
    SwitchBlockStatementGroup      shift and go to state 456

state 436

    (150) SwitchBlock -> LBRACE begin_scope . SwitchLabels end_scope RBRACE
    (153) SwitchBlockStatementGroup -> begin_scope . SwitchLabels BlockStatements end_scope
    (154) SwitchLabels -> . SwitchLabel
    (155) SwitchLabels -> . SwitchLabels SwitchLabel
    (156) SwitchLabel -> . CASE ConstantExpression COLON
    (157) SwitchLabel -> . DEFAULT COLON

    CASE            shift and go to state 459
    DEFAULT         shift and go to state 460

    SwitchLabels                   shift and go to state 457
    SwitchLabel                    shift and go to state 458

state 437

    (151) SwitchBlockStatementGroups -> SwitchBlockStatementGroup .

    RBRACE          reduce using rule 151 (SwitchBlockStatementGroups -> SwitchBlockStatementGroup .)
    CASE            reduce using rule 151 (SwitchBlockStatementGroups -> SwitchBlockStatementGroup .)
    DEFAULT         reduce using rule 151 (SwitchBlockStatementGroups -> SwitchBlockStatementGroup .)


state 438

    (160) DoStatement -> DO begin_scope Statement WHILE LPAREN Expression . RPAREN end_scope SEMI

    RPAREN          shift and go to state 461


state 439

    (214) MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .

    SEMI            reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    LBRACK          reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    DOT             reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    INC             reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    DEC             reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    MUL             reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    DIV             reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    MOD             reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    ADD             reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    SUB             reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    LSHIFT          reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    RSHIFT          reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    URSHIFT         reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    LT              reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    GT              reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    LE              reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    GE              reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    EQUAL           reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    NOTEQUAL        reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    BITAND          reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    CARET           reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    BITOR           reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    AND             reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    QUESTION        reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    OR              reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    RPAREN          reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    COMMA           reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    RBRACK          reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    RBRACE          reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)
    COLON           reduce using rule 214 (MethodInvocation -> Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN .)


state 440

    (143) IfThenStatement -> IF begin_scope . LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> IF begin_scope . LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (145) IfThenElseStatementNoShortIf -> IF begin_scope . LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope

    LPAREN          shift and go to state 462


state 441

    (143) IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .

    RBRACE          reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    IDENTIFIER      reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    IF              reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    WHILE           reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    FOR             reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    LBRACE          reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    SEMI            reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    SWITCH          reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    DO              reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    BREAK           reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    CONTINUE        reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    RETURN          reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    BOOLEAN         reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    INC             reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    DEC             reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    NEW             reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    BYTE            reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    SHORT           reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    INT             reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    LONG            reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    CHAR            reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    FLOAT           reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    DOUBLE          reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    SUPER           reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    THIS            reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    LPAREN          reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    HEX_LITERAL     reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    BINARY_LITERAL  reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    BOOL_LITERAL    reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    CHAR_LITERAL    reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    STRING_LITERAL  reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    CASE            reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)
    DEFAULT         reduce using rule 143 (IfThenStatement -> IF begin_scope LPAREN Expression RPAREN Statement end_scope .)


state 442

    (144) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope . ELSE begin_scope Statement end_scope

    ELSE            shift and go to state 463


state 443

    (133) LabeledStatement -> IDENTIFIER COLON . Statement
    (134) LabeledStatementNoShortIf -> IDENTIFIER COLON . StatementNoShortIf
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (119) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (120) StatementNoShortIf -> . LabeledStatementNoShortIf
    (121) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (122) StatementNoShortIf -> . WhileStatementNoShortIf
    (123) StatementNoShortIf -> . ForStatementNoShortIf
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (134) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (145) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (159) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (175) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (176) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 420
    IF              shift and go to state 412
    WHILE           shift and go to state 421
    FOR             shift and go to state 422
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 279
    StatementNoShortIf             shift and go to state 464
    StatementWithoutTrailingSubstatement shift and go to state 415
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    LabeledStatementNoShortIf      shift and go to state 416
    IfThenElseStatementNoShortIf   shift and go to state 417
    WhileStatementNoShortIf        shift and go to state 418
    ForStatementNoShortIf          shift and go to state 419
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 444

    (158) WhileStatement -> WHILE begin_scope . LPAREN Expression RPAREN Statement end_scope
    (159) WhileStatementNoShortIf -> WHILE begin_scope . LPAREN Expression RPAREN StatementNoShortIf end_scope

    LPAREN          shift and go to state 465


state 445

    (161) ForStatement -> FOR begin_scope . LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> FOR begin_scope . LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> FOR begin_scope . LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope . LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> FOR begin_scope . LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> FOR begin_scope . LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> FOR begin_scope . LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> FOR begin_scope . LPAREN SEMI SEMI RPAREN Statement end_scope
    (169) ForStatementNoShortIf -> FOR begin_scope . LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> FOR begin_scope . LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> FOR begin_scope . LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> FOR begin_scope . LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> FOR begin_scope . LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> FOR begin_scope . LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (175) ForStatementNoShortIf -> FOR begin_scope . LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (176) ForStatementNoShortIf -> FOR begin_scope . LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope

    LPAREN          shift and go to state 466


state 446

    (158) WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .

    RBRACE          reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    IDENTIFIER      reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    IF              reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    WHILE           reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    FOR             reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    LBRACE          reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    SEMI            reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    SWITCH          reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    DO              reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    BREAK           reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    CONTINUE        reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    RETURN          reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    BOOLEAN         reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    INC             reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    DEC             reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    NEW             reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    BYTE            reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    SHORT           reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    INT             reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    LONG            reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    CHAR            reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    FLOAT           reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    DOUBLE          reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    SUPER           reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    THIS            reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    LPAREN          reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    HEX_LITERAL     reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    BINARY_LITERAL  reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    BOOL_LITERAL    reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    CHAR_LITERAL    reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    STRING_LITERAL  reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    CASE            reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)
    DEFAULT         reduce using rule 158 (WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN Statement end_scope .)


state 447

    (163) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate . RPAREN Statement end_scope

    RPAREN          shift and go to state 467


state 448

    (165) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN . Statement end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 130
    IF              shift and go to state 131
    WHILE           shift and go to state 133
    FOR             shift and go to state 134
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 468
    StatementWithoutTrailingSubstatement shift and go to state 115
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 449

    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI . ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI . RPAREN Statement end_scope
    (179) ForUpdate -> . StatementExpressionList
    (180) StatementExpressionList -> . StatementExpression
    (181) StatementExpressionList -> . StatementExpressionList COMMA StatementExpression
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RPAREN          shift and go to state 470
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    ForUpdate                      shift and go to state 469
    StatementExpressionList        shift and go to state 431
    StatementExpression            shift and go to state 372
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 450

    (167) ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN . Statement end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 130
    IF              shift and go to state 131
    WHILE           shift and go to state 133
    FOR             shift and go to state 134
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 471
    StatementWithoutTrailingSubstatement shift and go to state 115
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 451

    (168) ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement . end_scope
    (293) end_scope -> .

    RBRACE          reduce using rule 293 (end_scope -> .)
    IDENTIFIER      reduce using rule 293 (end_scope -> .)
    IF              reduce using rule 293 (end_scope -> .)
    WHILE           reduce using rule 293 (end_scope -> .)
    FOR             reduce using rule 293 (end_scope -> .)
    LBRACE          reduce using rule 293 (end_scope -> .)
    SEMI            reduce using rule 293 (end_scope -> .)
    SWITCH          reduce using rule 293 (end_scope -> .)
    DO              reduce using rule 293 (end_scope -> .)
    BREAK           reduce using rule 293 (end_scope -> .)
    CONTINUE        reduce using rule 293 (end_scope -> .)
    RETURN          reduce using rule 293 (end_scope -> .)
    BOOLEAN         reduce using rule 293 (end_scope -> .)
    INC             reduce using rule 293 (end_scope -> .)
    DEC             reduce using rule 293 (end_scope -> .)
    NEW             reduce using rule 293 (end_scope -> .)
    BYTE            reduce using rule 293 (end_scope -> .)
    SHORT           reduce using rule 293 (end_scope -> .)
    INT             reduce using rule 293 (end_scope -> .)
    LONG            reduce using rule 293 (end_scope -> .)
    CHAR            reduce using rule 293 (end_scope -> .)
    FLOAT           reduce using rule 293 (end_scope -> .)
    DOUBLE          reduce using rule 293 (end_scope -> .)
    SUPER           reduce using rule 293 (end_scope -> .)
    THIS            reduce using rule 293 (end_scope -> .)
    LPAREN          reduce using rule 293 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 293 (end_scope -> .)
    HEX_LITERAL     reduce using rule 293 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 293 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 293 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 293 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 293 (end_scope -> .)
    STRING_LITERAL  reduce using rule 293 (end_scope -> .)
    CASE            reduce using rule 293 (end_scope -> .)
    DEFAULT         reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 472

state 452

    (162) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate . RPAREN Statement end_scope

    RPAREN          shift and go to state 473


state 453

    (166) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN . Statement end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 130
    IF              shift and go to state 131
    WHILE           shift and go to state 133
    FOR             shift and go to state 134
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 474
    StatementWithoutTrailingSubstatement shift and go to state 115
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 454

    (148) SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope . SwitchLabels end_scope RBRACE
    (153) SwitchBlockStatementGroup -> begin_scope . SwitchLabels BlockStatements end_scope
    (154) SwitchLabels -> . SwitchLabel
    (155) SwitchLabels -> . SwitchLabels SwitchLabel
    (156) SwitchLabel -> . CASE ConstantExpression COLON
    (157) SwitchLabel -> . DEFAULT COLON

    CASE            shift and go to state 459
    DEFAULT         shift and go to state 460

    SwitchLabels                   shift and go to state 475
    SwitchLabel                    shift and go to state 458

state 455

    (149) SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .

    RBRACE          reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    IDENTIFIER      reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    IF              reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    WHILE           reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    FOR             reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    LBRACE          reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    SEMI            reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    SWITCH          reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    DO              reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    BREAK           reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    CONTINUE        reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    RETURN          reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    BOOLEAN         reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    INC             reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    DEC             reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    NEW             reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    BYTE            reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    SHORT           reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    INT             reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    LONG            reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    CHAR            reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    FLOAT           reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    DOUBLE          reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    SUPER           reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    THIS            reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    LPAREN          reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    DECIMAL_LITERAL reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    HEX_LITERAL     reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    BINARY_LITERAL  reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    FLOAT_LITERAL   reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    BOOL_LITERAL    reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    CHAR_LITERAL    reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    STRING_LITERAL  reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    CASE            reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    DEFAULT         reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)
    ELSE            reduce using rule 149 (SwitchBlock -> LBRACE SwitchBlockStatementGroups RBRACE .)


state 456

    (152) SwitchBlockStatementGroups -> SwitchBlockStatementGroups SwitchBlockStatementGroup .

    RBRACE          reduce using rule 152 (SwitchBlockStatementGroups -> SwitchBlockStatementGroups SwitchBlockStatementGroup .)
    CASE            reduce using rule 152 (SwitchBlockStatementGroups -> SwitchBlockStatementGroups SwitchBlockStatementGroup .)
    DEFAULT         reduce using rule 152 (SwitchBlockStatementGroups -> SwitchBlockStatementGroups SwitchBlockStatementGroup .)


state 457

    (150) SwitchBlock -> LBRACE begin_scope SwitchLabels . end_scope RBRACE
    (153) SwitchBlockStatementGroup -> begin_scope SwitchLabels . BlockStatements end_scope
    (155) SwitchLabels -> SwitchLabels . SwitchLabel
    (293) end_scope -> .
    (107) BlockStatements -> . BlockStatement
    (108) BlockStatements -> . BlockStatements BlockStatement
    (156) SwitchLabel -> . CASE ConstantExpression COLON
    (157) SwitchLabel -> . DEFAULT COLON
    (109) BlockStatement -> . LocalVariableDeclarationStatement
    (110) BlockStatement -> . Statement
    (111) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMI
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (112) LocalVariableDeclaration -> . Type VariableDeclarators
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RBRACE          reduce using rule 293 (end_scope -> .)
    CASE            shift and go to state 459
    DEFAULT         shift and go to state 460
    IDENTIFIER      shift and go to state 130
    IF              shift and go to state 131
    WHILE           shift and go to state 133
    FOR             shift and go to state 134
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    BOOLEAN         shift and go to state 65
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    BYTE            shift and go to state 71
    SHORT           shift and go to state 72
    INT             shift and go to state 73
    LONG            shift and go to state 74
    CHAR            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    end_scope                      shift and go to state 476
    BlockStatements                shift and go to state 477
    SwitchLabel                    shift and go to state 478
    BlockStatement                 shift and go to state 110
    LocalVariableDeclarationStatement shift and go to state 111
    Statement                      shift and go to state 112
    LocalVariableDeclaration       shift and go to state 113
    StatementWithoutTrailingSubstatement shift and go to state 115
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    Type                           shift and go to state 121
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    PrimitiveType                  shift and go to state 60
    ReferenceType                  shift and go to state 61
    StatementExpression            shift and go to state 135
    NumericType                    shift and go to state 64
    ArrayType                      shift and go to state 66
    ClassType                      shift and go to state 67
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    IntegralType                   shift and go to state 68
    FloatingPointType              shift and go to state 69
    Name                           shift and go to state 148
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Primary                        shift and go to state 153
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 458

    (154) SwitchLabels -> SwitchLabel .

    CASE            reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    DEFAULT         reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    IDENTIFIER      reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    IF              reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    WHILE           reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    FOR             reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    LBRACE          reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    SEMI            reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    SWITCH          reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    DO              reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    BREAK           reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    CONTINUE        reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    RETURN          reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    BOOLEAN         reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    INC             reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    DEC             reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    NEW             reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    BYTE            reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    SHORT           reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    INT             reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    LONG            reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    CHAR            reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    FLOAT           reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    DOUBLE          reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    SUPER           reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    THIS            reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    LPAREN          reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    DECIMAL_LITERAL reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    HEX_LITERAL     reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    BINARY_LITERAL  reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    FLOAT_LITERAL   reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    BOOL_LITERAL    reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    CHAR_LITERAL    reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    STRING_LITERAL  reduce using rule 154 (SwitchLabels -> SwitchLabel .)
    RBRACE          reduce using rule 154 (SwitchLabels -> SwitchLabel .)


state 459

    (156) SwitchLabel -> CASE . ConstantExpression COLON
    (289) ConstantExpression -> . Expression
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    ConstantExpression             shift and go to state 479
    Expression                     shift and go to state 480
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 460

    (157) SwitchLabel -> DEFAULT . COLON

    COLON           shift and go to state 481


state 461

    (160) DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN . end_scope SEMI
    (293) end_scope -> .

    SEMI            reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 482

state 462

    (143) IfThenStatement -> IF begin_scope LPAREN . Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> IF begin_scope LPAREN . Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (145) IfThenElseStatementNoShortIf -> IF begin_scope LPAREN . Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    Expression                     shift and go to state 483
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 463

    (144) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE . begin_scope Statement end_scope
    (292) begin_scope -> .

    IDENTIFIER      reduce using rule 292 (begin_scope -> .)
    IF              reduce using rule 292 (begin_scope -> .)
    WHILE           reduce using rule 292 (begin_scope -> .)
    FOR             reduce using rule 292 (begin_scope -> .)
    LBRACE          reduce using rule 292 (begin_scope -> .)
    SEMI            reduce using rule 292 (begin_scope -> .)
    SWITCH          reduce using rule 292 (begin_scope -> .)
    DO              reduce using rule 292 (begin_scope -> .)
    BREAK           reduce using rule 292 (begin_scope -> .)
    CONTINUE        reduce using rule 292 (begin_scope -> .)
    RETURN          reduce using rule 292 (begin_scope -> .)
    INC             reduce using rule 292 (begin_scope -> .)
    DEC             reduce using rule 292 (begin_scope -> .)
    NEW             reduce using rule 292 (begin_scope -> .)
    SUPER           reduce using rule 292 (begin_scope -> .)
    THIS            reduce using rule 292 (begin_scope -> .)
    LPAREN          reduce using rule 292 (begin_scope -> .)
    DECIMAL_LITERAL reduce using rule 292 (begin_scope -> .)
    HEX_LITERAL     reduce using rule 292 (begin_scope -> .)
    BINARY_LITERAL  reduce using rule 292 (begin_scope -> .)
    FLOAT_LITERAL   reduce using rule 292 (begin_scope -> .)
    BOOL_LITERAL    reduce using rule 292 (begin_scope -> .)
    CHAR_LITERAL    reduce using rule 292 (begin_scope -> .)
    STRING_LITERAL  reduce using rule 292 (begin_scope -> .)

    begin_scope                    shift and go to state 484

state 464

    (134) LabeledStatementNoShortIf -> IDENTIFIER COLON StatementNoShortIf .

    ELSE            reduce using rule 134 (LabeledStatementNoShortIf -> IDENTIFIER COLON StatementNoShortIf .)


state 465

    (158) WhileStatement -> WHILE begin_scope LPAREN . Expression RPAREN Statement end_scope
    (159) WhileStatementNoShortIf -> WHILE begin_scope LPAREN . Expression RPAREN StatementNoShortIf end_scope
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    Expression                     shift and go to state 485
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 466

    (161) ForStatement -> FOR begin_scope LPAREN . ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> FOR begin_scope LPAREN . SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> FOR begin_scope LPAREN . ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope LPAREN . ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> FOR begin_scope LPAREN . ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> FOR begin_scope LPAREN . SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> FOR begin_scope LPAREN . SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> FOR begin_scope LPAREN . SEMI SEMI RPAREN Statement end_scope
    (169) ForStatementNoShortIf -> FOR begin_scope LPAREN . ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> FOR begin_scope LPAREN . SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> FOR begin_scope LPAREN . ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> FOR begin_scope LPAREN . ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> FOR begin_scope LPAREN . ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> FOR begin_scope LPAREN . SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (175) ForStatementNoShortIf -> FOR begin_scope LPAREN . SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (176) ForStatementNoShortIf -> FOR begin_scope LPAREN . SEMI SEMI RPAREN StatementNoShortIf end_scope
    (177) ForInit -> . StatementExpressionList
    (178) ForInit -> . LocalVariableDeclaration
    (180) StatementExpressionList -> . StatementExpression
    (181) StatementExpressionList -> . StatementExpressionList COMMA StatementExpression
    (112) LocalVariableDeclaration -> . Type VariableDeclarators
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    SEMI            shift and go to state 487
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    BOOLEAN         shift and go to state 65
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    BYTE            shift and go to state 71
    SHORT           shift and go to state 72
    INT             shift and go to state 73
    LONG            shift and go to state 74
    CHAR            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    ForInit                        shift and go to state 486
    StatementExpressionList        shift and go to state 370
    LocalVariableDeclaration       shift and go to state 371
    StatementExpression            shift and go to state 372
    Type                           shift and go to state 121
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    PrimitiveType                  shift and go to state 60
    ReferenceType                  shift and go to state 61
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 373
    Primary                        shift and go to state 153
    ClassType                      shift and go to state 67
    NumericType                    shift and go to state 64
    ArrayType                      shift and go to state 66
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    IntegralType                   shift and go to state 68
    FloatingPointType              shift and go to state 69
    Literal                        shift and go to state 161

state 467

    (163) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN . Statement end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 130
    IF              shift and go to state 131
    WHILE           shift and go to state 133
    FOR             shift and go to state 134
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 488
    StatementWithoutTrailingSubstatement shift and go to state 115
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 468

    (165) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement . end_scope
    (293) end_scope -> .

    RBRACE          reduce using rule 293 (end_scope -> .)
    IDENTIFIER      reduce using rule 293 (end_scope -> .)
    IF              reduce using rule 293 (end_scope -> .)
    WHILE           reduce using rule 293 (end_scope -> .)
    FOR             reduce using rule 293 (end_scope -> .)
    LBRACE          reduce using rule 293 (end_scope -> .)
    SEMI            reduce using rule 293 (end_scope -> .)
    SWITCH          reduce using rule 293 (end_scope -> .)
    DO              reduce using rule 293 (end_scope -> .)
    BREAK           reduce using rule 293 (end_scope -> .)
    CONTINUE        reduce using rule 293 (end_scope -> .)
    RETURN          reduce using rule 293 (end_scope -> .)
    BOOLEAN         reduce using rule 293 (end_scope -> .)
    INC             reduce using rule 293 (end_scope -> .)
    DEC             reduce using rule 293 (end_scope -> .)
    NEW             reduce using rule 293 (end_scope -> .)
    BYTE            reduce using rule 293 (end_scope -> .)
    SHORT           reduce using rule 293 (end_scope -> .)
    INT             reduce using rule 293 (end_scope -> .)
    LONG            reduce using rule 293 (end_scope -> .)
    CHAR            reduce using rule 293 (end_scope -> .)
    FLOAT           reduce using rule 293 (end_scope -> .)
    DOUBLE          reduce using rule 293 (end_scope -> .)
    SUPER           reduce using rule 293 (end_scope -> .)
    THIS            reduce using rule 293 (end_scope -> .)
    LPAREN          reduce using rule 293 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 293 (end_scope -> .)
    HEX_LITERAL     reduce using rule 293 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 293 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 293 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 293 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 293 (end_scope -> .)
    STRING_LITERAL  reduce using rule 293 (end_scope -> .)
    CASE            reduce using rule 293 (end_scope -> .)
    DEFAULT         reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 489

state 469

    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate . RPAREN Statement end_scope

    RPAREN          shift and go to state 490


state 470

    (164) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN . Statement end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 130
    IF              shift and go to state 131
    WHILE           shift and go to state 133
    FOR             shift and go to state 134
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 491
    StatementWithoutTrailingSubstatement shift and go to state 115
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 471

    (167) ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement . end_scope
    (293) end_scope -> .

    RBRACE          reduce using rule 293 (end_scope -> .)
    IDENTIFIER      reduce using rule 293 (end_scope -> .)
    IF              reduce using rule 293 (end_scope -> .)
    WHILE           reduce using rule 293 (end_scope -> .)
    FOR             reduce using rule 293 (end_scope -> .)
    LBRACE          reduce using rule 293 (end_scope -> .)
    SEMI            reduce using rule 293 (end_scope -> .)
    SWITCH          reduce using rule 293 (end_scope -> .)
    DO              reduce using rule 293 (end_scope -> .)
    BREAK           reduce using rule 293 (end_scope -> .)
    CONTINUE        reduce using rule 293 (end_scope -> .)
    RETURN          reduce using rule 293 (end_scope -> .)
    BOOLEAN         reduce using rule 293 (end_scope -> .)
    INC             reduce using rule 293 (end_scope -> .)
    DEC             reduce using rule 293 (end_scope -> .)
    NEW             reduce using rule 293 (end_scope -> .)
    BYTE            reduce using rule 293 (end_scope -> .)
    SHORT           reduce using rule 293 (end_scope -> .)
    INT             reduce using rule 293 (end_scope -> .)
    LONG            reduce using rule 293 (end_scope -> .)
    CHAR            reduce using rule 293 (end_scope -> .)
    FLOAT           reduce using rule 293 (end_scope -> .)
    DOUBLE          reduce using rule 293 (end_scope -> .)
    SUPER           reduce using rule 293 (end_scope -> .)
    THIS            reduce using rule 293 (end_scope -> .)
    LPAREN          reduce using rule 293 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 293 (end_scope -> .)
    HEX_LITERAL     reduce using rule 293 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 293 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 293 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 293 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 293 (end_scope -> .)
    STRING_LITERAL  reduce using rule 293 (end_scope -> .)
    CASE            reduce using rule 293 (end_scope -> .)
    DEFAULT         reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 492

state 472

    (168) ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .

    RBRACE          reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    IDENTIFIER      reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    IF              reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    WHILE           reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    FOR             reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    LBRACE          reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    SEMI            reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    SWITCH          reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    DO              reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    BREAK           reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    CONTINUE        reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    RETURN          reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    BOOLEAN         reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    INC             reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    DEC             reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    NEW             reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    BYTE            reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    SHORT           reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    INT             reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    LONG            reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    CHAR            reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    FLOAT           reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    DOUBLE          reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    SUPER           reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    THIS            reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    LPAREN          reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    HEX_LITERAL     reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    BINARY_LITERAL  reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    BOOL_LITERAL    reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    CHAR_LITERAL    reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    STRING_LITERAL  reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    CASE            reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)
    DEFAULT         reduce using rule 168 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope .)


state 473

    (162) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN . Statement end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 130
    IF              shift and go to state 131
    WHILE           shift and go to state 133
    FOR             shift and go to state 134
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 493
    StatementWithoutTrailingSubstatement shift and go to state 115
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 474

    (166) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement . end_scope
    (293) end_scope -> .

    RBRACE          reduce using rule 293 (end_scope -> .)
    IDENTIFIER      reduce using rule 293 (end_scope -> .)
    IF              reduce using rule 293 (end_scope -> .)
    WHILE           reduce using rule 293 (end_scope -> .)
    FOR             reduce using rule 293 (end_scope -> .)
    LBRACE          reduce using rule 293 (end_scope -> .)
    SEMI            reduce using rule 293 (end_scope -> .)
    SWITCH          reduce using rule 293 (end_scope -> .)
    DO              reduce using rule 293 (end_scope -> .)
    BREAK           reduce using rule 293 (end_scope -> .)
    CONTINUE        reduce using rule 293 (end_scope -> .)
    RETURN          reduce using rule 293 (end_scope -> .)
    BOOLEAN         reduce using rule 293 (end_scope -> .)
    INC             reduce using rule 293 (end_scope -> .)
    DEC             reduce using rule 293 (end_scope -> .)
    NEW             reduce using rule 293 (end_scope -> .)
    BYTE            reduce using rule 293 (end_scope -> .)
    SHORT           reduce using rule 293 (end_scope -> .)
    INT             reduce using rule 293 (end_scope -> .)
    LONG            reduce using rule 293 (end_scope -> .)
    CHAR            reduce using rule 293 (end_scope -> .)
    FLOAT           reduce using rule 293 (end_scope -> .)
    DOUBLE          reduce using rule 293 (end_scope -> .)
    SUPER           reduce using rule 293 (end_scope -> .)
    THIS            reduce using rule 293 (end_scope -> .)
    LPAREN          reduce using rule 293 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 293 (end_scope -> .)
    HEX_LITERAL     reduce using rule 293 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 293 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 293 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 293 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 293 (end_scope -> .)
    STRING_LITERAL  reduce using rule 293 (end_scope -> .)
    CASE            reduce using rule 293 (end_scope -> .)
    DEFAULT         reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 494

state 475

    (148) SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels . end_scope RBRACE
    (153) SwitchBlockStatementGroup -> begin_scope SwitchLabels . BlockStatements end_scope
    (155) SwitchLabels -> SwitchLabels . SwitchLabel
    (293) end_scope -> .
    (107) BlockStatements -> . BlockStatement
    (108) BlockStatements -> . BlockStatements BlockStatement
    (156) SwitchLabel -> . CASE ConstantExpression COLON
    (157) SwitchLabel -> . DEFAULT COLON
    (109) BlockStatement -> . LocalVariableDeclarationStatement
    (110) BlockStatement -> . Statement
    (111) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMI
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (112) LocalVariableDeclaration -> . Type VariableDeclarators
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RBRACE          reduce using rule 293 (end_scope -> .)
    CASE            shift and go to state 459
    DEFAULT         shift and go to state 460
    IDENTIFIER      shift and go to state 130
    IF              shift and go to state 131
    WHILE           shift and go to state 133
    FOR             shift and go to state 134
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    BOOLEAN         shift and go to state 65
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    BYTE            shift and go to state 71
    SHORT           shift and go to state 72
    INT             shift and go to state 73
    LONG            shift and go to state 74
    CHAR            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    end_scope                      shift and go to state 495
    BlockStatements                shift and go to state 477
    SwitchLabel                    shift and go to state 478
    BlockStatement                 shift and go to state 110
    LocalVariableDeclarationStatement shift and go to state 111
    Statement                      shift and go to state 112
    LocalVariableDeclaration       shift and go to state 113
    StatementWithoutTrailingSubstatement shift and go to state 115
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    Type                           shift and go to state 121
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    PrimitiveType                  shift and go to state 60
    ReferenceType                  shift and go to state 61
    StatementExpression            shift and go to state 135
    NumericType                    shift and go to state 64
    ArrayType                      shift and go to state 66
    ClassType                      shift and go to state 67
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    IntegralType                   shift and go to state 68
    FloatingPointType              shift and go to state 69
    Name                           shift and go to state 148
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Primary                        shift and go to state 153
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 476

    (150) SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope . RBRACE

    RBRACE          shift and go to state 496


state 477

    (153) SwitchBlockStatementGroup -> begin_scope SwitchLabels BlockStatements . end_scope
    (108) BlockStatements -> BlockStatements . BlockStatement
    (293) end_scope -> .
    (109) BlockStatement -> . LocalVariableDeclarationStatement
    (110) BlockStatement -> . Statement
    (111) LocalVariableDeclarationStatement -> . LocalVariableDeclaration SEMI
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (112) LocalVariableDeclaration -> . Type VariableDeclarators
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (9) Type -> . PrimitiveType
    (10) Type -> . ReferenceType
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (11) PrimitiveType -> . NumericType
    (12) PrimitiveType -> . BOOLEAN
    (22) ReferenceType -> . ArrayType
    (23) ReferenceType -> . ClassType
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (13) NumericType -> . IntegralType
    (14) NumericType -> . FloatingPointType
    (25) ArrayType -> . PrimitiveType Dims
    (26) ArrayType -> . Name Dims
    (24) ClassType -> . Name
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (15) IntegralType -> . BYTE
    (16) IntegralType -> . SHORT
    (17) IntegralType -> . INT
    (18) IntegralType -> . LONG
    (19) IntegralType -> . CHAR
    (20) FloatingPointType -> . FLOAT
    (21) FloatingPointType -> . DOUBLE
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RBRACE          reduce using rule 293 (end_scope -> .)
    CASE            reduce using rule 293 (end_scope -> .)
    DEFAULT         reduce using rule 293 (end_scope -> .)
    IDENTIFIER      shift and go to state 130
    IF              shift and go to state 131
    WHILE           shift and go to state 133
    FOR             shift and go to state 134
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    BOOLEAN         shift and go to state 65
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    BYTE            shift and go to state 71
    SHORT           shift and go to state 72
    INT             shift and go to state 73
    LONG            shift and go to state 74
    CHAR            shift and go to state 75
    FLOAT           shift and go to state 76
    DOUBLE          shift and go to state 77
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    end_scope                      shift and go to state 497
    BlockStatement                 shift and go to state 185
    LocalVariableDeclarationStatement shift and go to state 111
    Statement                      shift and go to state 112
    LocalVariableDeclaration       shift and go to state 113
    StatementWithoutTrailingSubstatement shift and go to state 115
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    Type                           shift and go to state 121
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    PrimitiveType                  shift and go to state 60
    ReferenceType                  shift and go to state 61
    StatementExpression            shift and go to state 135
    NumericType                    shift and go to state 64
    ArrayType                      shift and go to state 66
    ClassType                      shift and go to state 67
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    IntegralType                   shift and go to state 68
    FloatingPointType              shift and go to state 69
    Name                           shift and go to state 148
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Primary                        shift and go to state 153
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 478

    (155) SwitchLabels -> SwitchLabels SwitchLabel .

    CASE            reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    DEFAULT         reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    IDENTIFIER      reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    IF              reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    WHILE           reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    FOR             reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    LBRACE          reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    SEMI            reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    SWITCH          reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    DO              reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    BREAK           reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    CONTINUE        reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    RETURN          reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    BOOLEAN         reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    INC             reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    DEC             reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    NEW             reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    BYTE            reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    SHORT           reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    INT             reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    LONG            reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    CHAR            reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    FLOAT           reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    DOUBLE          reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    SUPER           reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    THIS            reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    LPAREN          reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    DECIMAL_LITERAL reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    HEX_LITERAL     reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    BINARY_LITERAL  reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    FLOAT_LITERAL   reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    BOOL_LITERAL    reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    CHAR_LITERAL    reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    STRING_LITERAL  reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)
    RBRACE          reduce using rule 155 (SwitchLabels -> SwitchLabels SwitchLabel .)


state 479

    (156) SwitchLabel -> CASE ConstantExpression . COLON

    COLON           shift and go to state 498


state 480

    (289) ConstantExpression -> Expression .

    COLON           reduce using rule 289 (ConstantExpression -> Expression .)


state 481

    (157) SwitchLabel -> DEFAULT COLON .

    CASE            reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    DEFAULT         reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    IDENTIFIER      reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    IF              reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    WHILE           reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    FOR             reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    LBRACE          reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    SEMI            reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    SWITCH          reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    DO              reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    BREAK           reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    CONTINUE        reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    RETURN          reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    BOOLEAN         reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    INC             reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    DEC             reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    NEW             reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    BYTE            reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    SHORT           reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    INT             reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    LONG            reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    CHAR            reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    FLOAT           reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    DOUBLE          reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    SUPER           reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    THIS            reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    LPAREN          reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    DECIMAL_LITERAL reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    HEX_LITERAL     reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    BINARY_LITERAL  reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    FLOAT_LITERAL   reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    BOOL_LITERAL    reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    CHAR_LITERAL    reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    STRING_LITERAL  reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)
    RBRACE          reduce using rule 157 (SwitchLabel -> DEFAULT COLON .)


state 482

    (160) DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope . SEMI

    SEMI            shift and go to state 499


state 483

    (143) IfThenStatement -> IF begin_scope LPAREN Expression . RPAREN Statement end_scope
    (144) IfThenElseStatement -> IF begin_scope LPAREN Expression . RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (145) IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression . RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope

    RPAREN          shift and go to state 500


state 484

    (144) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope . Statement end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 130
    IF              shift and go to state 131
    WHILE           shift and go to state 133
    FOR             shift and go to state 134
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 501
    StatementWithoutTrailingSubstatement shift and go to state 115
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 485

    (158) WhileStatement -> WHILE begin_scope LPAREN Expression . RPAREN Statement end_scope
    (159) WhileStatementNoShortIf -> WHILE begin_scope LPAREN Expression . RPAREN StatementNoShortIf end_scope

    RPAREN          shift and go to state 502


state 486

    (161) ForStatement -> FOR begin_scope LPAREN ForInit . SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> FOR begin_scope LPAREN ForInit . SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope LPAREN ForInit . SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> FOR begin_scope LPAREN ForInit . SEMI SEMI RPAREN Statement end_scope
    (169) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit . SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit . SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit . SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit . SEMI SEMI RPAREN StatementNoShortIf end_scope

    SEMI            shift and go to state 503


state 487

    (162) ForStatement -> FOR begin_scope LPAREN SEMI . Expression SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> FOR begin_scope LPAREN SEMI . Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> FOR begin_scope LPAREN SEMI . SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> FOR begin_scope LPAREN SEMI . SEMI RPAREN Statement end_scope
    (170) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI . Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI . Expression SEMI RPAREN StatementNoShortIf end_scope
    (175) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI . SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (176) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI . SEMI RPAREN StatementNoShortIf end_scope
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    SEMI            shift and go to state 504
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    Expression                     shift and go to state 505
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 488

    (163) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement . end_scope
    (293) end_scope -> .

    RBRACE          reduce using rule 293 (end_scope -> .)
    IDENTIFIER      reduce using rule 293 (end_scope -> .)
    IF              reduce using rule 293 (end_scope -> .)
    WHILE           reduce using rule 293 (end_scope -> .)
    FOR             reduce using rule 293 (end_scope -> .)
    LBRACE          reduce using rule 293 (end_scope -> .)
    SEMI            reduce using rule 293 (end_scope -> .)
    SWITCH          reduce using rule 293 (end_scope -> .)
    DO              reduce using rule 293 (end_scope -> .)
    BREAK           reduce using rule 293 (end_scope -> .)
    CONTINUE        reduce using rule 293 (end_scope -> .)
    RETURN          reduce using rule 293 (end_scope -> .)
    BOOLEAN         reduce using rule 293 (end_scope -> .)
    INC             reduce using rule 293 (end_scope -> .)
    DEC             reduce using rule 293 (end_scope -> .)
    NEW             reduce using rule 293 (end_scope -> .)
    BYTE            reduce using rule 293 (end_scope -> .)
    SHORT           reduce using rule 293 (end_scope -> .)
    INT             reduce using rule 293 (end_scope -> .)
    LONG            reduce using rule 293 (end_scope -> .)
    CHAR            reduce using rule 293 (end_scope -> .)
    FLOAT           reduce using rule 293 (end_scope -> .)
    DOUBLE          reduce using rule 293 (end_scope -> .)
    SUPER           reduce using rule 293 (end_scope -> .)
    THIS            reduce using rule 293 (end_scope -> .)
    LPAREN          reduce using rule 293 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 293 (end_scope -> .)
    HEX_LITERAL     reduce using rule 293 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 293 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 293 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 293 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 293 (end_scope -> .)
    STRING_LITERAL  reduce using rule 293 (end_scope -> .)
    CASE            reduce using rule 293 (end_scope -> .)
    DEFAULT         reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 506

state 489

    (165) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .

    RBRACE          reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    IDENTIFIER      reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    IF              reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    WHILE           reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    FOR             reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    LBRACE          reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    SEMI            reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    SWITCH          reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    DO              reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    BREAK           reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    CONTINUE        reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    RETURN          reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    BOOLEAN         reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    INC             reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    DEC             reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    NEW             reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    BYTE            reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    SHORT           reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    INT             reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    LONG            reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    CHAR            reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    FLOAT           reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    DOUBLE          reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    SUPER           reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    THIS            reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    LPAREN          reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    HEX_LITERAL     reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    BINARY_LITERAL  reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    BOOL_LITERAL    reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    CHAR_LITERAL    reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    STRING_LITERAL  reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    CASE            reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)
    DEFAULT         reduce using rule 165 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope .)


state 490

    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN . Statement end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 130
    IF              shift and go to state 131
    WHILE           shift and go to state 133
    FOR             shift and go to state 134
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 507
    StatementWithoutTrailingSubstatement shift and go to state 115
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 491

    (164) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement . end_scope
    (293) end_scope -> .

    RBRACE          reduce using rule 293 (end_scope -> .)
    IDENTIFIER      reduce using rule 293 (end_scope -> .)
    IF              reduce using rule 293 (end_scope -> .)
    WHILE           reduce using rule 293 (end_scope -> .)
    FOR             reduce using rule 293 (end_scope -> .)
    LBRACE          reduce using rule 293 (end_scope -> .)
    SEMI            reduce using rule 293 (end_scope -> .)
    SWITCH          reduce using rule 293 (end_scope -> .)
    DO              reduce using rule 293 (end_scope -> .)
    BREAK           reduce using rule 293 (end_scope -> .)
    CONTINUE        reduce using rule 293 (end_scope -> .)
    RETURN          reduce using rule 293 (end_scope -> .)
    BOOLEAN         reduce using rule 293 (end_scope -> .)
    INC             reduce using rule 293 (end_scope -> .)
    DEC             reduce using rule 293 (end_scope -> .)
    NEW             reduce using rule 293 (end_scope -> .)
    BYTE            reduce using rule 293 (end_scope -> .)
    SHORT           reduce using rule 293 (end_scope -> .)
    INT             reduce using rule 293 (end_scope -> .)
    LONG            reduce using rule 293 (end_scope -> .)
    CHAR            reduce using rule 293 (end_scope -> .)
    FLOAT           reduce using rule 293 (end_scope -> .)
    DOUBLE          reduce using rule 293 (end_scope -> .)
    SUPER           reduce using rule 293 (end_scope -> .)
    THIS            reduce using rule 293 (end_scope -> .)
    LPAREN          reduce using rule 293 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 293 (end_scope -> .)
    HEX_LITERAL     reduce using rule 293 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 293 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 293 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 293 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 293 (end_scope -> .)
    STRING_LITERAL  reduce using rule 293 (end_scope -> .)
    CASE            reduce using rule 293 (end_scope -> .)
    DEFAULT         reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 508

state 492

    (167) ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .

    RBRACE          reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    IDENTIFIER      reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    IF              reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    WHILE           reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    FOR             reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    LBRACE          reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    SEMI            reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    SWITCH          reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    DO              reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    BREAK           reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    CONTINUE        reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    RETURN          reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    BOOLEAN         reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    INC             reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    DEC             reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    NEW             reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    BYTE            reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    SHORT           reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    INT             reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    LONG            reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    CHAR            reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    FLOAT           reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    DOUBLE          reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    SUPER           reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    THIS            reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    LPAREN          reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    HEX_LITERAL     reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    BINARY_LITERAL  reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    BOOL_LITERAL    reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    CHAR_LITERAL    reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    STRING_LITERAL  reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    CASE            reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    DEFAULT         reduce using rule 167 (ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope .)


state 493

    (162) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement . end_scope
    (293) end_scope -> .

    RBRACE          reduce using rule 293 (end_scope -> .)
    IDENTIFIER      reduce using rule 293 (end_scope -> .)
    IF              reduce using rule 293 (end_scope -> .)
    WHILE           reduce using rule 293 (end_scope -> .)
    FOR             reduce using rule 293 (end_scope -> .)
    LBRACE          reduce using rule 293 (end_scope -> .)
    SEMI            reduce using rule 293 (end_scope -> .)
    SWITCH          reduce using rule 293 (end_scope -> .)
    DO              reduce using rule 293 (end_scope -> .)
    BREAK           reduce using rule 293 (end_scope -> .)
    CONTINUE        reduce using rule 293 (end_scope -> .)
    RETURN          reduce using rule 293 (end_scope -> .)
    BOOLEAN         reduce using rule 293 (end_scope -> .)
    INC             reduce using rule 293 (end_scope -> .)
    DEC             reduce using rule 293 (end_scope -> .)
    NEW             reduce using rule 293 (end_scope -> .)
    BYTE            reduce using rule 293 (end_scope -> .)
    SHORT           reduce using rule 293 (end_scope -> .)
    INT             reduce using rule 293 (end_scope -> .)
    LONG            reduce using rule 293 (end_scope -> .)
    CHAR            reduce using rule 293 (end_scope -> .)
    FLOAT           reduce using rule 293 (end_scope -> .)
    DOUBLE          reduce using rule 293 (end_scope -> .)
    SUPER           reduce using rule 293 (end_scope -> .)
    THIS            reduce using rule 293 (end_scope -> .)
    LPAREN          reduce using rule 293 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 293 (end_scope -> .)
    HEX_LITERAL     reduce using rule 293 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 293 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 293 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 293 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 293 (end_scope -> .)
    STRING_LITERAL  reduce using rule 293 (end_scope -> .)
    CASE            reduce using rule 293 (end_scope -> .)
    DEFAULT         reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 509

state 494

    (166) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .

    RBRACE          reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    IDENTIFIER      reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    IF              reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    WHILE           reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    FOR             reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    LBRACE          reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    SEMI            reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    SWITCH          reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    DO              reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    BREAK           reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    CONTINUE        reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    RETURN          reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    BOOLEAN         reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    INC             reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    DEC             reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    NEW             reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    BYTE            reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    SHORT           reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    INT             reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    LONG            reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    CHAR            reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    FLOAT           reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    DOUBLE          reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    SUPER           reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    THIS            reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    LPAREN          reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    HEX_LITERAL     reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    BINARY_LITERAL  reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    BOOL_LITERAL    reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    CHAR_LITERAL    reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    STRING_LITERAL  reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    CASE            reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)
    DEFAULT         reduce using rule 166 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope .)


state 495

    (148) SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope . RBRACE

    RBRACE          shift and go to state 510


state 496

    (150) SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .

    RBRACE          reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    IDENTIFIER      reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    IF              reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    WHILE           reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    FOR             reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    LBRACE          reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    SEMI            reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    SWITCH          reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    DO              reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    BREAK           reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    CONTINUE        reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    RETURN          reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    BOOLEAN         reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    INC             reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    DEC             reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    NEW             reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    BYTE            reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    SHORT           reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    INT             reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    LONG            reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    CHAR            reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    FLOAT           reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    DOUBLE          reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    SUPER           reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    THIS            reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    LPAREN          reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    DECIMAL_LITERAL reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    HEX_LITERAL     reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    BINARY_LITERAL  reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    FLOAT_LITERAL   reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    BOOL_LITERAL    reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    CHAR_LITERAL    reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    STRING_LITERAL  reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    CASE            reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    DEFAULT         reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)
    ELSE            reduce using rule 150 (SwitchBlock -> LBRACE begin_scope SwitchLabels end_scope RBRACE .)


state 497

    (153) SwitchBlockStatementGroup -> begin_scope SwitchLabels BlockStatements end_scope .

    RBRACE          reduce using rule 153 (SwitchBlockStatementGroup -> begin_scope SwitchLabels BlockStatements end_scope .)
    CASE            reduce using rule 153 (SwitchBlockStatementGroup -> begin_scope SwitchLabels BlockStatements end_scope .)
    DEFAULT         reduce using rule 153 (SwitchBlockStatementGroup -> begin_scope SwitchLabels BlockStatements end_scope .)


state 498

    (156) SwitchLabel -> CASE ConstantExpression COLON .

    CASE            reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    DEFAULT         reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    IDENTIFIER      reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    IF              reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    WHILE           reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    FOR             reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    LBRACE          reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    SEMI            reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    SWITCH          reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    DO              reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    BREAK           reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    CONTINUE        reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    RETURN          reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    BOOLEAN         reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    INC             reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    DEC             reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    NEW             reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    BYTE            reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    SHORT           reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    INT             reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    LONG            reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    CHAR            reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    FLOAT           reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    DOUBLE          reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    SUPER           reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    THIS            reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    LPAREN          reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    DECIMAL_LITERAL reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    HEX_LITERAL     reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    BINARY_LITERAL  reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    FLOAT_LITERAL   reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    BOOL_LITERAL    reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    CHAR_LITERAL    reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    STRING_LITERAL  reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)
    RBRACE          reduce using rule 156 (SwitchLabel -> CASE ConstantExpression COLON .)


state 499

    (160) DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .

    RBRACE          reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    IDENTIFIER      reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    IF              reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    WHILE           reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    FOR             reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    LBRACE          reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    SEMI            reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    SWITCH          reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    DO              reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    BREAK           reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    CONTINUE        reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    RETURN          reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    BOOLEAN         reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    INC             reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    DEC             reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    NEW             reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    BYTE            reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    SHORT           reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    INT             reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    LONG            reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    CHAR            reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    FLOAT           reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    DOUBLE          reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    SUPER           reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    THIS            reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    LPAREN          reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    DECIMAL_LITERAL reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    HEX_LITERAL     reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    BINARY_LITERAL  reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    FLOAT_LITERAL   reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    BOOL_LITERAL    reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    CHAR_LITERAL    reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    STRING_LITERAL  reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    CASE            reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    DEFAULT         reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)
    ELSE            reduce using rule 160 (DoStatement -> DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI .)


state 500

    (143) IfThenStatement -> IF begin_scope LPAREN Expression RPAREN . Statement end_scope
    (144) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN . StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (145) IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression RPAREN . StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (119) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (120) StatementNoShortIf -> . LabeledStatementNoShortIf
    (121) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (122) StatementNoShortIf -> . WhileStatementNoShortIf
    (123) StatementNoShortIf -> . ForStatementNoShortIf
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (134) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (145) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (159) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (175) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (176) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 420
    IF              shift and go to state 412
    WHILE           shift and go to state 421
    FOR             shift and go to state 422
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 413
    StatementNoShortIf             shift and go to state 511
    StatementWithoutTrailingSubstatement shift and go to state 415
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    LabeledStatementNoShortIf      shift and go to state 416
    IfThenElseStatementNoShortIf   shift and go to state 417
    WhileStatementNoShortIf        shift and go to state 418
    ForStatementNoShortIf          shift and go to state 419
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 501

    (144) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement . end_scope
    (293) end_scope -> .

    RBRACE          reduce using rule 293 (end_scope -> .)
    IDENTIFIER      reduce using rule 293 (end_scope -> .)
    IF              reduce using rule 293 (end_scope -> .)
    WHILE           reduce using rule 293 (end_scope -> .)
    FOR             reduce using rule 293 (end_scope -> .)
    LBRACE          reduce using rule 293 (end_scope -> .)
    SEMI            reduce using rule 293 (end_scope -> .)
    SWITCH          reduce using rule 293 (end_scope -> .)
    DO              reduce using rule 293 (end_scope -> .)
    BREAK           reduce using rule 293 (end_scope -> .)
    CONTINUE        reduce using rule 293 (end_scope -> .)
    RETURN          reduce using rule 293 (end_scope -> .)
    BOOLEAN         reduce using rule 293 (end_scope -> .)
    INC             reduce using rule 293 (end_scope -> .)
    DEC             reduce using rule 293 (end_scope -> .)
    NEW             reduce using rule 293 (end_scope -> .)
    BYTE            reduce using rule 293 (end_scope -> .)
    SHORT           reduce using rule 293 (end_scope -> .)
    INT             reduce using rule 293 (end_scope -> .)
    LONG            reduce using rule 293 (end_scope -> .)
    CHAR            reduce using rule 293 (end_scope -> .)
    FLOAT           reduce using rule 293 (end_scope -> .)
    DOUBLE          reduce using rule 293 (end_scope -> .)
    SUPER           reduce using rule 293 (end_scope -> .)
    THIS            reduce using rule 293 (end_scope -> .)
    LPAREN          reduce using rule 293 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 293 (end_scope -> .)
    HEX_LITERAL     reduce using rule 293 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 293 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 293 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 293 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 293 (end_scope -> .)
    STRING_LITERAL  reduce using rule 293 (end_scope -> .)
    CASE            reduce using rule 293 (end_scope -> .)
    DEFAULT         reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 512

state 502

    (158) WhileStatement -> WHILE begin_scope LPAREN Expression RPAREN . Statement end_scope
    (159) WhileStatementNoShortIf -> WHILE begin_scope LPAREN Expression RPAREN . StatementNoShortIf end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (119) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (120) StatementNoShortIf -> . LabeledStatementNoShortIf
    (121) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (122) StatementNoShortIf -> . WhileStatementNoShortIf
    (123) StatementNoShortIf -> . ForStatementNoShortIf
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (134) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (145) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (159) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (175) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (176) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 420
    IF              shift and go to state 412
    WHILE           shift and go to state 421
    FOR             shift and go to state 422
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 426
    StatementNoShortIf             shift and go to state 513
    StatementWithoutTrailingSubstatement shift and go to state 415
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    LabeledStatementNoShortIf      shift and go to state 416
    IfThenElseStatementNoShortIf   shift and go to state 417
    WhileStatementNoShortIf        shift and go to state 418
    ForStatementNoShortIf          shift and go to state 419
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 503

    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI . Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> FOR begin_scope LPAREN ForInit SEMI . SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope LPAREN ForInit SEMI . Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> FOR begin_scope LPAREN ForInit SEMI . SEMI RPAREN Statement end_scope
    (169) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI . Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI . SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI . Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI . SEMI RPAREN StatementNoShortIf end_scope
    (288) Expression -> . AssignmentExpression
    (270) AssignmentExpression -> . ConditionalExpression
    (271) AssignmentExpression -> . Assignment
    (268) ConditionalExpression -> . ConditionalOrExpression
    (269) ConditionalExpression -> . ConditionalOrExpression QUESTION Expression COLON ConditionalExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (266) ConditionalOrExpression -> . ConditionalAndExpression
    (267) ConditionalOrExpression -> . ConditionalOrExpression OR ConditionalAndExpression
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (264) ConditionalAndExpression -> . InclusiveOrExpression
    (265) ConditionalAndExpression -> . ConditionalAndExpression AND InclusiveOrExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (262) InclusiveOrExpression -> . ExclusiveOrExpression
    (263) InclusiveOrExpression -> . InclusiveOrExpression BITOR ExclusiveOrExpression
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (260) ExclusiveOrExpression -> . AndExpression
    (261) ExclusiveOrExpression -> . ExclusiveOrExpression CARET AndExpression
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (258) AndExpression -> . EqualityExpression
    (259) AndExpression -> . AndExpression BITAND EqualityExpression
    (255) EqualityExpression -> . RelationalExpression
    (256) EqualityExpression -> . EqualityExpression EQUAL RelationalExpression
    (257) EqualityExpression -> . EqualityExpression NOTEQUAL RelationalExpression
    (250) RelationalExpression -> . ShiftExpression
    (251) RelationalExpression -> . RelationalExpression LT ShiftExpression
    (252) RelationalExpression -> . RelationalExpression GT ShiftExpression
    (253) RelationalExpression -> . RelationalExpression LE ShiftExpression
    (254) RelationalExpression -> . RelationalExpression GE ShiftExpression
    (246) ShiftExpression -> . AdditiveExpression
    (247) ShiftExpression -> . ShiftExpression LSHIFT AdditiveExpression
    (248) ShiftExpression -> . ShiftExpression RSHIFT AdditiveExpression
    (249) ShiftExpression -> . ShiftExpression URSHIFT AdditiveExpression
    (243) AdditiveExpression -> . MultiplicativeExpression
    (244) AdditiveExpression -> . AdditiveExpression ADD MultiplicativeExpression
    (245) AdditiveExpression -> . AdditiveExpression SUB MultiplicativeExpression
    (239) MultiplicativeExpression -> . UnaryExpression
    (240) MultiplicativeExpression -> . MultiplicativeExpression MUL UnaryExpression
    (241) MultiplicativeExpression -> . MultiplicativeExpression DIV UnaryExpression
    (242) MultiplicativeExpression -> . MultiplicativeExpression MOD UnaryExpression
    (224) UnaryExpression -> . PreIncrementExpression
    (225) UnaryExpression -> . PreDecrementExpression
    (226) UnaryExpression -> . ADD UnaryExpression
    (227) UnaryExpression -> . SUB UnaryExpression
    (228) UnaryExpression -> . UnaryExpressionNotAddSub
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (231) UnaryExpressionNotAddSub -> . PostfixExpression
    (232) UnaryExpressionNotAddSub -> . BANG UnaryExpression
    (233) UnaryExpressionNotAddSub -> . TILDE UnaryExpression
    (234) UnaryExpressionNotAddSub -> . CastExpression
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (235) CastExpression -> . LPAREN PrimitiveType Dims RPAREN UnaryExpression
    (236) CastExpression -> . LPAREN PrimitiveType RPAREN UnaryExpression
    (237) CastExpression -> . LPAREN Expression RPAREN UnaryExpressionNotAddSub
    (238) CastExpression -> . LPAREN Name Dims RPAREN UnaryExpressionNotAddSub
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC

    SEMI            shift and go to state 514
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 191
    NEW             shift and go to state 206
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169
    ADD             shift and go to state 212
    SUB             shift and go to state 213
    INC             shift and go to state 150
    DEC             shift and go to state 151
    BANG            shift and go to state 219
    TILDE           shift and go to state 220

    Expression                     shift and go to state 515
    AssignmentExpression           shift and go to state 193
    ConditionalExpression          shift and go to state 194
    Assignment                     shift and go to state 195
    ConditionalOrExpression        shift and go to state 196
    LeftHandSide                   shift and go to state 149
    ConditionalAndExpression       shift and go to state 197
    Name                           shift and go to state 198
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    InclusiveOrExpression          shift and go to state 199
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    Primary                        shift and go to state 200
    PrimaryNoNewArray              shift and go to state 201
    ExclusiveOrExpression          shift and go to state 202
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161
    ClassInstanceCreationExpression shift and go to state 203
    MethodInvocation               shift and go to state 204
    AndExpression                  shift and go to state 205
    EqualityExpression             shift and go to state 207
    RelationalExpression           shift and go to state 208
    ShiftExpression                shift and go to state 209
    AdditiveExpression             shift and go to state 210
    MultiplicativeExpression       shift and go to state 211
    UnaryExpression                shift and go to state 214
    PreIncrementExpression         shift and go to state 215
    PreDecrementExpression         shift and go to state 216
    UnaryExpressionNotAddSub       shift and go to state 217
    PostfixExpression              shift and go to state 218
    CastExpression                 shift and go to state 221
    PostIncrementExpression        shift and go to state 222
    PostDecrementExpression        shift and go to state 223

state 504

    (167) ForStatement -> FOR begin_scope LPAREN SEMI SEMI . ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> FOR begin_scope LPAREN SEMI SEMI . RPAREN Statement end_scope
    (175) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI . ForUpdate RPAREN StatementNoShortIf end_scope
    (176) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI . RPAREN StatementNoShortIf end_scope
    (179) ForUpdate -> . StatementExpressionList
    (180) StatementExpressionList -> . StatementExpression
    (181) StatementExpressionList -> . StatementExpressionList COMMA StatementExpression
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RPAREN          shift and go to state 517
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    ForUpdate                      shift and go to state 516
    StatementExpressionList        shift and go to state 431
    StatementExpression            shift and go to state 372
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 505

    (162) ForStatement -> FOR begin_scope LPAREN SEMI Expression . SEMI ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> FOR begin_scope LPAREN SEMI Expression . SEMI RPAREN Statement end_scope
    (170) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression . SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression . SEMI RPAREN StatementNoShortIf end_scope

    SEMI            shift and go to state 518


state 506

    (163) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .

    RBRACE          reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    IDENTIFIER      reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    IF              reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    WHILE           reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    FOR             reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    LBRACE          reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    SEMI            reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    SWITCH          reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    DO              reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    BREAK           reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    CONTINUE        reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    RETURN          reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    BOOLEAN         reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    INC             reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    DEC             reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    NEW             reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    BYTE            reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    SHORT           reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    INT             reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    LONG            reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    CHAR            reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    FLOAT           reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    DOUBLE          reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    SUPER           reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    THIS            reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    LPAREN          reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    HEX_LITERAL     reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    BINARY_LITERAL  reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    BOOL_LITERAL    reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    CHAR_LITERAL    reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    STRING_LITERAL  reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    CASE            reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)
    DEFAULT         reduce using rule 163 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope .)


state 507

    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement . end_scope
    (293) end_scope -> .

    RBRACE          reduce using rule 293 (end_scope -> .)
    IDENTIFIER      reduce using rule 293 (end_scope -> .)
    IF              reduce using rule 293 (end_scope -> .)
    WHILE           reduce using rule 293 (end_scope -> .)
    FOR             reduce using rule 293 (end_scope -> .)
    LBRACE          reduce using rule 293 (end_scope -> .)
    SEMI            reduce using rule 293 (end_scope -> .)
    SWITCH          reduce using rule 293 (end_scope -> .)
    DO              reduce using rule 293 (end_scope -> .)
    BREAK           reduce using rule 293 (end_scope -> .)
    CONTINUE        reduce using rule 293 (end_scope -> .)
    RETURN          reduce using rule 293 (end_scope -> .)
    BOOLEAN         reduce using rule 293 (end_scope -> .)
    INC             reduce using rule 293 (end_scope -> .)
    DEC             reduce using rule 293 (end_scope -> .)
    NEW             reduce using rule 293 (end_scope -> .)
    BYTE            reduce using rule 293 (end_scope -> .)
    SHORT           reduce using rule 293 (end_scope -> .)
    INT             reduce using rule 293 (end_scope -> .)
    LONG            reduce using rule 293 (end_scope -> .)
    CHAR            reduce using rule 293 (end_scope -> .)
    FLOAT           reduce using rule 293 (end_scope -> .)
    DOUBLE          reduce using rule 293 (end_scope -> .)
    SUPER           reduce using rule 293 (end_scope -> .)
    THIS            reduce using rule 293 (end_scope -> .)
    LPAREN          reduce using rule 293 (end_scope -> .)
    DECIMAL_LITERAL reduce using rule 293 (end_scope -> .)
    HEX_LITERAL     reduce using rule 293 (end_scope -> .)
    BINARY_LITERAL  reduce using rule 293 (end_scope -> .)
    FLOAT_LITERAL   reduce using rule 293 (end_scope -> .)
    BOOL_LITERAL    reduce using rule 293 (end_scope -> .)
    CHAR_LITERAL    reduce using rule 293 (end_scope -> .)
    STRING_LITERAL  reduce using rule 293 (end_scope -> .)
    CASE            reduce using rule 293 (end_scope -> .)
    DEFAULT         reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 519

state 508

    (164) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .

    RBRACE          reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    IDENTIFIER      reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    IF              reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    WHILE           reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    FOR             reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    LBRACE          reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    SEMI            reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    SWITCH          reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    DO              reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    BREAK           reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    CONTINUE        reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    RETURN          reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    BOOLEAN         reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    INC             reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    DEC             reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    NEW             reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    BYTE            reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    SHORT           reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    INT             reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    LONG            reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    CHAR            reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    FLOAT           reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    DOUBLE          reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    SUPER           reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    THIS            reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    LPAREN          reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    HEX_LITERAL     reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    BINARY_LITERAL  reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    BOOL_LITERAL    reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    CHAR_LITERAL    reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    STRING_LITERAL  reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    CASE            reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)
    DEFAULT         reduce using rule 164 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope .)


state 509

    (162) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .

    RBRACE          reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    IDENTIFIER      reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    IF              reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    WHILE           reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    FOR             reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    LBRACE          reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    SEMI            reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    SWITCH          reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    DO              reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    BREAK           reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    CONTINUE        reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    RETURN          reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    BOOLEAN         reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    INC             reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    DEC             reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    NEW             reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    BYTE            reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    SHORT           reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    INT             reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    LONG            reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    CHAR            reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    FLOAT           reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    DOUBLE          reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    SUPER           reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    THIS            reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    LPAREN          reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    HEX_LITERAL     reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    BINARY_LITERAL  reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    BOOL_LITERAL    reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    CHAR_LITERAL    reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    STRING_LITERAL  reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    CASE            reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    DEFAULT         reduce using rule 162 (ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)


state 510

    (148) SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .

    RBRACE          reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    IDENTIFIER      reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    IF              reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    WHILE           reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    FOR             reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    LBRACE          reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    SEMI            reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    SWITCH          reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    DO              reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    BREAK           reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    CONTINUE        reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    RETURN          reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    BOOLEAN         reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    INC             reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    DEC             reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    NEW             reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    BYTE            reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    SHORT           reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    INT             reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    LONG            reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    CHAR            reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    FLOAT           reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    DOUBLE          reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    SUPER           reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    THIS            reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    LPAREN          reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    DECIMAL_LITERAL reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    HEX_LITERAL     reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    BINARY_LITERAL  reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    FLOAT_LITERAL   reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    BOOL_LITERAL    reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    CHAR_LITERAL    reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    STRING_LITERAL  reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    CASE            reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    DEFAULT         reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)
    ELSE            reduce using rule 148 (SwitchBlock -> LBRACE SwitchBlockStatementGroups begin_scope SwitchLabels end_scope RBRACE .)


state 511

    (144) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf . end_scope ELSE begin_scope Statement end_scope
    (145) IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf . end_scope ELSE begin_scope StatementNoShortIf end_scope
    (293) end_scope -> .

    ELSE            reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 520

state 512

    (144) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .

    RBRACE          reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    IDENTIFIER      reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    IF              reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    WHILE           reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    FOR             reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    LBRACE          reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    SEMI            reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    SWITCH          reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    DO              reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    BREAK           reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    CONTINUE        reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    RETURN          reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    BOOLEAN         reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    INC             reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    DEC             reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    NEW             reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    BYTE            reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    SHORT           reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    INT             reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    LONG            reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    CHAR            reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    FLOAT           reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    DOUBLE          reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    SUPER           reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    THIS            reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    LPAREN          reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    HEX_LITERAL     reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    BINARY_LITERAL  reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    BOOL_LITERAL    reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    CHAR_LITERAL    reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    STRING_LITERAL  reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    CASE            reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)
    DEFAULT         reduce using rule 144 (IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope .)


state 513

    (159) WhileStatementNoShortIf -> WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf . end_scope
    (293) end_scope -> .

    ELSE            reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 521

state 514

    (163) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI . ForUpdate RPAREN Statement end_scope
    (165) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI . RPAREN Statement end_scope
    (171) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI . ForUpdate RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI . RPAREN StatementNoShortIf end_scope
    (179) ForUpdate -> . StatementExpressionList
    (180) StatementExpressionList -> . StatementExpression
    (181) StatementExpressionList -> . StatementExpressionList COMMA StatementExpression
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RPAREN          shift and go to state 523
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    ForUpdate                      shift and go to state 522
    StatementExpressionList        shift and go to state 431
    StatementExpression            shift and go to state 372
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 515

    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression . SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression . SEMI RPAREN Statement end_scope
    (169) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression . SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression . SEMI RPAREN StatementNoShortIf end_scope

    SEMI            shift and go to state 524


state 516

    (167) ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate . RPAREN Statement end_scope
    (175) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI ForUpdate . RPAREN StatementNoShortIf end_scope

    RPAREN          shift and go to state 525


state 517

    (168) ForStatement -> FOR begin_scope LPAREN SEMI SEMI RPAREN . Statement end_scope
    (176) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI RPAREN . StatementNoShortIf end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (119) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (120) StatementNoShortIf -> . LabeledStatementNoShortIf
    (121) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (122) StatementNoShortIf -> . WhileStatementNoShortIf
    (123) StatementNoShortIf -> . ForStatementNoShortIf
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (134) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (145) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (159) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (175) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (176) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 420
    IF              shift and go to state 412
    WHILE           shift and go to state 421
    FOR             shift and go to state 422
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 451
    StatementNoShortIf             shift and go to state 526
    StatementWithoutTrailingSubstatement shift and go to state 415
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    LabeledStatementNoShortIf      shift and go to state 416
    IfThenElseStatementNoShortIf   shift and go to state 417
    WhileStatementNoShortIf        shift and go to state 418
    ForStatementNoShortIf          shift and go to state 419
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 518

    (162) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI . ForUpdate RPAREN Statement end_scope
    (166) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI . RPAREN Statement end_scope
    (170) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI . ForUpdate RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI . RPAREN StatementNoShortIf end_scope
    (179) ForUpdate -> . StatementExpressionList
    (180) StatementExpressionList -> . StatementExpression
    (181) StatementExpressionList -> . StatementExpressionList COMMA StatementExpression
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RPAREN          shift and go to state 528
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    ForUpdate                      shift and go to state 527
    StatementExpressionList        shift and go to state 431
    StatementExpression            shift and go to state 372
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 519

    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .

    RBRACE          reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    IDENTIFIER      reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    IF              reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    WHILE           reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    FOR             reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    LBRACE          reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    SEMI            reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    SWITCH          reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    DO              reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    BREAK           reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    CONTINUE        reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    RETURN          reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    BOOLEAN         reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    INC             reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    DEC             reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    NEW             reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    BYTE            reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    SHORT           reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    INT             reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    LONG            reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    CHAR            reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    FLOAT           reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    DOUBLE          reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    SUPER           reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    THIS            reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    LPAREN          reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    DECIMAL_LITERAL reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    HEX_LITERAL     reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    BINARY_LITERAL  reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    FLOAT_LITERAL   reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    BOOL_LITERAL    reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    CHAR_LITERAL    reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    STRING_LITERAL  reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    CASE            reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)
    DEFAULT         reduce using rule 161 (ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope .)


state 520

    (144) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope . ELSE begin_scope Statement end_scope
    (145) IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope . ELSE begin_scope StatementNoShortIf end_scope

    ELSE            shift and go to state 529


state 521

    (159) WhileStatementNoShortIf -> WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope .

    ELSE            reduce using rule 159 (WhileStatementNoShortIf -> WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope .)


state 522

    (163) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate . RPAREN Statement end_scope
    (171) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate . RPAREN StatementNoShortIf end_scope

    RPAREN          shift and go to state 530


state 523

    (165) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN . Statement end_scope
    (173) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN . StatementNoShortIf end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (119) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (120) StatementNoShortIf -> . LabeledStatementNoShortIf
    (121) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (122) StatementNoShortIf -> . WhileStatementNoShortIf
    (123) StatementNoShortIf -> . ForStatementNoShortIf
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (134) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (145) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (159) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (175) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (176) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 420
    IF              shift and go to state 412
    WHILE           shift and go to state 421
    FOR             shift and go to state 422
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 468
    StatementNoShortIf             shift and go to state 531
    StatementWithoutTrailingSubstatement shift and go to state 415
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    LabeledStatementNoShortIf      shift and go to state 416
    IfThenElseStatementNoShortIf   shift and go to state 417
    WhileStatementNoShortIf        shift and go to state 418
    ForStatementNoShortIf          shift and go to state 419
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 524

    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI . ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI . RPAREN Statement end_scope
    (169) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI . ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI . RPAREN StatementNoShortIf end_scope
    (179) ForUpdate -> . StatementExpressionList
    (180) StatementExpressionList -> . StatementExpression
    (181) StatementExpressionList -> . StatementExpressionList COMMA StatementExpression
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    RPAREN          shift and go to state 533
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    IDENTIFIER      shift and go to state 63
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    ForUpdate                      shift and go to state 532
    StatementExpressionList        shift and go to state 431
    StatementExpression            shift and go to state 372
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 525

    (167) ForStatement -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN . Statement end_scope
    (175) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN . StatementNoShortIf end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (119) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (120) StatementNoShortIf -> . LabeledStatementNoShortIf
    (121) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (122) StatementNoShortIf -> . WhileStatementNoShortIf
    (123) StatementNoShortIf -> . ForStatementNoShortIf
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (134) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (145) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (159) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (175) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (176) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 420
    IF              shift and go to state 412
    WHILE           shift and go to state 421
    FOR             shift and go to state 422
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 471
    StatementNoShortIf             shift and go to state 534
    StatementWithoutTrailingSubstatement shift and go to state 415
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    LabeledStatementNoShortIf      shift and go to state 416
    IfThenElseStatementNoShortIf   shift and go to state 417
    WhileStatementNoShortIf        shift and go to state 418
    ForStatementNoShortIf          shift and go to state 419
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 526

    (176) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf . end_scope
    (293) end_scope -> .

    ELSE            reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 535

state 527

    (162) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate . RPAREN Statement end_scope
    (170) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate . RPAREN StatementNoShortIf end_scope

    RPAREN          shift and go to state 536


state 528

    (166) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN . Statement end_scope
    (174) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN . StatementNoShortIf end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (119) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (120) StatementNoShortIf -> . LabeledStatementNoShortIf
    (121) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (122) StatementNoShortIf -> . WhileStatementNoShortIf
    (123) StatementNoShortIf -> . ForStatementNoShortIf
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (134) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (145) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (159) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (175) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (176) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 420
    IF              shift and go to state 412
    WHILE           shift and go to state 421
    FOR             shift and go to state 422
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 474
    StatementNoShortIf             shift and go to state 537
    StatementWithoutTrailingSubstatement shift and go to state 415
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    LabeledStatementNoShortIf      shift and go to state 416
    IfThenElseStatementNoShortIf   shift and go to state 417
    WhileStatementNoShortIf        shift and go to state 418
    ForStatementNoShortIf          shift and go to state 419
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 529

    (144) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE . begin_scope Statement end_scope
    (145) IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE . begin_scope StatementNoShortIf end_scope
    (292) begin_scope -> .

    IDENTIFIER      reduce using rule 292 (begin_scope -> .)
    IF              reduce using rule 292 (begin_scope -> .)
    WHILE           reduce using rule 292 (begin_scope -> .)
    FOR             reduce using rule 292 (begin_scope -> .)
    LBRACE          reduce using rule 292 (begin_scope -> .)
    SEMI            reduce using rule 292 (begin_scope -> .)
    SWITCH          reduce using rule 292 (begin_scope -> .)
    DO              reduce using rule 292 (begin_scope -> .)
    BREAK           reduce using rule 292 (begin_scope -> .)
    CONTINUE        reduce using rule 292 (begin_scope -> .)
    RETURN          reduce using rule 292 (begin_scope -> .)
    INC             reduce using rule 292 (begin_scope -> .)
    DEC             reduce using rule 292 (begin_scope -> .)
    NEW             reduce using rule 292 (begin_scope -> .)
    SUPER           reduce using rule 292 (begin_scope -> .)
    THIS            reduce using rule 292 (begin_scope -> .)
    LPAREN          reduce using rule 292 (begin_scope -> .)
    DECIMAL_LITERAL reduce using rule 292 (begin_scope -> .)
    HEX_LITERAL     reduce using rule 292 (begin_scope -> .)
    BINARY_LITERAL  reduce using rule 292 (begin_scope -> .)
    FLOAT_LITERAL   reduce using rule 292 (begin_scope -> .)
    BOOL_LITERAL    reduce using rule 292 (begin_scope -> .)
    CHAR_LITERAL    reduce using rule 292 (begin_scope -> .)
    STRING_LITERAL  reduce using rule 292 (begin_scope -> .)

    begin_scope                    shift and go to state 538

state 530

    (163) ForStatement -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN . Statement end_scope
    (171) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN . StatementNoShortIf end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (119) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (120) StatementNoShortIf -> . LabeledStatementNoShortIf
    (121) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (122) StatementNoShortIf -> . WhileStatementNoShortIf
    (123) StatementNoShortIf -> . ForStatementNoShortIf
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (134) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (145) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (159) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (175) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (176) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 420
    IF              shift and go to state 412
    WHILE           shift and go to state 421
    FOR             shift and go to state 422
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 488
    StatementNoShortIf             shift and go to state 539
    StatementWithoutTrailingSubstatement shift and go to state 415
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    LabeledStatementNoShortIf      shift and go to state 416
    IfThenElseStatementNoShortIf   shift and go to state 417
    WhileStatementNoShortIf        shift and go to state 418
    ForStatementNoShortIf          shift and go to state 419
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 531

    (173) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf . end_scope
    (293) end_scope -> .

    ELSE            reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 540

state 532

    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate . RPAREN Statement end_scope
    (169) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate . RPAREN StatementNoShortIf end_scope

    RPAREN          shift and go to state 541


state 533

    (164) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN . Statement end_scope
    (172) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN . StatementNoShortIf end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (119) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (120) StatementNoShortIf -> . LabeledStatementNoShortIf
    (121) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (122) StatementNoShortIf -> . WhileStatementNoShortIf
    (123) StatementNoShortIf -> . ForStatementNoShortIf
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (134) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (145) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (159) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (175) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (176) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 420
    IF              shift and go to state 412
    WHILE           shift and go to state 421
    FOR             shift and go to state 422
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 491
    StatementNoShortIf             shift and go to state 542
    StatementWithoutTrailingSubstatement shift and go to state 415
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    LabeledStatementNoShortIf      shift and go to state 416
    IfThenElseStatementNoShortIf   shift and go to state 417
    WhileStatementNoShortIf        shift and go to state 418
    ForStatementNoShortIf          shift and go to state 419
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 534

    (175) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf . end_scope
    (293) end_scope -> .

    ELSE            reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 543

state 535

    (176) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope .

    ELSE            reduce using rule 176 (ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope .)


state 536

    (162) ForStatement -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN . Statement end_scope
    (170) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN . StatementNoShortIf end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (119) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (120) StatementNoShortIf -> . LabeledStatementNoShortIf
    (121) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (122) StatementNoShortIf -> . WhileStatementNoShortIf
    (123) StatementNoShortIf -> . ForStatementNoShortIf
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (134) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (145) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (159) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (175) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (176) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 420
    IF              shift and go to state 412
    WHILE           shift and go to state 421
    FOR             shift and go to state 422
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 493
    StatementNoShortIf             shift and go to state 544
    StatementWithoutTrailingSubstatement shift and go to state 415
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    LabeledStatementNoShortIf      shift and go to state 416
    IfThenElseStatementNoShortIf   shift and go to state 417
    WhileStatementNoShortIf        shift and go to state 418
    ForStatementNoShortIf          shift and go to state 419
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 537

    (174) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf . end_scope
    (293) end_scope -> .

    ELSE            reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 545

state 538

    (144) IfThenElseStatement -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope . Statement end_scope
    (145) IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope . StatementNoShortIf end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (119) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (120) StatementNoShortIf -> . LabeledStatementNoShortIf
    (121) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (122) StatementNoShortIf -> . WhileStatementNoShortIf
    (123) StatementNoShortIf -> . ForStatementNoShortIf
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (134) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (145) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (159) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (175) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (176) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 420
    IF              shift and go to state 412
    WHILE           shift and go to state 421
    FOR             shift and go to state 422
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    StatementNoShortIf             shift and go to state 546
    Statement                      shift and go to state 501
    StatementWithoutTrailingSubstatement shift and go to state 415
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    LabeledStatementNoShortIf      shift and go to state 416
    IfThenElseStatementNoShortIf   shift and go to state 417
    WhileStatementNoShortIf        shift and go to state 418
    ForStatementNoShortIf          shift and go to state 419
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 539

    (171) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf . end_scope
    (293) end_scope -> .

    ELSE            reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 547

state 540

    (173) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope .

    ELSE            reduce using rule 173 (ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope .)


state 541

    (161) ForStatement -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN . Statement end_scope
    (169) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN . StatementNoShortIf end_scope
    (113) Statement -> . StatementWithoutTrailingSubstatement
    (114) Statement -> . LabeledStatement
    (115) Statement -> . IfThenStatement
    (116) Statement -> . IfThenElseStatement
    (117) Statement -> . WhileStatement
    (118) Statement -> . ForStatement
    (119) StatementNoShortIf -> . StatementWithoutTrailingSubstatement
    (120) StatementNoShortIf -> . LabeledStatementNoShortIf
    (121) StatementNoShortIf -> . IfThenElseStatementNoShortIf
    (122) StatementNoShortIf -> . WhileStatementNoShortIf
    (123) StatementNoShortIf -> . ForStatementNoShortIf
    (124) StatementWithoutTrailingSubstatement -> . Block
    (125) StatementWithoutTrailingSubstatement -> . EmptyStatement
    (126) StatementWithoutTrailingSubstatement -> . ExpressionStatement
    (127) StatementWithoutTrailingSubstatement -> . SwitchStatement
    (128) StatementWithoutTrailingSubstatement -> . DoStatement
    (129) StatementWithoutTrailingSubstatement -> . BreakStatement
    (130) StatementWithoutTrailingSubstatement -> . ContinueStatement
    (131) StatementWithoutTrailingSubstatement -> . ReturnStatement
    (133) LabeledStatement -> . IDENTIFIER COLON Statement
    (143) IfThenStatement -> . IF begin_scope LPAREN Expression RPAREN Statement end_scope
    (144) IfThenElseStatement -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope Statement end_scope
    (158) WhileStatement -> . WHILE begin_scope LPAREN Expression RPAREN Statement end_scope
    (161) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (162) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN Statement end_scope
    (163) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN Statement end_scope
    (164) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN Statement end_scope
    (165) ForStatement -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN Statement end_scope
    (166) ForStatement -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN Statement end_scope
    (167) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN Statement end_scope
    (168) ForStatement -> . FOR begin_scope LPAREN SEMI SEMI RPAREN Statement end_scope
    (134) LabeledStatementNoShortIf -> . IDENTIFIER COLON StatementNoShortIf
    (145) IfThenElseStatementNoShortIf -> . IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope
    (159) WhileStatementNoShortIf -> . WHILE begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope
    (169) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (170) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (171) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (172) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (173) ForStatementNoShortIf -> . FOR begin_scope LPAREN ForInit SEMI SEMI RPAREN StatementNoShortIf end_scope
    (174) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope
    (175) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope
    (176) ForStatementNoShortIf -> . FOR begin_scope LPAREN SEMI SEMI RPAREN StatementNoShortIf end_scope
    (105) Block -> . LBRACE RBRACE
    (106) Block -> . LBRACE BlockStatements RBRACE
    (132) EmptyStatement -> . SEMI
    (135) ExpressionStatement -> . StatementExpression SEMI
    (146) SwitchStatement -> . SWITCH LPAREN Expression RPAREN SwitchBlock
    (160) DoStatement -> . DO begin_scope Statement WHILE LPAREN Expression RPAREN end_scope SEMI
    (182) BreakStatement -> . BREAK IDENTIFIER SEMI
    (183) BreakStatement -> . BREAK SEMI
    (184) ContinueStatement -> . CONTINUE IDENTIFIER SEMI
    (185) ContinueStatement -> . CONTINUE SEMI
    (186) ReturnStatement -> . RETURN Expression SEMI
    (187) ReturnStatement -> . RETURN SEMI
    (136) StatementExpression -> . Assignment
    (137) StatementExpression -> . PreIncrementExpression
    (138) StatementExpression -> . PreDecrementExpression
    (139) StatementExpression -> . PostIncrementExpression
    (140) StatementExpression -> . PostDecrementExpression
    (141) StatementExpression -> . MethodInvocation
    (142) StatementExpression -> . ClassInstanceCreationExpression
    (272) Assignment -> . LeftHandSide AssignmentOperator AssignmentExpression
    (229) PreIncrementExpression -> . INC UnaryExpression
    (230) PreDecrementExpression -> . DEC UnaryExpression
    (222) PostIncrementExpression -> . PostfixExpression INC
    (223) PostDecrementExpression -> . PostfixExpression DEC
    (212) MethodInvocation -> . Name LPAREN ArgumentList RPAREN
    (213) MethodInvocation -> . Name LPAREN RPAREN
    (214) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN ArgumentList RPAREN
    (215) MethodInvocation -> . Primary DOT IDENTIFIER LPAREN RPAREN
    (197) ClassInstanceCreationExpression -> . NEW ClassType LPAREN RPAREN
    (198) ClassInstanceCreationExpression -> . NEW ClassType LPAREN ArgumentList RPAREN
    (273) LeftHandSide -> . Name
    (274) LeftHandSide -> . FieldAccess
    (275) LeftHandSide -> . ArrayAccess
    (218) PostfixExpression -> . Primary
    (219) PostfixExpression -> . Name
    (220) PostfixExpression -> . PostIncrementExpression
    (221) PostfixExpression -> . PostDecrementExpression
    (27) Name -> . SimpleName
    (28) Name -> . QualifiedName
    (188) Primary -> . PrimaryNoNewArray
    (189) Primary -> . ArrayCreationExpression
    (210) FieldAccess -> . Primary DOT Name
    (211) FieldAccess -> . SUPER DOT Name
    (216) ArrayAccess -> . Name LBRACK Expression RBRACK
    (217) ArrayAccess -> . PrimaryNoNewArray LBRACK Expression RBRACK
    (29) SimpleName -> . IDENTIFIER
    (30) QualifiedName -> . Name DOT IDENTIFIER
    (190) PrimaryNoNewArray -> . Literal
    (191) PrimaryNoNewArray -> . THIS
    (192) PrimaryNoNewArray -> . LPAREN Expression RPAREN
    (193) PrimaryNoNewArray -> . ClassInstanceCreationExpression
    (194) PrimaryNoNewArray -> . FieldAccess
    (195) PrimaryNoNewArray -> . MethodInvocation
    (196) PrimaryNoNewArray -> . ArrayAccess
    (201) ArrayCreationExpression -> . NEW PrimitiveType DimExprs Dims
    (202) ArrayCreationExpression -> . NEW PrimitiveType DimExprs
    (203) ArrayCreationExpression -> . NEW ClassType DimExprs Dims
    (204) ArrayCreationExpression -> . NEW ClassType DimExprs
    (2) Literal -> . DECIMAL_LITERAL
    (3) Literal -> . HEX_LITERAL
    (4) Literal -> . BINARY_LITERAL
    (5) Literal -> . FLOAT_LITERAL
    (6) Literal -> . BOOL_LITERAL
    (7) Literal -> . CHAR_LITERAL
    (8) Literal -> . STRING_LITERAL

    IDENTIFIER      shift and go to state 420
    IF              shift and go to state 412
    WHILE           shift and go to state 421
    FOR             shift and go to state 422
    LBRACE          shift and go to state 95
    SEMI            shift and go to state 114
    SWITCH          shift and go to state 136
    DO              shift and go to state 137
    BREAK           shift and go to state 138
    CONTINUE        shift and go to state 139
    RETURN          shift and go to state 140
    INC             shift and go to state 150
    DEC             shift and go to state 151
    NEW             shift and go to state 154
    SUPER           shift and go to state 160
    THIS            shift and go to state 162
    LPAREN          shift and go to state 132
    DECIMAL_LITERAL shift and go to state 163
    HEX_LITERAL     shift and go to state 164
    BINARY_LITERAL  shift and go to state 165
    FLOAT_LITERAL   shift and go to state 166
    BOOL_LITERAL    shift and go to state 167
    CHAR_LITERAL    shift and go to state 168
    STRING_LITERAL  shift and go to state 169

    Statement                      shift and go to state 507
    StatementNoShortIf             shift and go to state 548
    StatementWithoutTrailingSubstatement shift and go to state 415
    LabeledStatement               shift and go to state 116
    IfThenStatement                shift and go to state 117
    IfThenElseStatement            shift and go to state 118
    WhileStatement                 shift and go to state 119
    ForStatement                   shift and go to state 120
    LabeledStatementNoShortIf      shift and go to state 416
    IfThenElseStatementNoShortIf   shift and go to state 417
    WhileStatementNoShortIf        shift and go to state 418
    ForStatementNoShortIf          shift and go to state 419
    Block                          shift and go to state 122
    EmptyStatement                 shift and go to state 123
    ExpressionStatement            shift and go to state 124
    SwitchStatement                shift and go to state 125
    DoStatement                    shift and go to state 126
    BreakStatement                 shift and go to state 127
    ContinueStatement              shift and go to state 128
    ReturnStatement                shift and go to state 129
    StatementExpression            shift and go to state 135
    Assignment                     shift and go to state 141
    PreIncrementExpression         shift and go to state 142
    PreDecrementExpression         shift and go to state 143
    PostIncrementExpression        shift and go to state 144
    PostDecrementExpression        shift and go to state 145
    MethodInvocation               shift and go to state 146
    ClassInstanceCreationExpression shift and go to state 147
    LeftHandSide                   shift and go to state 149
    PostfixExpression              shift and go to state 152
    Name                           shift and go to state 280
    Primary                        shift and go to state 153
    FieldAccess                    shift and go to state 156
    ArrayAccess                    shift and go to state 157
    SimpleName                     shift and go to state 155
    QualifiedName                  shift and go to state 78
    PrimaryNoNewArray              shift and go to state 158
    ArrayCreationExpression        shift and go to state 159
    Literal                        shift and go to state 161

state 542

    (172) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf . end_scope
    (293) end_scope -> .

    ELSE            reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 549

state 543

    (175) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope .

    ELSE            reduce using rule 175 (ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope .)


state 544

    (170) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf . end_scope
    (293) end_scope -> .

    ELSE            reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 550

state 545

    (174) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope .

    ELSE            reduce using rule 174 (ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI RPAREN StatementNoShortIf end_scope .)


state 546

    (145) IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf . end_scope
    (293) end_scope -> .

    ELSE            reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 551

state 547

    (171) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope .

    ELSE            reduce using rule 171 (ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI SEMI ForUpdate RPAREN StatementNoShortIf end_scope .)


state 548

    (169) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf . end_scope
    (293) end_scope -> .

    ELSE            reduce using rule 293 (end_scope -> .)

    end_scope                      shift and go to state 552

state 549

    (172) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope .

    ELSE            reduce using rule 172 (ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI RPAREN StatementNoShortIf end_scope .)


state 550

    (170) ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope .

    ELSE            reduce using rule 170 (ForStatementNoShortIf -> FOR begin_scope LPAREN SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope .)


state 551

    (145) IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope .

    ELSE            reduce using rule 145 (IfThenElseStatementNoShortIf -> IF begin_scope LPAREN Expression RPAREN StatementNoShortIf end_scope ELSE begin_scope StatementNoShortIf end_scope .)


state 552

    (169) ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope .

    ELSE            reduce using rule 169 (ForStatementNoShortIf -> FOR begin_scope LPAREN ForInit SEMI Expression SEMI ForUpdate RPAREN StatementNoShortIf end_scope .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for STATIC in state 43 resolved as shift
WARNING: shift/reduce conflict for STATIC in state 47 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 59 resolved as shift
WARNING: shift/reduce conflict for DOT in state 327 resolved as shift
WARNING: shift/reduce conflict for DOT in state 334 resolved as shift
